Search.setIndex({"docnames": ["auto_gallery/index", "auto_gallery/sg_execution_times", "auto_gallery/simclr_stl10", "auto_gallery/surfify/index", "auto_gallery/surfify/plot_augmentation", "auto_gallery/surfify/plot_match_icosahedron", "auto_gallery/surfify/plot_project_texture", "auto_gallery/surfify/plot_spherical_neighbors", "auto_gallery/surfify/plot_unet_segmentation", "auto_gallery/surfify/sg_execution_times", "generated/documentation", "generated/installation", "generated/nidl", "generated/nidl.callbacks", "generated/nidl.callbacks.check_typing.BatchTypingCallback", "generated/nidl.estimators", "generated/nidl.estimators.BaseEstimator", "generated/nidl.estimators.ClassifierMixin", "generated/nidl.estimators.ClusterMixin", "generated/nidl.estimators.RegressorMixin", "generated/nidl.estimators.TransformerMixin", "generated/nidl.estimators.base.BaseEstimator", "generated/nidl.estimators.base.ClassifierMixin", "generated/nidl.estimators.base.ClusterMixin", "generated/nidl.estimators.base.RegressorMixin", "generated/nidl.estimators.base.TransformerMixin", "generated/nidl.estimators.linear", "generated/nidl.estimators.linear.LogisticRegression", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression", "generated/nidl.estimators.ssl", "generated/nidl.estimators.ssl.SimCLR", "generated/nidl.estimators.ssl.simclr.SimCLR", "generated/nidl.experiment.fetch_experiment", "generated/nidl.experiment.filter_config", "generated/nidl.experiment.get_env", "generated/nidl.experiment.load_interface", "generated/nidl.experiment.update_params", "generated/nidl.utils", "generated/nidl.utils.Bunch", "generated/nidl.utils.Weights", "generated/nidl.utils.bunch.Bunch", "generated/nidl.utils.color.Colored", "generated/nidl.utils.color.attr", "generated/nidl.utils.color.fg", "generated/nidl.utils.color.hex", "generated/nidl.utils.color.print_multicolor", "generated/nidl.utils.color.print_result", "generated/nidl.utils.color.print_subtitle", "generated/nidl.utils.color.print_title", "generated/nidl.utils.color.print_warning", "generated/nidl.utils.color.random_stylize", "generated/nidl.utils.color.stylize", "generated/nidl.utils.print_multicolor", "generated/nidl.utils.validation._AvailableIfDescriptor", "generated/nidl.utils.validation._estimator_is", "generated/nidl.utils.validation.available_if", "generated/nidl.utils.validation.check_is_fitted", "generated/nidl.utils.weights.Weights", "generated/search", "generated/surfify", "generated/surfify.augmentation", "generated/surfify.augmentation.BaseTransformer", "generated/surfify.augmentation.GroupMixUp", "generated/surfify.augmentation.HemiMixUp", "generated/surfify.augmentation.SurfBlur", "generated/surfify.augmentation.SurfCutOut", "generated/surfify.augmentation.SurfNoise", "generated/surfify.augmentation.SurfRotation", "generated/surfify.augmentation.Transformer", "generated/surfify.augmentation.apply_chained_transforms", "generated/surfify.augmentation.base.SurfBlur", "generated/surfify.augmentation.base.SurfCutOut", "generated/surfify.augmentation.base.SurfNoise", "generated/surfify.augmentation.base.SurfRotation", "generated/surfify.augmentation.interval", "generated/surfify.augmentation.mixup.GroupMixUp", "generated/surfify.augmentation.mixup.HemiMixUp", "generated/surfify.augmentation.mixup.MixUpAugmentation", "generated/surfify.augmentation.multichannel_augmentation", "generated/surfify.augmentation.utils.BaseTransformer", "generated/surfify.augmentation.utils.RandomAugmentation", "generated/surfify.augmentation.utils.Transformer", "generated/surfify.augmentation.utils.apply_chained_transforms", "generated/surfify.augmentation.utils.interval", "generated/surfify.augmentation.utils.listify", "generated/surfify.augmentation.utils.multichannel_augmentation", "generated/surfify.datasets", "generated/surfify.datasets.ClassificationDataset", "generated/surfify.datasets.GenericSurfDataset", "generated/surfify.datasets._generic.GenericSurfDataset", "generated/surfify.datasets._samples_generator.ClassificationDataset", "generated/surfify.datasets._samples_generator.make_classification", "generated/surfify.datasets.make_classification", "generated/surfify.losses", "generated/surfify.losses.SphericalVAELoss", "generated/surfify.losses.vae.SphericalVAELoss", "generated/surfify.losses.vae.log_likelihood", "generated/surfify.models", "generated/surfify.models.HemiFusionDecoder", "generated/surfify.models.HemiFusionEncoder", "generated/surfify.models.SphericalBase", "generated/surfify.models.SphericalGUNet", "generated/surfify.models.SphericalGVGG", "generated/surfify.models.SphericalGVGG11", "generated/surfify.models.SphericalGVGG11BN", "generated/surfify.models.SphericalGVGG13", "generated/surfify.models.SphericalGVGG13BN", "generated/surfify.models.SphericalGVGG16", "generated/surfify.models.SphericalGVGG16BN", "generated/surfify.models.SphericalGVGG19", "generated/surfify.models.SphericalGVGG19BN", "generated/surfify.models.SphericalHemiFusionDecoder", "generated/surfify.models.SphericalHemiFusionEncoder", "generated/surfify.models.SphericalUNet", "generated/surfify.models.SphericalVAE", "generated/surfify.models.SphericalVGG", "generated/surfify.models.SphericalVGG11", "generated/surfify.models.SphericalVGG11BN", "generated/surfify.models.SphericalVGG13", "generated/surfify.models.SphericalVGG13BN", "generated/surfify.models.SphericalVGG16", "generated/surfify.models.SphericalVGG16BN", "generated/surfify.models.SphericalVGG19", "generated/surfify.models.SphericalVGG19BN", "generated/surfify.models.base.SphericalBase", "generated/surfify.models.unet.DownBlock", "generated/surfify.models.unet.DownGBlock", "generated/surfify.models.unet.GraphicalUNet", "generated/surfify.models.unet.SphericalGUNet", "generated/surfify.models.unet.SphericalUNet", "generated/surfify.models.unet.UpBlock", "generated/surfify.models.unet.UpGBlock", "generated/surfify.models.vae.HemiFusionDecoder", "generated/surfify.models.vae.HemiFusionEncoder", "generated/surfify.models.vae.SphericalHemiFusionDecoder", "generated/surfify.models.vae.SphericalHemiFusionEncoder", "generated/surfify.models.vae.SphericalVAE", "generated/surfify.models.vae.compute_output_dim", "generated/surfify.models.vgg.SphericalGVGG", "generated/surfify.models.vgg.SphericalGVGG11", "generated/surfify.models.vgg.SphericalGVGG11BN", "generated/surfify.models.vgg.SphericalGVGG13", "generated/surfify.models.vgg.SphericalGVGG13BN", "generated/surfify.models.vgg.SphericalGVGG16", "generated/surfify.models.vgg.SphericalGVGG16BN", "generated/surfify.models.vgg.SphericalGVGG19", "generated/surfify.models.vgg.SphericalGVGG19BN", "generated/surfify.models.vgg.SphericalVGG", "generated/surfify.models.vgg.SphericalVGG11", "generated/surfify.models.vgg.SphericalVGG11BN", "generated/surfify.models.vgg.SphericalVGG13", "generated/surfify.models.vgg.SphericalVGG13BN", "generated/surfify.models.vgg.SphericalVGG16", "generated/surfify.models.vgg.SphericalVGG16BN", "generated/surfify.models.vgg.SphericalVGG19", "generated/surfify.models.vgg.SphericalVGG19BN", "generated/surfify.models.vgg.class_factory", "generated/surfify.nn", "generated/surfify.nn.IcoDiNeConv", "generated/surfify.nn.IcoFixIndexUpSample", "generated/surfify.nn.IcoGenericUpConv", "generated/surfify.nn.IcoMaxIndexUpSample", "generated/surfify.nn.IcoPool", "generated/surfify.nn.IcoRePaConv", "generated/surfify.nn.IcoSpMaConv", "generated/surfify.nn.IcoSpMaConvTranspose", "generated/surfify.nn.IcoUpConv", "generated/surfify.nn.IcoUpSample", "generated/surfify.nn.functional.circular_pad", "generated/surfify.nn.modules.IcoDiNeConv", "generated/surfify.nn.modules.IcoFixIndexUpSample", "generated/surfify.nn.modules.IcoGenericUpConv", "generated/surfify.nn.modules.IcoMaxIndexUpSample", "generated/surfify.nn.modules.IcoPool", "generated/surfify.nn.modules.IcoRePaConv", "generated/surfify.nn.modules.IcoSpMaConv", "generated/surfify.nn.modules.IcoSpMaConvTranspose", "generated/surfify.nn.modules.IcoUpConv", "generated/surfify.nn.modules.IcoUpSample", "generated/surfify.plotting", "generated/surfify.plotting.plot_trisurf", "generated/surfify.plotting.surface.plot_trisurf", "generated/surfify.utils", "generated/surfify.utils.cart2sph", "generated/surfify.utils.coord.cart2sph", "generated/surfify.utils.coord.find_corresponding_order", "generated/surfify.utils.coord.grid2text", "generated/surfify.utils.coord.ico2ico", "generated/surfify.utils.coord.sph2cart", "generated/surfify.utils.coord.text2grid", "generated/surfify.utils.coord.text2ico", "generated/surfify.utils.debug_msg", "generated/surfify.utils.downsample", "generated/surfify.utils.downsample_data", "generated/surfify.utils.downsample_ico", "generated/surfify.utils.find_neighbors", "generated/surfify.utils.find_rotation_interpol_coefs", "generated/surfify.utils.get_logger", "generated/surfify.utils.get_rectangular_projection", "generated/surfify.utils.grid2text", "generated/surfify.utils.ico2ico", "generated/surfify.utils.icosahedron", "generated/surfify.utils.interpolate", "generated/surfify.utils.interpolate_data", "generated/surfify.utils.io.HidePrints", "generated/surfify.utils.io.compute_and_store", "generated/surfify.utils.io.decompose_cifti", "generated/surfify.utils.io.read_freesurfer", "generated/surfify.utils.io.read_gifti", "generated/surfify.utils.io.surf_data_from_cifti", "generated/surfify.utils.io.ungzip", "generated/surfify.utils.io.volume_from_cifti", "generated/surfify.utils.io.write_freesurfer", "generated/surfify.utils.io.write_gifti", "generated/surfify.utils.min_depth_to_get_n_neighbors", "generated/surfify.utils.neighbors", "generated/surfify.utils.neighbors_rec", "generated/surfify.utils.number_of_ico_vertices", "generated/surfify.utils.number_of_neighbors", "generated/surfify.utils.order_of_ico_from_vertices", "generated/surfify.utils.order_triangles", "generated/surfify.utils.patch_tri", "generated/surfify.utils.rotate_data", "generated/surfify.utils.sampling._patch_tri_iter", "generated/surfify.utils.sampling.build_freesurfer_ico", "generated/surfify.utils.sampling.build_fslr_ref", "generated/surfify.utils.sampling.downsample", "generated/surfify.utils.sampling.downsample_data", "generated/surfify.utils.sampling.downsample_ico", "generated/surfify.utils.sampling.find_neighbors", "generated/surfify.utils.sampling.find_rotation_interpol_coefs", "generated/surfify.utils.sampling.get_angle_with_xaxis", "generated/surfify.utils.sampling.get_rectangular_projection", "generated/surfify.utils.sampling.icosahedron", "generated/surfify.utils.sampling.interpolate", "generated/surfify.utils.sampling.interpolate_data", "generated/surfify.utils.sampling.middle_point", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors", "generated/surfify.utils.sampling.neighbors", "generated/surfify.utils.sampling.neighbors_rec", "generated/surfify.utils.sampling.normalize", "generated/surfify.utils.sampling.number_of_ico_vertices", "generated/surfify.utils.sampling.number_of_neighbors", "generated/surfify.utils.sampling.order_of_ico_from_vertices", "generated/surfify.utils.sampling.order_triangles", "generated/surfify.utils.sampling.patch_tri", "generated/surfify.utils.sampling.rotate_data", "generated/surfify.utils.sampling.triangles_to_edges", "generated/surfify.utils.sampling.vertex_adjacency_graph", "generated/surfify.utils.setup_logging", "generated/surfify.utils.sph2cart", "generated/surfify.utils.text2grid", "generated/surfify.utils.text2ico", "index", "sg_execution_times"], "filenames": ["auto_gallery/index.rst", "auto_gallery/sg_execution_times.rst", "auto_gallery/simclr_stl10.rst", "auto_gallery/surfify/index.rst", "auto_gallery/surfify/plot_augmentation.rst", "auto_gallery/surfify/plot_match_icosahedron.rst", "auto_gallery/surfify/plot_project_texture.rst", "auto_gallery/surfify/plot_spherical_neighbors.rst", "auto_gallery/surfify/plot_unet_segmentation.rst", "auto_gallery/surfify/sg_execution_times.rst", "generated/documentation.rst", "generated/installation.rst", "generated/nidl.rst", "generated/nidl.callbacks.rst", "generated/nidl.callbacks.check_typing.BatchTypingCallback.rst", "generated/nidl.estimators.rst", "generated/nidl.estimators.BaseEstimator.rst", "generated/nidl.estimators.ClassifierMixin.rst", "generated/nidl.estimators.ClusterMixin.rst", "generated/nidl.estimators.RegressorMixin.rst", "generated/nidl.estimators.TransformerMixin.rst", "generated/nidl.estimators.base.BaseEstimator.rst", "generated/nidl.estimators.base.ClassifierMixin.rst", "generated/nidl.estimators.base.ClusterMixin.rst", "generated/nidl.estimators.base.RegressorMixin.rst", "generated/nidl.estimators.base.TransformerMixin.rst", "generated/nidl.estimators.linear.rst", "generated/nidl.estimators.linear.LogisticRegression.rst", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression.rst", "generated/nidl.estimators.ssl.rst", "generated/nidl.estimators.ssl.SimCLR.rst", "generated/nidl.estimators.ssl.simclr.SimCLR.rst", "generated/nidl.experiment.fetch_experiment.rst", "generated/nidl.experiment.filter_config.rst", "generated/nidl.experiment.get_env.rst", "generated/nidl.experiment.load_interface.rst", "generated/nidl.experiment.update_params.rst", "generated/nidl.utils.rst", "generated/nidl.utils.Bunch.rst", "generated/nidl.utils.Weights.rst", "generated/nidl.utils.bunch.Bunch.rst", "generated/nidl.utils.color.Colored.rst", "generated/nidl.utils.color.attr.rst", "generated/nidl.utils.color.fg.rst", "generated/nidl.utils.color.hex.rst", "generated/nidl.utils.color.print_multicolor.rst", "generated/nidl.utils.color.print_result.rst", "generated/nidl.utils.color.print_subtitle.rst", "generated/nidl.utils.color.print_title.rst", "generated/nidl.utils.color.print_warning.rst", "generated/nidl.utils.color.random_stylize.rst", "generated/nidl.utils.color.stylize.rst", "generated/nidl.utils.print_multicolor.rst", "generated/nidl.utils.validation._AvailableIfDescriptor.rst", "generated/nidl.utils.validation._estimator_is.rst", "generated/nidl.utils.validation.available_if.rst", "generated/nidl.utils.validation.check_is_fitted.rst", "generated/nidl.utils.weights.Weights.rst", "generated/search.rst", "generated/surfify.rst", "generated/surfify.augmentation.rst", "generated/surfify.augmentation.BaseTransformer.rst", "generated/surfify.augmentation.GroupMixUp.rst", "generated/surfify.augmentation.HemiMixUp.rst", "generated/surfify.augmentation.SurfBlur.rst", "generated/surfify.augmentation.SurfCutOut.rst", "generated/surfify.augmentation.SurfNoise.rst", "generated/surfify.augmentation.SurfRotation.rst", "generated/surfify.augmentation.Transformer.rst", "generated/surfify.augmentation.apply_chained_transforms.rst", "generated/surfify.augmentation.base.SurfBlur.rst", "generated/surfify.augmentation.base.SurfCutOut.rst", "generated/surfify.augmentation.base.SurfNoise.rst", "generated/surfify.augmentation.base.SurfRotation.rst", "generated/surfify.augmentation.interval.rst", "generated/surfify.augmentation.mixup.GroupMixUp.rst", "generated/surfify.augmentation.mixup.HemiMixUp.rst", "generated/surfify.augmentation.mixup.MixUpAugmentation.rst", "generated/surfify.augmentation.multichannel_augmentation.rst", "generated/surfify.augmentation.utils.BaseTransformer.rst", "generated/surfify.augmentation.utils.RandomAugmentation.rst", "generated/surfify.augmentation.utils.Transformer.rst", "generated/surfify.augmentation.utils.apply_chained_transforms.rst", "generated/surfify.augmentation.utils.interval.rst", "generated/surfify.augmentation.utils.listify.rst", "generated/surfify.augmentation.utils.multichannel_augmentation.rst", "generated/surfify.datasets.rst", "generated/surfify.datasets.ClassificationDataset.rst", "generated/surfify.datasets.GenericSurfDataset.rst", "generated/surfify.datasets._generic.GenericSurfDataset.rst", "generated/surfify.datasets._samples_generator.ClassificationDataset.rst", "generated/surfify.datasets._samples_generator.make_classification.rst", "generated/surfify.datasets.make_classification.rst", "generated/surfify.losses.rst", "generated/surfify.losses.SphericalVAELoss.rst", "generated/surfify.losses.vae.SphericalVAELoss.rst", "generated/surfify.losses.vae.log_likelihood.rst", "generated/surfify.models.rst", "generated/surfify.models.HemiFusionDecoder.rst", "generated/surfify.models.HemiFusionEncoder.rst", "generated/surfify.models.SphericalBase.rst", "generated/surfify.models.SphericalGUNet.rst", "generated/surfify.models.SphericalGVGG.rst", "generated/surfify.models.SphericalGVGG11.rst", "generated/surfify.models.SphericalGVGG11BN.rst", "generated/surfify.models.SphericalGVGG13.rst", "generated/surfify.models.SphericalGVGG13BN.rst", "generated/surfify.models.SphericalGVGG16.rst", "generated/surfify.models.SphericalGVGG16BN.rst", "generated/surfify.models.SphericalGVGG19.rst", "generated/surfify.models.SphericalGVGG19BN.rst", "generated/surfify.models.SphericalHemiFusionDecoder.rst", "generated/surfify.models.SphericalHemiFusionEncoder.rst", "generated/surfify.models.SphericalUNet.rst", "generated/surfify.models.SphericalVAE.rst", "generated/surfify.models.SphericalVGG.rst", "generated/surfify.models.SphericalVGG11.rst", "generated/surfify.models.SphericalVGG11BN.rst", "generated/surfify.models.SphericalVGG13.rst", "generated/surfify.models.SphericalVGG13BN.rst", "generated/surfify.models.SphericalVGG16.rst", "generated/surfify.models.SphericalVGG16BN.rst", "generated/surfify.models.SphericalVGG19.rst", "generated/surfify.models.SphericalVGG19BN.rst", "generated/surfify.models.base.SphericalBase.rst", "generated/surfify.models.unet.DownBlock.rst", "generated/surfify.models.unet.DownGBlock.rst", "generated/surfify.models.unet.GraphicalUNet.rst", "generated/surfify.models.unet.SphericalGUNet.rst", "generated/surfify.models.unet.SphericalUNet.rst", "generated/surfify.models.unet.UpBlock.rst", "generated/surfify.models.unet.UpGBlock.rst", "generated/surfify.models.vae.HemiFusionDecoder.rst", "generated/surfify.models.vae.HemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalHemiFusionDecoder.rst", "generated/surfify.models.vae.SphericalHemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalVAE.rst", "generated/surfify.models.vae.compute_output_dim.rst", "generated/surfify.models.vgg.SphericalGVGG.rst", "generated/surfify.models.vgg.SphericalGVGG11.rst", "generated/surfify.models.vgg.SphericalGVGG11BN.rst", "generated/surfify.models.vgg.SphericalGVGG13.rst", "generated/surfify.models.vgg.SphericalGVGG13BN.rst", "generated/surfify.models.vgg.SphericalGVGG16.rst", "generated/surfify.models.vgg.SphericalGVGG16BN.rst", "generated/surfify.models.vgg.SphericalGVGG19.rst", "generated/surfify.models.vgg.SphericalGVGG19BN.rst", "generated/surfify.models.vgg.SphericalVGG.rst", "generated/surfify.models.vgg.SphericalVGG11.rst", "generated/surfify.models.vgg.SphericalVGG11BN.rst", "generated/surfify.models.vgg.SphericalVGG13.rst", "generated/surfify.models.vgg.SphericalVGG13BN.rst", "generated/surfify.models.vgg.SphericalVGG16.rst", "generated/surfify.models.vgg.SphericalVGG16BN.rst", "generated/surfify.models.vgg.SphericalVGG19.rst", "generated/surfify.models.vgg.SphericalVGG19BN.rst", "generated/surfify.models.vgg.class_factory.rst", "generated/surfify.nn.rst", "generated/surfify.nn.IcoDiNeConv.rst", "generated/surfify.nn.IcoFixIndexUpSample.rst", "generated/surfify.nn.IcoGenericUpConv.rst", "generated/surfify.nn.IcoMaxIndexUpSample.rst", "generated/surfify.nn.IcoPool.rst", "generated/surfify.nn.IcoRePaConv.rst", "generated/surfify.nn.IcoSpMaConv.rst", "generated/surfify.nn.IcoSpMaConvTranspose.rst", "generated/surfify.nn.IcoUpConv.rst", "generated/surfify.nn.IcoUpSample.rst", "generated/surfify.nn.functional.circular_pad.rst", "generated/surfify.nn.modules.IcoDiNeConv.rst", "generated/surfify.nn.modules.IcoFixIndexUpSample.rst", "generated/surfify.nn.modules.IcoGenericUpConv.rst", "generated/surfify.nn.modules.IcoMaxIndexUpSample.rst", "generated/surfify.nn.modules.IcoPool.rst", "generated/surfify.nn.modules.IcoRePaConv.rst", "generated/surfify.nn.modules.IcoSpMaConv.rst", "generated/surfify.nn.modules.IcoSpMaConvTranspose.rst", "generated/surfify.nn.modules.IcoUpConv.rst", "generated/surfify.nn.modules.IcoUpSample.rst", "generated/surfify.plotting.rst", "generated/surfify.plotting.plot_trisurf.rst", "generated/surfify.plotting.surface.plot_trisurf.rst", "generated/surfify.utils.rst", "generated/surfify.utils.cart2sph.rst", "generated/surfify.utils.coord.cart2sph.rst", "generated/surfify.utils.coord.find_corresponding_order.rst", "generated/surfify.utils.coord.grid2text.rst", "generated/surfify.utils.coord.ico2ico.rst", "generated/surfify.utils.coord.sph2cart.rst", "generated/surfify.utils.coord.text2grid.rst", "generated/surfify.utils.coord.text2ico.rst", "generated/surfify.utils.debug_msg.rst", "generated/surfify.utils.downsample.rst", "generated/surfify.utils.downsample_data.rst", "generated/surfify.utils.downsample_ico.rst", "generated/surfify.utils.find_neighbors.rst", "generated/surfify.utils.find_rotation_interpol_coefs.rst", "generated/surfify.utils.get_logger.rst", "generated/surfify.utils.get_rectangular_projection.rst", "generated/surfify.utils.grid2text.rst", "generated/surfify.utils.ico2ico.rst", "generated/surfify.utils.icosahedron.rst", "generated/surfify.utils.interpolate.rst", "generated/surfify.utils.interpolate_data.rst", "generated/surfify.utils.io.HidePrints.rst", "generated/surfify.utils.io.compute_and_store.rst", "generated/surfify.utils.io.decompose_cifti.rst", "generated/surfify.utils.io.read_freesurfer.rst", "generated/surfify.utils.io.read_gifti.rst", "generated/surfify.utils.io.surf_data_from_cifti.rst", "generated/surfify.utils.io.ungzip.rst", "generated/surfify.utils.io.volume_from_cifti.rst", "generated/surfify.utils.io.write_freesurfer.rst", "generated/surfify.utils.io.write_gifti.rst", "generated/surfify.utils.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.neighbors.rst", "generated/surfify.utils.neighbors_rec.rst", "generated/surfify.utils.number_of_ico_vertices.rst", "generated/surfify.utils.number_of_neighbors.rst", "generated/surfify.utils.order_of_ico_from_vertices.rst", "generated/surfify.utils.order_triangles.rst", "generated/surfify.utils.patch_tri.rst", "generated/surfify.utils.rotate_data.rst", "generated/surfify.utils.sampling._patch_tri_iter.rst", "generated/surfify.utils.sampling.build_freesurfer_ico.rst", "generated/surfify.utils.sampling.build_fslr_ref.rst", "generated/surfify.utils.sampling.downsample.rst", "generated/surfify.utils.sampling.downsample_data.rst", "generated/surfify.utils.sampling.downsample_ico.rst", "generated/surfify.utils.sampling.find_neighbors.rst", "generated/surfify.utils.sampling.find_rotation_interpol_coefs.rst", "generated/surfify.utils.sampling.get_angle_with_xaxis.rst", "generated/surfify.utils.sampling.get_rectangular_projection.rst", "generated/surfify.utils.sampling.icosahedron.rst", "generated/surfify.utils.sampling.interpolate.rst", "generated/surfify.utils.sampling.interpolate_data.rst", "generated/surfify.utils.sampling.middle_point.rst", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.sampling.neighbors.rst", "generated/surfify.utils.sampling.neighbors_rec.rst", "generated/surfify.utils.sampling.normalize.rst", "generated/surfify.utils.sampling.number_of_ico_vertices.rst", "generated/surfify.utils.sampling.number_of_neighbors.rst", "generated/surfify.utils.sampling.order_of_ico_from_vertices.rst", "generated/surfify.utils.sampling.order_triangles.rst", "generated/surfify.utils.sampling.patch_tri.rst", "generated/surfify.utils.sampling.rotate_data.rst", "generated/surfify.utils.sampling.triangles_to_edges.rst", "generated/surfify.utils.sampling.vertex_adjacency_graph.rst", "generated/surfify.utils.setup_logging.rst", "generated/surfify.utils.sph2cart.rst", "generated/surfify.utils.text2grid.rst", "generated/surfify.utils.text2ico.rst", "index.rst", "sg_execution_times.rst"], "titles": ["Use Cases", "Computation times", "Self-Supervised Contrastive Learning with SimCLR", "Spherical Modules Use Cases", "Spherical augmentations", "Icosahedron matching", "Project texture", "Spherical neighbors", "UNet segmentation", "Computation times", "API documentation of NIDL", "Installing <cite>nidl</cite>", "API documentation of <em>nidl</em>", "API documentation of <em>nidl.callbacks</em>", "&lt;no title&gt;", "API documentation of <em>nidl.estimators</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.estimators.linear</em>", "Examples", "Examples", "API documentation of <em>nidl.estimators.ssl</em>", "Examples", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.utils</em>", "&lt;no title&gt;", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Examples", "Search in API documentation of NIDL", "API documentation of <em>surfify</em>", "API documentation of <em>surfify.augmentation</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.losses</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.models</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.nn</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.plotting</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computation times"], "terms": {"self": [0, 1, 10, 27, 28, 29, 30, 31, 39, 53, 55, 57, 254], "supervis": [0, 1, 10, 27, 28, 29, 30, 31, 39, 57, 254], "contrast": [0, 1, 27, 28, 30, 31, 39, 57, 88, 89, 254], "learn": [0, 1, 27, 28, 30, 31, 39, 57, 97, 114, 136, 158, 169, 253, 254], "simclr": [0, 1, 10, 27, 28, 30, 31, 39, 57, 58, 254], "neighbor": [0, 3, 4, 9, 10, 58, 62, 64, 65, 70, 71, 75, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 166, 169, 171, 172, 173, 174, 177, 182, 186, 189, 192, 195, 196, 199, 202, 214, 215, 216, 218, 222, 226, 229, 230, 234, 237, 238, 239, 242, 246, 248, 251, 254], "unet": [0, 3, 9, 10, 58, 101, 113, 125, 126, 127, 128, 129, 130, 131, 254], "segment": [0, 3, 9, 254], "project": [0, 3, 4, 5, 7, 9, 11, 30, 31, 32, 67, 73, 187, 190, 192, 195, 198, 200, 201, 215, 216, 221, 226, 229, 231, 232, 233, 236, 238, 239, 245, 252, 254], "textur": [0, 3, 4, 9, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 98, 99, 102, 111, 112, 114, 115, 132, 133, 134, 135, 136, 138, 147, 180, 181, 186, 189, 190, 193, 199, 202, 203, 222, 227, 234, 235, 246, 251, 252, 254], "icosahedron": [0, 3, 4, 6, 7, 8, 9, 10, 58, 64, 65, 67, 70, 71, 73, 87, 90, 91, 92, 97, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254], "match": [0, 3, 9, 185, 190, 252, 254], "augment": [0, 3, 9, 10, 30, 31, 32, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 254], "download": [0, 2, 4, 5, 6, 7, 8, 37, 39, 57], "all": [0, 2, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 101, 113, 127, 128, 129, 163, 164, 165, 174, 175, 176, 254], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 38, 40, 55, 100, 102, 113, 114, 115, 124, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254], "python": [0, 2, 4, 5, 6, 7, 8, 53], "sourc": [0, 2, 4, 5, 6, 7, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "code": [0, 2, 4, 5, 6, 7, 8, 14, 32, 35, 50, 51], "auto_gallery_python": 0, "zip": [0, 2, 4, 5, 6, 7, 8, 210], "jupyt": [0, 2, 4, 5, 6, 7, 8], "notebook": [0, 2, 4, 5, 6, 7, 8], "auto_gallery_jupyt": 0, "galleri": [0, 2, 4, 5, 6, 7, 8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254], "gener": [0, 2, 4, 5, 6, 7, 8, 10, 27, 28, 30, 31, 77, 86, 87, 90, 91, 92, 97, 189, 195, 210, 212, 213, 224, 225, 229, 251], "sphinx": [0, 2, 4, 5, 6, 7, 8], "00": [1, 9, 254], "000": [1, 2, 254], "total": [1, 4, 5, 6, 7, 8, 9, 254], "execut": [1, 9, 205, 254], "1": [1, 2, 4, 5, 6, 7, 8, 9, 27, 28, 30, 31, 32, 38, 40, 55, 61, 62, 65, 71, 75, 79, 80, 87, 90, 91, 92, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 175, 176, 177, 180, 181, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 224, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 248, 251, 252, 254], "file": [1, 9, 32, 39, 57, 88, 89, 206, 207, 208, 210, 212, 213, 249, 253, 254], "from": [1, 2, 4, 5, 6, 7, 8, 9, 11, 16, 21, 27, 28, 30, 31, 32, 38, 40, 55, 62, 65, 71, 75, 88, 89, 98, 100, 101, 102, 113, 114, 115, 124, 128, 129, 132, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 251, 252, 254], "auto_galleri": [1, 9], "mem": [1, 9, 254], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 254], "simclr_stl10": [1, 2, 254], "py": [1, 2, 4, 5, 6, 7, 8, 9, 254], "0": [1, 2, 4, 5, 6, 7, 8, 14, 27, 28, 30, 31, 32, 55, 61, 65, 67, 71, 73, 79, 80, 100, 114, 124, 127, 136, 159, 164, 165, 170, 175, 176, 180, 181, 185, 187, 190, 192, 195, 200, 215, 216, 220, 221, 222, 226, 229, 238, 239, 244, 245, 246, 248, 252, 254], "go": [2, 4, 5, 6, 7, 8], "end": [2, 4, 5, 6, 7, 8, 27, 28, 30, 31, 50, 51, 56], "full": [2, 4, 5, 6, 7, 8, 10, 194, 228], "http": [2, 11, 53, 97, 209, 211], "uvadlc": 2, "readthedoc": 2, "io": [2, 10, 58, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "In": [2, 27, 28, 30, 31, 36, 101, 113, 128, 129, 156], "thi": [2, 5, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "tutori": [2, 11], "we": [2, 5, 6, 8, 27, 28, 30, 31, 54, 156, 168, 209, 211], "take": [2, 30, 31, 127, 137, 163, 164, 165, 174, 175, 176], "closer": [2, 30, 31], "look": [2, 30, 31, 195, 229], "also": [2, 10, 16, 21, 27, 28, 30, 31, 53, 86, 88, 89, 205, 253], "sometim": [2, 38, 40], "call": [2, 14, 16, 21, 27, 28, 30, 31, 56, 88, 89, 127, 163, 164, 165, 174, 175, 176, 205, 222, 246], "unsupervis": 2, "describ": [2, 30, 31, 32, 253], "scenario": 2, "where": [2, 6, 30, 31, 32, 39, 57, 88, 89, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 180, 181, 189, 248, 251], "have": [2, 5, 6, 14, 27, 28, 30, 31, 205, 215, 238], "given": [2, 39, 56, 57, 96, 98, 132, 205, 222, 246, 247, 248], "input": [2, 8, 14, 32, 34, 39, 57, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 82, 84, 88, 89, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 185, 186, 189, 190, 199, 205, 207, 208, 223, 251, 252], "accompani": 2, "label": [2, 6, 27, 28, 91, 92, 180, 181], "classic": [2, 113, 129, 130], "wai": [2, 16, 21, 215, 238, 253], "howev": 2, "still": 2, "contain": [2, 27, 28, 30, 31, 32, 38, 40, 88, 89, 100, 124, 137, 180, 181, 205, 221, 245], "lot": 2, "inform": [2, 32, 88, 89, 97, 100, 124], "which": [2, 16, 21, 27, 28, 30, 31, 56, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 185, 195, 222, 229, 246], "can": [2, 5, 27, 28, 30, 31, 32, 54, 61, 68, 79, 81, 88, 89, 101, 102, 113, 114, 115, 127, 128, 129, 136, 137, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 204, 205], "how": [2, 4, 5, 7, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "ar": [2, 5, 6, 8, 14, 27, 28, 30, 31, 32, 33, 38, 40, 60, 88, 89, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 185, 189, 202, 215, 222, 224, 234, 238, 246, 248, 251], "imag": [2, 6, 27, 28, 30, 31, 60, 88, 89, 96, 189, 206, 251], "differ": [2, 5, 30, 31, 32, 65, 71, 88, 89, 100, 101, 113, 124, 128, 129], "each": [2, 5, 16, 21, 27, 28, 30, 31, 32, 62, 64, 65, 70, 71, 75, 78, 85, 87, 90, 91, 92, 96, 98, 99, 100, 101, 111, 112, 113, 124, 127, 128, 129, 132, 133, 134, 135, 195, 196, 215, 216, 222, 229, 230, 238, 239, 246], "other": [2, 5, 30, 31, 32, 190, 252], "what": [2, 27, 28, 30, 31, 32, 35], "pattern": [2, 6, 88, 89, 168], "descript": 2, "certain": [2, 195, 218, 229, 242], "cluster": [2, 18, 23], "To": [2, 5, 27, 28, 30, 31], "get": [2, 30, 31, 214, 217, 218, 219, 237, 241, 242, 243, 248], "an": [2, 6, 7, 8, 11, 16, 21, 27, 28, 30, 31, 32, 34, 35, 38, 39, 40, 53, 55, 56, 57, 64, 65, 70, 71, 74, 77, 78, 80, 83, 85, 100, 101, 113, 124, 128, 129, 158, 169, 186, 189, 190, 194, 199, 201, 203, 214, 217, 218, 219, 222, 228, 233, 235, 236, 237, 241, 242, 243, 246, 251, 252], "insight": 2, "question": 2, "implement": [2, 27, 28, 30, 31, 53, 64, 70, 97, 114, 127, 136], "popular": [2, 10, 86], "simpl": [2, 4, 5, 7, 8, 30, 31, 187, 200, 248], "method": [2, 10, 14, 16, 21, 27, 28, 30, 31, 38, 39, 40, 54, 55, 57, 86, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 222, 246], "appli": [2, 5, 6, 30, 31, 39, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 79, 80, 81, 82, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 187, 198, 200, 216, 232, 239], "stl10": 2, "requir": [2, 16, 21, 27, 28, 30, 31], "some": [2, 7, 10, 27, 28, 30, 31, 32, 34, 68, 69, 81, 82, 86, 248], "packag": [2, 5, 11], "besid": 2, "nidl": [2, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 253], "let": [2, 30, 31], "": [2, 5, 7, 16, 21, 27, 28, 30, 31, 56, 63, 64, 65, 67, 70, 71, 73, 76, 87, 90, 91, 92, 98, 99, 101, 111, 112, 113, 125, 128, 129, 130, 132, 133, 134, 135, 158, 169, 192, 195, 205, 215, 216, 220, 221, 226, 229, 238, 239, 244, 245], "first": [2, 5, 6, 8, 27, 28, 30, 31, 98, 101, 113, 125, 126, 128, 129, 132, 222, 246], "start": [2, 65, 71, 195, 229], "import": [2, 4, 5, 6, 7, 8, 30, 31, 32, 34, 35, 38, 40, 55, 86, 100, 102, 113, 114, 115, 124, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 251, 252], "our": [2, 5], "standard": [2, 64, 66, 70, 72, 100, 101, 113, 124, 128, 129, 201, 204, 221, 233, 245], "librari": 2, "below": [2, 27, 28, 30, 31, 32], "o": [2, 5, 7, 182, 192, 195, 215, 216, 221, 226, 229, 238, 239, 245], "matplotlib": [2, 4, 5, 6, 7, 8, 180, 181, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "pyplot": [2, 4, 5, 6, 7, 8, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "plt": [2, 4, 5, 6, 7, 8, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "pytorch_lightn": 2, "pl": 2, "torch": [2, 6, 8, 27, 28, 30, 31, 39, 57, 97, 102, 113, 114, 115, 127, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "nn": [2, 6, 8, 10, 16, 21, 27, 28, 30, 31, 39, 57, 58, 64, 70, 98, 99, 111, 112, 125, 127, 130, 132, 133, 134, 135, 137, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "util": [2, 4, 5, 6, 7, 8, 10, 27, 28, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 70, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 113, 114, 115, 129, 136, 147, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "torchvis": [2, 27, 28, 30, 31], "collect": 2, "ordereddict": 2, "copi": 2, "deepcopi": 2, "weight": [2, 10, 27, 28, 30, 31, 32, 39, 57, 58, 62, 75, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 196, 202, 216, 222, 230, 234, 239, 246], "estim": [2, 4, 5, 6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 54, 56, 58, 187, 200], "ssl": [2, 10, 30, 31, 58], "linear": [2, 10, 27, 28, 58, 101, 113, 128, 129, 130], "logisticregress": [2, 10, 26, 27, 28, 58], "callback": [2, 10, 14, 16, 21, 27, 28, 30, 31, 58], "learningratemonitor": [2, 27, 28, 30, 31], "modelcheckpoint": 2, "transform": [2, 5, 10, 16, 20, 21, 25, 32, 58, 60, 61, 68, 69, 78, 79, 81, 82, 85, 88, 89, 98, 132, 183, 184, 187, 188, 200, 221, 245, 250], "defin": [2, 10, 13, 15, 16, 21, 30, 31, 32, 33, 62, 75, 77, 80, 88, 89, 101, 113, 127, 128, 129, 130, 131, 156, 163, 164, 165, 174, 175, 176, 180, 181, 198, 201, 207, 208, 212, 213, 232, 233], "global": [2, 32, 156], "paramet": [2, 8, 14, 16, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "datadir": 2, "tmp": 2, "checkpointdir": 2, "saved_model": 2, "num_work": 2, "cpu_count": 2, "num_imag": 2, "6": [2, 4, 9, 27, 28, 30, 31, 38, 40, 100, 114, 115, 124, 136, 147, 215, 221, 238, 245, 254], "backend": 2, "cudnn": 2, "determinst": 2, "true": [2, 4, 5, 6, 7, 8, 16, 21, 27, 28, 30, 31, 39, 45, 50, 51, 52, 55, 57, 61, 78, 79, 85, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 166, 169, 171, 172, 173, 177, 180, 181, 186, 187, 190, 193, 195, 199, 200, 215, 220, 227, 229, 238, 244, 252], "benchmark": 2, "fals": [2, 4, 6, 7, 16, 21, 27, 28, 30, 31, 39, 53, 55, 57, 88, 89, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 180, 181, 187, 192, 194, 195, 200, 201, 202, 203, 204, 206, 209, 211, 215, 216, 220, 221, 222, 226, 228, 229, 233, 234, 235, 238, 239, 244, 245, 246, 247], "devic": [2, 27, 28, 30, 31], "gpu": [2, 27, 28, 30, 31], "cuda": 2, "is_avail": 2, "els": 2, "cpu": 2, "As": [2, 8, 30, 31], "mani": [2, 5, 27, 28, 30, 31], "befor": [2, 30, 31, 56, 101, 113, 128, 129, 165, 176], "provid": [2, 16, 21, 67, 73, 88, 89, 157, 196, 222, 230, 246, 253], "pre": 2, "model": [2, 10, 27, 28, 30, 31, 32, 37, 39, 57, 58, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "If": [2, 14, 27, 28, 30, 31, 39, 56, 57, 205, 222, 246], "you": [2, 5, 11, 14, 16, 21, 27, 28, 30, 31, 32, 33, 39, 57], "run": [2, 4, 5, 6, 7, 8, 27, 28, 30, 31, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 127, 163, 164, 165, 174, 175, 176, 221, 245], "local": [2, 32, 36, 39, 57], "make": [2, 55, 156], "sure": 2, "suffici": 2, "disk": [2, 27, 28, 30, 31], "space": [2, 6, 30, 31, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 132, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 198, 232], "avail": [2, 27, 28, 30, 31, 32, 39, 55, 57], "load_pretrain": [2, 39, 57], "makedir": 2, "exist_ok": 2, "name": [2, 27, 28, 30, 31, 32, 35, 39, 56, 57, 98, 99, 111, 112, 132, 133, 134, 135, 156, 180, 181, 191, 205], "hf": [2, 32, 39, 57], "hub": [2, 32, 39, 57], "neurospin": [2, 11, 39, 57], "resnet18": 2, "data_dir": [2, 39, 57], "filepath": [2, 39, 57], "pt": 2, "allow": [2, 5, 14, 16, 21, 30, 31, 32, 33, 205, 222, 246], "effici": 2, "need": [2, 5, 6, 27, 28, 30, 31, 32, 127, 163, 164, 165, 168, 174, 175, 176], "prepar": 2, "load": [2, 8, 10, 32, 35, 36, 39, 57, 86, 88, 89, 209, 211], "sampl": [2, 8, 10, 58, 86, 87, 90, 91, 92, 96, 98, 99, 101, 102, 113, 114, 115, 125, 128, 129, 130, 132, 133, 136, 138, 147, 160, 161, 162, 166, 168, 171, 172, 173, 177, 189, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251], "two": [2, 5, 27, 28, 30, 31, 185, 187, 200, 215, 238], "random": [2, 4, 16, 21, 61, 65, 71, 77, 78, 79, 80, 85, 87, 90, 91, 92], "batch": [2, 8, 14, 16, 21, 27, 28, 30, 31, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "The": [2, 5, 27, 28, 30, 31, 32, 56, 64, 66, 67, 70, 72, 73, 97, 98, 99, 101, 111, 112, 113, 114, 127, 128, 129, 132, 133, 134, 135, 136, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 183, 184, 204, 205], "easiest": 2, "do": [2, 5, 27, 28, 30, 31], "i": [2, 5, 8, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "creat": [2, 53, 61, 74, 79, 80, 83, 86, 88, 89, 100, 124, 156], "when": [2, 14, 16, 21, 27, 28, 30, 31, 39, 55, 57, 180, 181, 185, 190, 205, 220, 244, 252], "being": 2, "set": [2, 5, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 41, 65, 67, 71, 73, 86, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 192, 202, 206, 226, 234], "twice": 2, "class": [2, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 41, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 204], "contrastivetransform": 2, "framework": 2, "easili": [2, 5], "extend": [2, 38, 40], "more": [2, 88, 89, 253], "posit": 2, "than": [2, 30, 31], "same": [2, 5, 30, 31, 32, 33, 185, 187, 200, 205, 210, 215, 238], "most": [2, 180, 181], "usual": [2, 30, 31], "obtain": [2, 30, 31], "us": [2, 4, 5, 6, 7, 8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "onli": [2, 5, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "def": [2, 4, 6, 27, 28, 30, 31, 55], "__init__": [2, 27, 28, 30, 31, 55], "base_transform": 2, "n_view": 2, "2": [2, 4, 5, 7, 8, 27, 28, 30, 31, 32, 38, 40, 55, 61, 74, 79, 80, 83, 87, 90, 91, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 186, 187, 189, 190, 192, 193, 194, 195, 198, 199, 200, 202, 203, 214, 215, 216, 221, 226, 227, 228, 229, 232, 234, 235, 237, 238, 239, 245, 247, 251, 252], "__call__": 2, "x": [2, 6, 7, 8, 27, 28, 30, 31, 55, 91, 92, 96, 99, 101, 102, 111, 112, 113, 114, 115, 125, 126, 127, 128, 129, 133, 134, 135, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 186, 188, 189, 190, 193, 199, 202, 203, 215, 222, 227, 231, 234, 235, 238, 246, 250, 251, 252], "return": [2, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 53, 55, 57, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 88, 89, 91, 92, 96, 98, 99, 100, 102, 111, 112, 114, 115, 124, 132, 133, 134, 135, 136, 137, 138, 147, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252], "rang": [2, 4, 5, 8, 183, 184, 218, 242], "next": [2, 5, 27, 28, 30, 31, 205], "specif": [2, 10, 16, 21, 27, 28, 30, 31, 62, 63, 75, 76, 101, 113, 128, 129, 156, 217, 241], "want": [2, 11, 30, 31, 39, 57], "choic": [2, 32], "crucial": 2, "hyperparamet": [2, 30, 31], "sinc": [2, 5, 6, 30, 31, 127, 163, 164, 165, 168, 174, 175, 176], "directli": [2, 60], "affect": [2, 16, 21], "latent": [2, 30, 31, 98, 99, 111, 112, 114, 132, 133, 134, 135, 136], "structur": [2, 5], "might": [2, 27, 28, 30, 31], "overal": 2, "experi": [2, 10, 27, 28, 30, 31, 32, 33, 34, 35, 36, 58, 253], "5": [2, 4, 6, 7, 8, 9, 67, 73, 100, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 174, 198, 215, 216, 232, 238, 239], "follow": [2, 30, 31, 32], "origin": [2, 6, 30, 31, 60, 96], "horizont": [2, 6], "flip": 2, "crop": 2, "resiz": 2, "color": [2, 7, 10, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 180, 181], "distort": 2, "grayscal": 2, "gaussian": [2, 64, 66, 70, 72, 87, 90, 91, 92], "blur": [2, 64, 70], "comparison": 2, "reduc": [2, 62, 75, 193, 194, 196, 227, 228, 230], "effect": 2, "jitter": 2, "slightli": 2, "instead": [2, 127, 163, 164, 165, 174, 175, 176], "8": [2, 4, 6, 8, 9, 27, 28, 30, 31, 113, 129, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 254], "bright": 2, "satur": 2, "hue": 2, "better": 2, "perform": [2, 30, 31, 56, 62, 75, 127, 162, 163, 164, 165, 173, 174, 175, 176], "wa": [2, 30, 31], "faster": [2, 205], "stabl": 2, "instanc": [2, 5, 16, 21, 27, 28, 30, 31, 56, 61, 79, 80, 100, 124, 127, 163, 164, 165, 174, 175, 176], "scale": [2, 6, 8, 27, 28, 30, 31, 87, 90, 91, 92, 189, 190, 193, 198, 202, 203, 216, 222, 227, 232, 234, 235, 239, 246, 251, 252], "highli": 2, "vari": 2, "benefici": 2, "t": [2, 6, 27, 28, 30, 31], "reli": 2, "anymor": 2, "distinguish": 2, "between": [2, 5, 27, 28, 30, 31, 62, 63, 75, 76, 180, 181, 185, 187, 200, 215, 224, 238, 248], "contrast_transform": 2, "compos": [2, 32, 215, 238], "randomhorizontalflip": 2, "randomresizedcrop": 2, "size": [2, 6, 7, 8, 27, 28, 30, 31, 62, 63, 65, 71, 75, 76, 77, 88, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 165, 168, 174, 175, 176, 195, 198, 216, 221, 223, 229, 232, 239, 245], "96": [2, 4, 165, 176, 186, 199], "randomappli": 2, "colorjitt": 2, "p": 2, "randomgrayscal": 2, "gaussianblur": 2, "kernel_s": [2, 6, 164, 165, 175, 176], "9": [2, 4, 5, 9, 94, 95, 254], "totensor": 2, "normal": [2, 10, 27, 28, 30, 31, 58, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 182, 231, 240], "after": [2, 27, 28, 30, 31, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "discuss": 2, "techniqu": [2, 248], "now": [2, 5, 8, 30, 31, 137], "focu": 2, "similarli": 2, "cifar10": 2, "10": [2, 4, 5, 7, 8, 9, 102, 113, 115, 129, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245, 254], "airplan": 2, "bird": 2, "car": 2, "cat": 2, "deer": 2, "dog": 2, "hors": 2, "monkei": 2, "ship": 2, "truck": 2, "higher": 2, "resolut": [2, 88, 89, 101, 113, 128, 129], "pixel": 2, "500": 2, "per": 2, "addition": 2, "much": 2, "larger": [2, 30, 31], "100": [2, 4, 7, 8, 192, 195, 215, 216, 221, 224, 226, 229, 238, 239, 245], "unlabel": 2, "similar": [2, 5, 27, 28, 30, 31], "wider": [2, 30, 31], "anim": 2, "vehicl": 2, "ideal": 2, "showcas": 2, "benefit": 2, "offer": 2, "luckili": 2, "through": [2, 11, 17, 18, 19, 20, 22, 23, 24, 25], "keep": [2, 88, 89], "mind": 2, "rel": 2, "larg": 2, "ha": [2, 5, 27, 28, 30, 31, 101, 113, 128, 129], "consider": [2, 30, 31], "3gb": 2, "bit": [2, 27, 28, 30, 31], "time": [2, 4, 5, 6, 7, 8, 222, 246], "For": [2, 27, 28, 30, 31, 56, 137, 215, 238], "initi": [2, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "loader": [2, 8], "abov": 2, "unlabeled_data": 2, "via": [2, 222, 246], "train_data_contrast": 2, "valid": [2, 10, 14, 16, 21, 27, 28, 30, 31, 32, 36, 53, 54, 55, 56, 58], "root": [2, 11, 88, 89], "split": [2, 30, 31, 88, 89], "pair": [2, 88, 89], "img": 2, "stack": 2, "idx": [2, 4, 7, 195, 215, 221, 229, 238, 245], "dim": [2, 8, 27, 28, 30, 31, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "img_grid": 2, "make_grid": [2, 27, 28, 30, 31], "nrow": 2, "pad_valu": 2, "permut": [2, 5, 63, 76, 185, 187, 200], "figur": [2, 6, 180, 181], "figsiz": [2, 4, 5, 6, 7, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "titl": [2, 6, 47, 48], "imshow": [2, 6, 189, 251], "axi": [2, 6, 8, 180, 181, 185, 196, 202, 209, 211, 215, 222, 230, 231, 234, 238, 246], "off": [2, 6], "And": 2, "associ": [2, 7, 27, 28, 30, 31, 182, 190, 196, 222, 230, 246, 252], "dataload": [2, 8, 16, 21, 27, 28, 30, 31, 32], "batch_siz": [2, 8, 99, 111, 112, 114, 133, 134, 135, 136], "256": [2, 41, 98, 99, 111, 112, 132, 133, 134, 135], "train_load": 2, "shuffl": [2, 8, 16, 21], "drop_last": 2, "pin_memori": 2, "val_load": 2, "common": [2, 10, 13, 15, 60, 93, 97], "resnet": 2, "18": [2, 4], "architectur": [2, 8, 10, 27, 28, 30, 31, 97, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147], "f": [2, 6, 27, 28, 30, 31, 101, 113, 128, 129], "paper": [2, 30, 31], "g": [2, 27, 28, 30, 31], "layer": [2, 30, 31, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178], "mlp": [2, 30, 31, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "relu": [2, 30, 31, 101, 113, 125, 126, 127, 128, 129, 130, 131], "activ": [2, 30, 31, 98, 99, 101, 111, 112, 113, 114, 128, 129, 132, 133, 134, 135, 136], "hidden": [2, 30, 31, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "note": [2, 27, 28, 30, 31, 32, 53, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205], "up": [2, 30, 31, 100, 101, 113, 124, 128, 129, 185, 187, 195, 200, 218, 229, 242], "simclrv2": [2, 30, 31], "author": [2, 30, 31, 32], "mention": [2, 30, 31], "boost": [2, 30, 31], "why": [2, 5], "four": 2, "dimens": [2, 5, 30, 31, 137], "deeper": 2, "show": [2, 4, 5, 6, 7, 8, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "overfit": 2, "A": [2, 4, 5, 6, 7, 8, 27, 28, 30, 31, 39, 57, 60, 88, 89, 97], "observ": 2, "u": [2, 6, 30, 31, 88, 89, 101, 113, 127, 128, 129], "compar": [2, 30, 31], "neg": 2, "lead": 2, "smoother": 2, "loss": [2, 8, 10, 27, 28, 30, 31, 32, 58, 94, 95, 96], "gradient": [2, 27, 28, 30, 31], "case": [2, 27, 28, 30, 31, 32, 35, 36], "experienc": 2, "good": 2, "result": [2, 46, 53, 156, 204], "hidden_dim": [2, 30, 31, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "128": [2, 98, 99, 111, 112, 132, 133, 134, 135], "encod": [2, 27, 28, 30, 31, 93, 97, 99, 101, 111, 112, 113, 114, 128, 129, 133, 134, 135, 136], "none": [2, 16, 21, 27, 28, 30, 31, 32, 35, 36, 39, 56, 57, 62, 64, 65, 67, 70, 71, 73, 75, 87, 88, 89, 90, 91, 92, 94, 95, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 176, 180, 181, 193, 194, 203, 205, 222, 224, 225, 227, 228, 235, 236, 246, 249], "num_class": [2, 27, 28, 115, 116, 117, 118, 119, 120, 121, 122, 123, 147, 148, 149, 150, 151, 152, 153, 154, 155], "4": [2, 4, 5, 7, 8, 100, 113, 124, 129, 159, 160, 161, 162, 165, 166, 167, 170, 171, 172, 173, 176, 177, 178, 185, 187, 190, 193, 194, 200, 203, 218, 227, 228, 235, 242, 248, 252], "latent_s": 2, "fc": 2, "out_featur": 2, "ident": 2, "save_weights_onli": 2, "mode": [2, 11, 27, 28, 30, 31, 32, 125], "max": [2, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 162, 172, 173], "monitor": [2, 27, 28, 30, 31], "val_acc_top5": 2, "logging_interv": 2, "epoch": [2, 8, 27, 28, 30, 31], "trainer_param": 2, "default_root_dir": 2, "acceler": [2, 27, 28, 30, 31], "max_epoch": [2, 27, 28, 30, 31], "lr": [2, 8, 27, 28, 30, 31], "5e": 2, "temperatur": [2, 27, 28, 30, 31], "07": 2, "weight_decai": [2, 8, 27, 28, 30, 31], "1e": [2, 8, 185, 190, 252], "random_st": [2, 16, 21, 27, 28, 30, 31], "42": [2, 4, 6, 8, 189, 190, 193, 202, 203, 222, 227, 234, 235, 246, 251, 252], "print": [2, 4, 5, 6, 8, 37, 41, 55, 100, 102, 114, 115, 124, 136, 138, 147, 201, 214, 217, 218, 219, 220, 233, 237, 241, 242, 243, 244], "found": [2, 5, 27, 28, 30, 31, 56], "pretrain": [2, 30, 31], "weight_fil": [2, 39, 57], "fitted_": 2, "fit": [2, 16, 21, 27, 28, 30, 31, 56], "deploi": 2, "downstream": [2, 30, 31], "task": [2, 30, 31], "see": [2, 30, 31, 32, 53, 67, 73, 88, 89, 209, 211], "well": [2, 30, 31], "littl": 2, "verifi": [2, 56], "whether": [2, 39, 57], "represent": [2, 30, 31, 67, 73, 97, 111, 112, 114, 134, 135, 136, 196, 222, 230, 246, 248], "featur": [2, 10, 30, 31, 86, 101, 113, 125, 126, 127, 128, 129, 130, 131, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178], "word": 2, "singl": [2, 27, 28, 30, 31, 253], "map": [2, 5, 6, 30, 31, 164, 165, 168, 175, 176, 180, 181, 187, 200, 221, 245], "predict": [2, 14, 16, 21, 27, 28, 30, 31, 102, 115, 138, 147], "base": [2, 10, 14, 16, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 58, 62, 70, 71, 72, 73, 75, 100, 124, 158, 169, 185, 205, 215, 216, 221, 238, 239, 245], "network": [2, 30, 31, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "chang": [2, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "dure": [2, 27, 28, 30, 31, 65, 71], "process": [2, 11, 27, 28, 30, 31, 100, 124], "h": [2, 30, 31, 96, 137], "necessari": 2, "further": [2, 10], "worri": 2, "too": 2, "about": [2, 32, 222, 246], "veri": [2, 5, 27, 28, 30, 31], "few": 2, "henc": 2, "expect": [2, 8, 32, 88, 89], "even": [2, 39, 57], "assum": [2, 62, 63, 75, 76, 185], "alreadi": [2, 39, 57], "been": [2, 27, 28, 30, 31], "vector": [2, 30, 31, 215, 238], "dynam": [2, 32, 34, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "so": [2, 5, 27, 28, 30, 31], "here": [2, 5, 27, 28, 30, 31, 32, 209, 211], "within": [2, 127, 163, 164, 165, 174, 175, 176], "second": [2, 4, 5, 6, 7, 8, 27, 28, 30, 31], "did": [2, 5], "ani": [2, 27, 28, 30, 31, 88, 89, 201, 233], "signific": 2, "gain": 2, "test": [2, 5, 8, 14], "while": [2, 5, 27, 28, 30, 31, 127, 163, 164, 165, 174, 175, 176], "800": 2, "64": [2, 4, 98, 99, 111, 112, 114, 132, 133, 134, 135, 136], "scale_transform": 2, "train_img_data": 2, "test_img_data": 2, "number": [2, 5, 27, 28, 61, 62, 65, 71, 74, 75, 79, 80, 83, 87, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 180, 181, 189, 193, 194, 203, 214, 217, 218, 219, 221, 227, 228, 235, 237, 241, 242, 243, 245, 251], "len": [2, 4, 5, 6, 8, 27, 28, 30, 31, 113, 114, 115, 129, 136, 147, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 195, 214, 219, 229, 237, 243], "froozen": 2, "e": [2, 6, 11, 27, 28, 30, 31, 32, 35, 189, 251], "output": [2, 16, 21, 27, 28, 30, 31, 32, 35, 38, 40, 64, 65, 70, 71, 98, 101, 113, 125, 126, 127, 128, 129, 130, 131, 132, 137, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 204, 205], "new_model": 2, "sequenti": [2, 215, 238], "normal_": 2, "mean": [2, 27, 28, 30, 31, 36, 113, 125, 129, 162, 173, 202, 234], "std": 2, "01": [2, 9, 254], "bia": [2, 158, 169], "zero_": 2, "requires_grad_": 2, "final": [2, 8, 113, 129], "evalu": [2, 6, 168], "everi": [2, 27, 28, 30, 31, 127, 163, 164, 165, 174, 175, 176, 192, 226], "earli": 2, "stop": [2, 27, 28, 30, 31, 215, 238], "low": [2, 80], "frequenc": [2, 27, 28, 30, 31], "ensur": [2, 84], "despit": 2, "thei": [2, 5, 8, 38, 40], "smaller": 2, "20": [2, 4, 6, 7, 8, 62, 75], "50": [2, 4], "200": 2, "give": [2, 10], "intuit": 2, "transfer": 2, "recognit": 2, "like": [2, 27, 28, 30, 31, 32, 127], "classif": [2, 6, 8, 87, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "test_load": 2, "val_acc": [2, 27, 28, 30, 31], "check_val_every_n_epoch": [2, 27, 28, 30, 31], "3": [2, 4, 5, 7, 8, 32, 38, 40, 53, 64, 65, 67, 70, 71, 73, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 128, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 186, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 207, 208, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 251, 252], "pred": [2, 8, 27, 28], "shape": [2, 5, 6, 8, 102, 113, 114, 115, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 202, 217, 233, 234, 241], "acc": [2, 27, 28, 30, 31], "argmax": [2, 8, 27, 28, 30, 31], "float": [2, 4, 8, 27, 28, 30, 31, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 83, 94, 95, 127, 180, 181, 183, 184, 185, 188, 190, 250, 252], "accuraci": [2, 8, 27, 28, 30, 31], "2f": 2, "_pretrained_filenam": 2, "path": [2, 32, 39, 57, 64, 65, 70, 71, 101, 113, 128, 129, 205, 206, 210, 212, 213, 215, 224, 225, 238], "join": 2, "isfil": 2, "save": [2, 32, 212, 213], "state_dict": 2, "one": [2, 5, 27, 28, 30, 31, 32, 65, 71, 78, 85, 98, 127, 132, 163, 164, 165, 174, 175, 176, 190, 252], "would": [2, 30, 31], "improv": 2, "classifi": [2, 17, 22], "60": [2, 4], "correctli": 2, "quit": 2, "impress": 2, "consid": [2, 5, 65, 71, 88, 89, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169], "dimension": [2, 30, 31], "With": 2, "achiev": 2, "80": [2, 4], "increas": [2, 203, 235], "suggest": 2, "exponenti": 2, "could": [2, 5, 27, 28, 30, 31], "finetun": [2, 30, 31], "adapt": [2, 65, 71, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "indic": [2, 16, 21, 27, 28, 30, 31, 62, 75, 125, 130, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 185, 193, 194, 195, 196, 202, 203, 215, 221, 227, 228, 229, 230, 234, 235, 238, 245, 247], "advantag": 2, "straightforward": 2, "It": [2, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "clear": 2, "its": [2, 27, 28, 30, 31, 50, 51, 205, 215, 238], "count": 2, "1000": 2, "fair": 2, "ones": 2, "becaus": [2, 5, 30, 31], "distribut": [2, 30, 31, 99, 114, 133, 136], "notic": 2, "ad": [2, 101, 113, 128, 129], "restrict": 2, "oper": [2, 27, 28, 30, 31, 127], "125": 2, "1250": 2, "done": [2, 205], "recogn": 2, "object": [2, 32, 35, 38, 40, 55, 74, 83, 180, 181, 204, 205], "check": [2, 14, 16, 21, 32, 53, 54, 55, 56], "patch": [2, 30, 31, 65, 71, 88, 89, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 216, 221, 223, 239, 245], "belong": 2, "chosen": 2, "weaker": 2, "function": [2, 5, 6, 8, 10, 12, 14, 16, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 64, 65, 67, 69, 70, 71, 73, 74, 78, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 96, 97, 98, 99, 101, 111, 112, 113, 127, 128, 129, 132, 133, 134, 135, 137, 156, 163, 164, 165, 168, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "almost": [2, 6], "strongli": 2, "iter": [2, 27, 28, 30, 31, 137], "train_transform": 2, "sigma": [2, 4, 64, 65, 66, 70, 71, 72], "train_img_aug_data": 2, "2e": 2, "scratch": 2, "73": [2, 4], "7": [2, 4, 215, 238], "less": 2, "leverag": 2, "amount": 2, "generaliz": 2, "sole": 2, "par": 2, "tenth": 2, "experiment": [2, 32], "limit": 2, "recent": 2, "work": [2, 5, 27, 28, 30, 31, 32, 137], "ting": 2, "chen": 2, "et": [2, 30, 31, 101, 113, 128, 129], "al": [2, 30, 31, 101, 113, 128, 129], "trend": 2, "imagenet": 2, "seem": [2, 5], "stronger": 2, "come": [2, 30, 31], "close": [2, 5], "approach": [2, 11], "combin": [2, 62, 75], "beyond": 2, "khosla": 2, "moreov": 2, "last": [2, 98, 132], "year": 2, "great": [2, 30, 31], "includ": [2, 10, 27, 28, 30, 31, 86, 88, 89], "distil": 2, "byol": 2, "redund": 2, "reduct": 2, "barlow": 2, "twin": 2, "There": 2, "explor": 2, "domain": [2, 4], "step": [2, 8, 27, 28, 30, 31, 101, 113, 128, 129], "ahead": 2, "memori": [2, 4, 5, 6, 7, 8, 205], "usag": [2, 4, 5, 6, 7, 8], "ipynb": [2, 4, 5, 6, 7, 8, 209, 211], "credit": [4, 5, 6, 7, 8], "grigi": [4, 6, 7, 8], "c": [4, 5, 7, 38, 40, 96, 192, 195, 215, 216, 226, 229, 238, 239], "ambrois": [4, 5], "numpi": [4, 5, 6, 8, 183, 184, 188, 250], "np": [4, 5, 6, 8, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 186, 199, 202, 234], "surfifi": [4, 5, 6, 7, 8, 9, 10, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254], "min_depth_to_get_n_neighbor": [4, 10, 58, 182, 214, 237], "plot": [4, 5, 6, 7, 8, 10, 58, 180, 181, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "plot_trisurf": [4, 5, 6, 7, 8, 10, 58, 179, 180, 181, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 215, 216, 221, 222, 226, 227, 228, 229, 233, 234, 235, 238, 239, 245, 246, 251, 252], "interv": [4, 10, 27, 28, 30, 31, 58, 60, 74, 77, 80, 83], "vertic": [4, 5, 7, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 87, 90, 91, 92, 100, 113, 124, 129, 158, 159, 169, 170, 180, 181, 186, 187, 189, 190, 192, 193, 194, 196, 199, 200, 201, 202, 203, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 251, 252], "triangl": [4, 5, 7, 64, 65, 67, 70, 71, 73, 100, 113, 124, 129, 180, 181, 186, 187, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 207, 208, 212, 213, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 244, 245, 246, 247, 248, 252], "order": [4, 5, 6, 7, 8, 16, 21, 32, 88, 89, 98, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 132, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 185, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 251, 252], "neigh": [4, 7, 64, 65, 70, 71, 163, 174, 195, 196, 215, 216, 222, 223, 229, 230, 238, 239, 246], "direct_neighbor": [4, 7, 158, 160, 161, 162, 166, 169, 171, 172, 173, 177, 195, 215, 221, 223, 229, 238, 245], "max_depth": 4, "ceil": 4, "displai": [4, 6, 7, 8, 10, 32, 45, 52, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191], "aug": 4, "add_axi": 4, "alpha": [4, 5, 180, 181, 183, 184, 187, 188, 200, 250], "arg": [4, 27, 28, 30, 31, 69, 82, 114, 136], "kwarg": [4, 16, 21, 27, 28, 30, 31, 38, 40, 69, 82, 114, 136], "data": [4, 8, 10, 16, 21, 27, 28, 30, 31, 32, 39, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 186, 189, 192, 193, 199, 202, 203, 205, 206, 209, 211, 222, 224, 225, 226, 227, 234, 235, 246, 251], "fig": [4, 5, 7, 180, 181, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "ax": [4, 5, 6, 7, 165, 176, 180, 181, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "subplot": [4, 5, 7, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "subplot_kw": [4, 5, 7, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "3d": [4, 5, 7, 187, 192, 195, 198, 200, 201, 215, 216, 221, 226, 229, 232, 233, 238, 239, 245], "aspect": [4, 5, 7, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "auto": [4, 5, 7, 32, 36, 93, 97, 187, 192, 195, 200, 201, 215, 216, 221, 226, 229, 233, 238, 239, 245], "flatten": [4, 6, 168], "colorbar": [4, 7, 180, 181, 187, 192, 194, 195, 200, 201, 215, 216, 221, 226, 228, 229, 233, 238, 239, 245], "edgecolor": [4, 5, 180, 181, 187, 200], "white": [4, 66, 72], "linewidth": [4, 7, 180, 181], "red": [4, 7, 192, 195, 215, 216, 226, 229, 238, 239], "blue": [4, 5, 7, 187, 195, 200, 215, 216, 229, 238, 239], "green": [4, 5, 7, 187, 200], "_textur": 4, "tight_layout": 4, "arrai": [4, 5, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 82, 84, 87, 88, 89, 90, 91, 92, 125, 130, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 185, 186, 187, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 206, 207, 208, 212, 213, 215, 216, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 244, 245, 246, 247, 248, 251, 252], "patch_siz": [4, 65, 71], "int": [4, 16, 21, 27, 28, 30, 31, 32, 62, 63, 65, 71, 74, 75, 76, 77, 83, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 185, 186, 189, 193, 194, 195, 198, 199, 201, 203, 214, 215, 216, 217, 218, 219, 221, 227, 228, 229, 232, 233, 235, 237, 238, 239, 241, 242, 243, 245, 247, 251], "n_patch": [4, 65, 71], "uniform": 4, "phi": [4, 67, 73], "180": 4, "theta": [4, 67, 73], "psi": [4, 67, 73], "controlateral_textur": 4, "prob": [4, 62, 63, 75, 76, 77], "n_vertic": [4, 6, 8, 62, 63, 75, 76, 77, 91, 92, 111, 112, 114, 134, 135, 136, 193, 203, 214, 217, 218, 219, 222, 227, 235, 237, 241, 242, 243, 246], "controlateral_data": [4, 63, 76], "group_textur": 4, "group_data": [4, 62, 75], "n_sampl": [4, 6, 8, 62, 75, 87, 90, 91, 92, 189, 190, 192, 193, 202, 203, 222, 226, 227, 234, 235, 246, 251, 252], "neigh_ind": [4, 62, 75], "groupbi": [4, 62, 75], "n_neighbor": [4, 62, 75], "n_compon": [4, 62, 75], "30": [4, 8, 62, 75], "58": 4, "74": 4, "49": 4, "62": 4, "47": 4, "15": [4, 8], "99": [4, 8], "92": 4, "54": 4, "65": [4, 6], "31": 4, "14": 4, "78": 4, "90": [4, 9, 254], "76": 4, "93": 4, "21": 4, "70": 4, "22": [4, 9, 254], "46": 4, "89": 4, "25": [4, 8], "82": 4, "11": [4, 5], "59": 4, "56": 4, "12": [4, 5, 215, 238], "19": 4, "13": [4, 7], "23": 4, "28": 4, "51": 4, "79": 4, "16": [4, 27, 28, 30, 31, 164, 165, 175, 176], "17": 4, "77": 4, "88": 4, "52": 4, "95": 4, "48": 4, "72": 4, "66": 4, "24": [4, 5], "69": [4, 5], "86": 4, "26": 4, "27": 4, "29": [4, 5], "83": 4, "63": 4, "36": 4, "32": [4, 101, 113, 114, 127, 128, 129, 136], "33": 4, "34": 4, "39": 4, "35": [4, 8], "37": 4, "38": 4, "45": [4, 222, 246], "71": 4, "40": [4, 6, 7, 8, 87, 90, 91, 92], "41": 4, "81": 4, "43": 4, "44": 4, "87": 4, "98": 4, "97": 4, "53": 4, "68": [4, 9, 254], "55": 4, "57": 4, "61": 4, "94": 4, "67": 4, "75": 4, "84": 4, "85": 4, "91": [4, 6], "aug1": 4, "aug2": 4, "aug3": 4, "tran": 4, "regist": [4, 61, 68, 79, 81, 127, 163, 164, 165, 174, 175, 176], "probabl": [4, 61, 62, 63, 75, 76, 77, 79], "script": [4, 5, 6, 7, 8], "minut": [4, 5, 6, 7, 8], "511": [4, 9, 254], "110": [4, 9, 254], "plot_augment": [4, 9, 254], "math": 5, "warn": [5, 27, 28, 30, 31, 32, 49], "scipi": [5, 187, 200], "spatial": [5, 187, 200], "mpl_toolkit": 5, "mplot3d": 5, "axes3d": [5, 180, 181], "ico2ico": [5, 10, 58, 182, 187, 190, 200, 252], "build": [5, 7, 32, 64, 65, 70, 71, 74, 83, 100, 124, 215, 216, 221, 223, 224, 225, 236, 238, 239, 245, 248], "refer": [5, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "vertices_norm": 5, "triangles_norm": 5, "standard_ico": [5, 6, 8, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 187, 190, 200, 201, 221, 233, 245, 252], "642": [5, 6, 8], "1280": [5, 6, 8], "Then": 5, "fetch": [5, 10, 32, 86, 224, 225], "freesurf": [5, 100, 124, 207, 212, 221, 224, 245], "try": 5, "find": [5, 32, 185, 187, 192, 195, 200, 202, 226, 229, 234, 236], "optim": [5, 8, 27, 28, 30, 31, 32], "rotat": [5, 67, 73, 187, 196, 200, 222, 230, 246], "modul": [5, 10, 13, 15, 16, 21, 27, 28, 30, 31, 32, 34, 39, 57, 58, 59, 60, 64, 70, 98, 99, 101, 111, 112, 113, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "rmse": 5, "align_vector": 5, "54571598073452": 5, "okai": 5, "doe": [5, 30, 31], "suppos": 5, "equal": 5, "zero": [5, 6, 30, 31, 65, 71, 102, 113, 114, 115, 129, 130, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 199], "issu": [5, 35], "matric": 5, "That": 5, "previou": 5, "algorithm": 5, "properli": 5, "correspond": [5, 27, 28, 30, 31, 62, 63, 75, 76, 185, 190, 217, 241, 252], "row": [5, 64, 65, 70, 71, 215, 238], "matrix": [5, 62, 75], "52573111": 5, "85065081": 5, "96386126": 5, "2664047": 5, "91298249": 5, "39960705": 5, "08232358": 5, "8944": 5, "4472": 5, "2764": 5, "8507": 5, "1815": 5, "296": [5, 8], "9378": 5, "0272": 5, "3462": 5, "0692": 5, "213": 5, "9746": 5, "sufac": [5, 10, 157, 182], "togeth": 5, "place": [5, 36], "comput": [5, 27, 28, 30, 31, 96, 127, 137, 163, 164, 165, 174, 175, 176, 196, 205, 222, 230, 231, 246], "small": [5, 30, 31], "subset": [5, 88, 89], "point": [5, 7, 192, 195, 198, 202, 215, 216, 221, 226, 229, 231, 232, 234, 236, 238, 239, 245], "both": [5, 30, 31, 165, 176, 215, 238], "absolut": [5, 32, 35], "valu": [5, 14, 27, 28, 30, 31, 32, 38, 40, 53, 55, 64, 65, 70, 71, 88, 89, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 180, 181, 183, 184, 185, 202, 215, 234, 238], "sign": [5, 187, 200], "vertices_of_interest_norm": 5, "search": [5, 195, 215, 229, 238], "coords_of_interest": 5, "idx_of_interest": 5, "ab": 5, "sum": [5, 8, 27, 28, 30, 31], "vertices_of_interest": 5, "fs_row_idx": 5, "break": 5, "possibl": [5, 27, 28, 30, 31, 39, 57], "depend": 5, "various": 5, "until": 5, "itertool": 5, "n_permut": 5, "factori": 5, "best_rms": 5, "best_rot": 5, "catch_warn": 5, "simplefilt": 5, "ignor": [5, 16, 21, 127, 163, 164, 165, 174, 175, 176], "categori": 5, "userwarn": 5, "format": [5, 8, 14, 191, 207, 208, 212, 213], "as_matrix": 5, "52575203": 5, "85063788": 5, "971395685383565e": 5, "05": [5, 9, 254], "simpli": [5, 27, 28, 30, 31], "solv": 5, "outlin": 5, "proper": 5, "anoth": 5, "half": 5, "clearli": 5, "appear": 5, "opt": 5, "hostedtoolcach": 5, "x64": 5, "lib": 5, "python3": 5, "site": 5, "coord": [5, 10, 58, 184, 185, 186, 187, 188, 189, 190], "246": 5, "closest": [5, 196, 230], "9190925817849288": 5, "549": [5, 9, 254], "plot_match_icosahedron": [5, 9, 254], "convert": [6, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 186, 189, 199, 251], "onto": [6, 189, 190, 251, 252], "spheric": [6, 9, 93, 94, 95, 97, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 164, 165, 168, 175, 176, 182, 183, 184, 186, 188, 189, 198, 199, 215, 232, 238, 250, 251, 254], "evenli": [6, 189, 251], "resampl": [6, 189, 251], "respect": [6, 168, 189, 251], "sin": [6, 189, 251], "elev": [6, 94, 95, 98, 99, 102, 114, 115, 132, 133, 136, 138, 147, 168, 183, 184, 188, 189, 250, 251], "azimuth": [6, 94, 95, 98, 99, 102, 114, 115, 132, 133, 136, 138, 147, 168, 183, 184, 188, 189, 250, 251], "vice": 6, "versa": 6, "dataset": [6, 10, 27, 28, 30, 31, 32, 58, 87, 88, 89, 90, 91, 92, 179, 189, 190, 193, 202, 203, 222, 227, 234, 235, 246, 251, 252], "ico_ord": [6, 8, 88, 89], "n_class": [6, 8, 87, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 189, 190, 193, 202, 203, 222, 227, 234, 235, 246, 251, 252], "ico_vertic": [6, 8, 87, 90, 91, 92], "ico_triangl": [6, 8], "_": [6, 30, 31, 161, 162, 172, 173, 209, 211], "make_classif": [6, 8, 10, 58, 86, 91, 92, 189, 190, 193, 202, 203, 222, 227, 234, 235, 246, 251, 252], "seed": [6, 8, 27, 28, 30, 31, 87, 90, 91, 92, 189, 190, 193, 202, 203, 222, 227, 234, 235, 246, 251, 252], "proj_textur": 6, "text2grid": [6, 10, 58, 182, 183, 184, 186, 188, 189, 199, 250, 251], "proj": [6, 186, 189, 199, 251], "lower": [6, 193, 224, 227], "nearest": [6, 62, 75, 113, 129, 130, 186, 189, 192, 199, 202, 226, 234, 251], "192": [6, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 128, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 186, 189, 199, 251], "text": [6, 7, 27, 28, 30, 31, 37, 45, 50, 51, 52], "grid2text": [6, 10, 58, 182, 183, 184, 186, 188, 189, 199, 250, 251], "is_label": [6, 8, 180, 181, 186, 190, 193, 199, 202, 203, 222, 227, 234, 235, 246, 252], "enabl": [6, 27, 28, 30, 31, 32, 38, 40], "scatter_dens": 6, "y": [6, 8, 27, 28, 30, 31, 91, 92, 183, 184, 186, 188, 189, 190, 193, 199, 202, 203, 222, 227, 234, 235, 246, 250, 251, 252], "labelx": 6, "labe": 6, "scatter": [6, 7, 192, 195, 215, 216, 221, 226, 229, 238, 239, 245], "densiti": [6, 198, 216, 232, 239], "left": [6, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 206], "width": [6, 180, 181], "bottom": 6, "height": [6, 137], "005": 6, "rect_scatt": 6, "rect_histx": 6, "rect_histi": 6, "ax_scatt": 6, "tick_param": 6, "direct": [6, 30, 31, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 189, 215, 238, 251], "top": [6, 30, 31], "right": [6, 30, 31, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 206], "set_xlabel": 6, "set_ylabel": 6, "ax_histx": 6, "ax_histi": 6, "bin": 6, "hist": 6, "orient": 6, "set_xlim": 6, "get_xlim": 6, "set_ylim": 6, "get_ylim": 6, "radiu": [6, 183, 184, 188, 250], "cart2sph": [6, 10, 58, 182, 183, 184, 188, 250], "sin_elev": 6, "circularli": [6, 168], "continu": [6, 168], "circular": [6, 164, 165, 168, 175, 176], "pad": [6, 113, 129, 130, 159, 164, 165, 168, 170, 175, 176], "boundari": [6, 168], "expand_dim": 6, "astyp": 6, "float32": 6, "from_numpi": 6, "pad_textur": 6, "circular_pad": [6, 10, 58, 157, 168], "padd": 6, "conv": [6, 101, 113, 125, 126, 127, 128, 129, 130, 131, 158, 169], "conv2d": [6, 137], "in_channel": [6, 8, 101, 113, 127, 128, 129], "out_channel": [6, 8, 101, 113, 127, 128, 129], "stride": [6, 164, 165, 175, 176], "conv_textur": 6, "194": [6, 102, 103, 104, 105, 106, 107, 108, 109, 110, 138, 139, 140, 141, 142, 143, 144, 145, 146, 164, 175], "762": [6, 9, 254], "plot_project_textur": [6, 9, 254], "get_rectangular_project": [7, 10, 58, 182, 198, 232], "depth": [7, 8, 101, 113, 127, 128, 129, 158, 160, 161, 162, 166, 169, 171, 172, 173, 177, 195, 214, 215, 218, 229, 237, 238, 242], "vidx": 7, "cnt": [7, 192, 195, 215, 216, 221, 226, 229, 238, 239, 245], "enumer": [7, 8, 192, 195, 215, 216, 221, 226, 229, 238, 239, 245], "marker": [7, 192, 195, 215, 216, 221, 226, 229, 238, 239, 245], "str": [7, 16, 21, 30, 31, 32, 33, 35, 39, 54, 56, 57, 62, 64, 65, 67, 70, 71, 73, 75, 88, 89, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 173, 191, 196, 205, 206, 207, 208, 210, 212, 213, 222, 224, 225, 230, 246, 249], "3x3": [7, 101, 113, 128, 129], "rectangular": [7, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 198, 216, 232, 239], "sphere": [7, 125, 130, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 198, 216, 220, 231, 232, 236, 239, 240, 244], "zoom": [7, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 174, 195, 198, 216, 229, 232, 239], "orang": 7, "purpl": 7, "brown": 7, "pink": 7, "grai": 7, "oliv": 7, "cyan": 7, "yellow": 7, "tan": 7, "salmon": 7, "violet": 7, "steelblu": 7, "lime": 7, "navi": 7, "node": [7, 65, 71, 158, 169, 195, 198, 229, 232, 248], "node_rec_neigh": 7, "node_tplane_neigh": 7, "205": [7, 9, 254], "197": [7, 9, 254], "plot_spherical_neighbor": [7, 9, 254], "sphericalunet": [8, 10, 58, 97, 101, 113, 127, 128, 129], "genrat": 8, "n_epoch": 8, "surfac": [8, 10, 58, 59, 60, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 128, 129, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 180, 181, 186, 189, 199, 206, 207, 208, 209, 212, 213, 215, 238, 251, 253], "crossentropi": 8, "sgd": [8, 27, 28, 30, 31], "obviou": 8, "classificationdataset": [8, 10, 58, 86, 87, 90], "in_ord": [8, 113, 129], "start_filt": [8, 101, 113, 128, 129], "conv_mod": [8, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dine": [8, 64, 65, 70, 71, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 215, 238], "dine_s": [8, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "up_mod": [8, 113, 129, 130], "transpos": [8, 101, 113, 128, 129, 130, 160, 165, 166, 171, 176, 177], "loss_fn": 8, "crossentropyloss": 8, "momentum": 8, "n_batch": 8, "zero_grad": 8, "backward": [8, 27, 28, 30, 31], "current": [8, 33, 34, 36], "item": [8, 27, 28, 30, 31, 205], "7f": 8, "5d": 8, "eval": [8, 27, 28, 30, 31], "test_loss": 8, "correct": 8, "y_pred": 8, "no_grad": 8, "logit": 8, "softmax": [8, 30, 31], "type": [8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 67, 73, 74, 83, 113, 129, 130, 162, 173, 196, 215, 222, 230, 238, 246], "append": 8, "concaten": [8, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "error": [8, 27, 28, 30, 31, 53, 56, 204], "n": [8, 39, 57, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 82, 87, 90, 91, 92, 96, 158, 160, 163, 169, 171, 174, 180, 181, 185, 186, 187, 189, 190, 194, 195, 196, 199, 200, 201, 207, 208, 212, 213, 215, 216, 220, 222, 228, 229, 230, 233, 238, 239, 244, 246, 247, 248, 251, 252], "1f": 8, "avg": 8, "8f": 8, "094654": 8, "899470": 8, "711893": 8, "595359": 8, "491422": 8, "397142": 8, "311182": 8, "235248": 8, "003013": 8, "002697": 8, "002559": 8, "002617": 8, "002578": 8, "002305": 8, "001858": 8, "001369": 8, "000137": 8, "000076": 8, "000046": 8, "000031": 8, "000022": 8, "000017": 8, "000015": 8, "000013": 8, "000008": 8, "000007": 8, "000006": 8, "000012": 8, "corresspond": 8, "exactli": 8, "ground": 8, "truth": 8, "327": [8, 9, 254], "plot_unet_segment": [8, 9, 254], "354": [9, 254], "295": [9, 254], "02": [9, 254], "pleas": [10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "detail": 10, "raw": [10, 206, 209, 211], "mai": 10, "enough": 10, "guidelin": 10, "variou": [10, 37, 137], "help": [10, 37], "develop": [10, 11, 37], "helper": [10, 59], "integr": [10, 59, 127], "pytorch": [10, 27, 28, 30, 31, 59, 98, 99, 111, 112, 132, 133, 134, 135, 191, 253], "artifici": [10, 86], "dedic": [10, 157], "content": 10, "fetch_experi": [10, 12, 32, 58], "filter_config": [10, 12, 33, 58], "get_env": [10, 12, 34, 58], "load_interfac": [10, 12, 35, 58], "update_param": [10, 12, 36, 58], "check_typ": [10, 14, 58], "batchtypingcallback": [10, 13, 14, 58], "baseestim": [10, 15, 16, 21, 58], "classifiermixin": [10, 15, 17, 22, 58], "clustermixin": [10, 15, 18, 23, 58], "regressormixin": [10, 15, 19, 24, 58], "transformermixin": [10, 15, 20, 25, 58], "logistic_regress": [10, 28, 58], "bunch": [10, 32, 38, 40, 58], "print_multicolor": [10, 37, 45, 52, 58], "attr": [10, 37, 42, 54, 58], "fg": [10, 37, 43, 58], "hex": [10, 37, 44, 58], "print_result": [10, 37, 46, 58], "print_subtitl": [10, 37, 47, 58], "print_titl": [10, 37, 48, 58], "print_warn": [10, 37, 49, 58], "random_styl": [10, 37, 50, 58], "styliz": [10, 37, 51, 58], "_availableifdescriptor": [10, 37, 53, 58], "_estimator_i": [10, 37, 54, 58], "available_if": [10, 37, 55, 58], "check_is_fit": [10, 37, 56, 58], "basetransform": [10, 58, 60, 61, 69, 79, 82], "groupmixup": [10, 58, 60, 62, 75], "hemimixup": [10, 58, 60, 63, 76], "surfblur": [10, 58, 60, 64, 70], "surfcutout": [10, 58, 60, 65, 71], "surfnois": [10, 58, 60, 66, 72], "surfrot": [10, 58, 60, 67, 73], "apply_chained_transform": [10, 58, 60, 69, 82], "multichannel_augment": [10, 58, 60, 78, 85], "mixup": [10, 58, 75, 76, 77], "mixupaugment": [10, 58, 60, 77], "randomaugment": [10, 58, 60, 61, 78, 79, 80, 85], "listifi": [10, 58, 60, 84], "genericsurfdataset": [10, 58, 86, 88, 89], "_samples_gener": [10, 58, 90, 91], "_gener": [10, 58, 89], "sphericalvaeloss": [10, 58, 93, 94, 95], "vae": [10, 58, 94, 95, 96, 114, 132, 133, 134, 135, 136, 137], "log_likelihood": [10, 58, 93, 96], "hemifusiondecod": [10, 58, 97, 98, 132], "hemifusionencod": [10, 58, 97, 99, 133], "sphericalbas": [10, 58, 97, 100, 124], "sphericalgunet": [10, 58, 97, 101, 113, 127, 128, 129], "sphericalgvgg": [10, 58, 97, 102, 115, 138, 147], "sphericalgvgg11": [10, 58, 97, 102, 103, 138, 139], "sphericalgvgg11bn": [10, 58, 97, 104, 140], "sphericalgvgg13": [10, 58, 97, 105, 141], "sphericalgvgg13bn": [10, 58, 97, 106, 142], "sphericalgvgg16": [10, 58, 97, 107, 143], "sphericalgvgg16bn": [10, 58, 97, 108, 144], "sphericalgvgg19": [10, 58, 97, 109, 145], "sphericalgvgg19bn": [10, 58, 97, 110, 146], "sphericalhemifusiondecod": [10, 58, 97, 111, 134], "sphericalhemifusionencod": [10, 58, 97, 112, 135], "sphericalva": [10, 58, 97, 114, 136], "sphericalvgg": [10, 58, 97, 102, 115, 138, 147], "sphericalvgg11": [10, 58, 97, 115, 116, 147, 148], "sphericalvgg11bn": [10, 58, 97, 117, 149], "sphericalvgg13": [10, 58, 97, 118, 150], "sphericalvgg13bn": [10, 58, 97, 119, 151], "sphericalvgg16": [10, 58, 97, 120, 152], "sphericalvgg16bn": [10, 58, 97, 121, 153], "sphericalvgg19": [10, 58, 97, 122, 154], "sphericalvgg19bn": [10, 58, 97, 123, 155], "compute_output_dim": [10, 58, 97, 137], "vgg": [10, 58, 102, 115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "class_factori": [10, 58, 97, 156], "downblock": [10, 58, 97, 125], "downgblock": [10, 58, 97, 126], "graphicalunet": [10, 58, 97, 127], "upblock": [10, 58, 97, 130], "upgblock": [10, 58, 97, 131], "icodineconv": [10, 58, 64, 70, 157, 158, 163, 164, 169, 174, 175], "icofixindexupsampl": [10, 58, 157, 159, 160, 161, 165, 166, 167, 170, 171, 172, 176, 177, 178], "icogenericupconv": [10, 58, 157, 159, 160, 161, 165, 166, 167, 170, 171, 172, 176, 177, 178], "icomaxindexupsampl": [10, 58, 157, 159, 160, 161, 165, 166, 167, 170, 171, 172, 176, 177, 178], "icopool": [10, 58, 157, 161, 162, 172, 173], "icorepaconv": [10, 58, 157, 158, 163, 164, 169, 174, 175], "icospmaconv": [10, 58, 137, 157, 158, 163, 164, 169, 174, 175], "icospmaconvtranspos": [10, 58, 157, 159, 160, 161, 165, 166, 167, 170, 171, 172, 176, 177, 178], "icoupconv": [10, 58, 157, 159, 160, 161, 166, 167, 170, 171, 172, 177, 178], "icoupsampl": [10, 58, 157, 159, 160, 161, 165, 166, 167, 170, 171, 172, 176, 177, 178], "debug_msg": [10, 58, 182, 191], "downsampl": [10, 58, 88, 89, 100, 124, 125, 126, 130, 160, 161, 162, 166, 171, 172, 173, 177, 182, 192, 193, 194, 202, 203, 224, 226, 227, 228, 234, 235], "downsample_data": [10, 58, 182, 192, 193, 194, 202, 203, 226, 227, 228, 234, 235], "downsample_ico": [10, 58, 182, 192, 193, 194, 202, 203, 226, 227, 228, 234, 235], "find_neighbor": [10, 58, 182, 195, 229], "find_rotation_interpol_coef": [10, 58, 182, 196, 220, 230, 244], "get_logg": [10, 58, 182, 197], "interpol": [10, 58, 67, 73, 113, 129, 130, 159, 167, 170, 178, 180, 181, 182, 186, 189, 192, 193, 194, 196, 199, 202, 203, 220, 222, 226, 227, 228, 230, 234, 235, 244, 246, 251], "interpolate_data": [10, 58, 182, 192, 193, 194, 202, 203, 226, 227, 228, 234, 235], "neighbors_rec": [10, 58, 163, 174, 182, 195, 215, 216, 229, 238, 239], "number_of_ico_vertic": [10, 58, 182, 217, 219, 241, 243], "number_of_neighbor": [10, 58, 182, 214, 218, 237, 242], "order_of_ico_from_vertic": [10, 58, 182, 217, 219, 241, 243], "order_triangl": [10, 58, 182, 220, 244], "patch_tri": [10, 58, 182, 221, 223, 245], "rotate_data": [10, 58, 67, 73, 182, 196, 222, 230, 246], "setup_log": [10, 58, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 249], "sph2cart": [10, 58, 182, 183, 184, 188, 250], "text2ico": [10, 58, 182, 187, 190, 200, 252], "find_corresponding_ord": [10, 58, 182, 185], "hideprint": [10, 58, 182, 204], "compute_and_stor": [10, 58, 182, 205], "decompose_cifti": [10, 58, 182, 206], "read_freesurf": [10, 58, 182, 207], "read_gifti": [10, 58, 182, 208], "surf_data_from_cifti": [10, 58, 182, 209], "ungzip": [10, 58, 182, 210], "volume_from_cifti": [10, 58, 182, 211], "write_freesurf": [10, 58, 182, 212], "write_gifti": [10, 58, 182, 213], "_patch_tri_it": [10, 58, 182, 223], "build_freesurfer_ico": [10, 58, 182, 224], "build_fslr_ref": [10, 58, 182, 225], "get_angle_with_xaxi": [10, 58, 182, 231], "middle_point": [10, 58, 182, 236], "triangles_to_edg": [10, 58, 182, 247], "vertex_adjacency_graph": [10, 58, 182, 248], "walk": 11, "intal": 11, "offici": 11, "releas": 11, "best": [11, 32, 187, 200], "user": [11, 33, 101, 113, 128, 129, 222, 246], "who": 11, "latest": 11, "contribut": 11, "without": [11, 27, 28, 30, 31, 210], "privileg": 11, "pip": 11, "sudo": 11, "git": 11, "repositori": [11, 39, 57], "github": [11, 97, 209, 211], "com": [11, 97], "deepinsight": 11, "page": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "document": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "explain": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "signatur": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "big": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "pictur": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "rais": [14, 53, 55, 56], "typeerror": [14, 56], "annot": 14, "traiterror": 14, "incorrect": 14, "notimplementederror": 14, "handl": [14, 27, 28, 30, 31, 39, 57], "on_predict_batch_start": 14, "trainer": [14, 16, 21, 27, 28, 30, 31], "pl_modul": 14, "batch_idx": [14, 27, 28, 30, 31], "dataloader_idx": [14, 27, 28, 30, 31], "begin": 14, "on_test_batch_start": 14, "on_train_batch_start": 14, "train": [14, 27, 28, 30, 31, 32, 60, 88, 89], "on_validation_batch_start": 14, "sequenc": [16, 21, 27, 28, 30, 31, 61, 68, 79, 81], "hints_batch": [16, 21], "bool": [16, 21, 39, 54, 57, 61, 78, 79, 85, 88, 89, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 180, 181, 201, 204, 206, 215, 220, 221, 233, 238, 244, 245], "basicali": [16, 21], "lightningmodul": [16, 21, 27, 28, 30, 31], "embed": [16, 21], "child": [16, 21, 32, 78, 85], "inherit": [16, 21, 32], "mixin": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "connect": [16, 21, 127, 248], "custom": [16, 21, 27, 28, 30, 31, 56], "predefin": [16, 21], "set_batch_connector": [16, 21], "pass": [16, 21, 27, 28, 30, 31, 55, 127, 163, 164, 165, 174, 175, 176], "reorgan": [16, 21], "your": [16, 21, 27, 28, 30, 31, 32, 39, 50, 51, 57, 253], "accord": [16, 21, 215, 238], "init": [16, 21, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 87, 90, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 204], "default": [16, 21, 27, 28, 30, 31, 32, 35, 39, 56, 57, 61, 62, 64, 65, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 162, 164, 165, 169, 173, 175, 176, 180, 181, 185, 189, 190, 193, 194, 196, 198, 201, 203, 204, 205, 206, 215, 216, 217, 220, 221, 222, 224, 225, 227, 228, 230, 232, 233, 235, 238, 239, 241, 244, 245, 246, 249, 251, 252], "control": [16, 21, 27, 28, 30, 31, 61, 64, 70, 79, 87, 90, 91, 92, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 175, 176, 198, 216, 232, 239], "reproduc": [16, 21, 27, 28, 30, 31], "across": [16, 21, 62, 63, 75, 76], "multipl": [16, 21, 27, 28, 30, 31, 32, 33, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "list": [16, 21, 27, 28, 30, 31, 32, 36, 62, 69, 75, 82, 84, 87, 88, 89, 90, 91, 92, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 193, 194, 195, 202, 203, 227, 228, 229, 234, 235, 247], "attribut": [16, 21, 27, 28, 30, 31, 36, 38, 40, 41, 42, 55, 56], "hint": [16, 21], "specifi": [16, 21, 27, 28, 30, 31, 32, 35, 39, 57, 61, 64, 65, 70, 71, 79, 88, 89, 180, 181, 193, 194, 203, 227, 228, 235], "runtim": [16, 21], "mechan": [16, 21], "dict": [16, 21, 27, 28, 30, 31, 33, 34, 35, 36, 64, 65, 70, 71, 88, 89, 100, 124, 156, 195, 196, 215, 229, 230, 238], "estimator_typ": [17, 18, 19, 20, 22, 23, 24, 25], "tag": [17, 18, 19, 20, 22, 23, 24, 25, 39, 57], "regress": [19, 24], "regressor": [19, 24], "rate": [27, 28, 30, 31, 87, 90, 91, 92], "adam": [27, 28, 30, 31], "decai": [27, 28, 30, 31], "optionali": [27, 28, 30, 31, 88, 89, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "multisteplr": [27, 28], "schedul": [27, 28, 30, 31, 32], "must": [27, 28, 30, 31, 32, 56, 61, 79, 205, 210], "element": [27, 28, 30, 31], "tensor": [27, 28, 30, 31, 94, 95, 96, 98, 99, 102, 111, 112, 114, 115, 130, 132, 133, 134, 135, 136, 138, 147, 168, 191], "variabl": [27, 28, 30, 31, 32, 156], "validation_step_output": [27, 28, 30, 31], "kei": [27, 28, 30, 31, 32, 38, 40, 64, 65, 70, 71, 100, 124, 215, 238], "respectivelli": [27, 28, 30, 31], "configure_optim": [27, 28, 30, 31], "choos": [27, 28, 30, 31], "d": [27, 28, 30, 31, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 164, 165, 168, 175, 176, 186, 189, 199, 251], "But": [27, 28, 30, 31], "gan": [27, 28, 30, 31], "manual": [27, 28, 30, 31], "option": [27, 28, 30, 31, 64, 65, 70, 71, 94, 95, 98, 99, 100, 111, 112, 124, 132, 133, 134, 135, 180, 181, 193, 194, 201, 203, 204, 220, 221, 227, 228, 233, 235, 244, 245], "tupl": [27, 28, 30, 31, 32, 33, 39, 57, 84, 164, 165, 168, 175, 176], "lr_scheduler_config": [27, 28, 30, 31], "dictionari": [27, 28, 30, 31, 38, 40, 41, 64, 65, 70, 71, 88, 89, 215, 238], "lr_schedul": [27, 28, 30, 31], "whose": [27, 28, 30, 31], "configur": [27, 28, 30, 31, 32, 33, 253], "shown": [27, 28, 30, 31], "unit": [27, 28, 30, 31, 101, 113, 128, 129, 198, 216, 232, 236, 239, 240], "updat": [27, 28, 30, 31, 34], "wherea": [27, 28, 30, 31], "should": [27, 28, 30, 31, 39, 55, 57, 127, 163, 164, 165, 174, 175, 176], "metric": [27, 28, 30, 31, 62, 75], "reducelronplateau": [27, 28, 30, 31], "val_loss": [27, 28, 30, 31], "enforc": [27, 28, 30, 31], "thu": [27, 28, 30, 31], "produc": [27, 28, 30, 31], "strict": [27, 28, 30, 31], "progress": [27, 28, 30, 31], "keyword": [27, 28, 30, 31], "log": [27, 28, 30, 31, 94, 95, 96, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 197, 249], "condit": [27, 28, 30, 31, 53], "lightn": [27, 28, 30, 31, 253], "metric_to_track": [27, 28, 30, 31], "often": [27, 28, 30, 31], "optimizer1": [27, 28, 30, 31], "optimizer2": [27, 28, 30, 31], "scheduler1": [27, 28, 30, 31], "scheduler2": [27, 28, 30, 31], "lambdalr": [27, 28, 30, 31], "made": [27, 28, 30, 31], "metric_v": [27, 28, 30, 31], "thing": [27, 28, 30, 31], "know": [27, 28, 30, 31], "automat": [27, 28, 30, 31, 32, 222, 246], "precis": [27, 28, 30, 31], "lbfg": [27, 28, 30, 31], "closur": [27, 28, 30, 31], "switch": [27, 28, 30, 31], "them": [27, 28, 30, 31, 68, 81, 127, 163, 164, 165, 174, 175, 176, 205, 248], "yourself": [27, 28, 30, 31], "overrid": [27, 28, 30, 31], "optimizer_step": [27, 28, 30, 31], "hook": [27, 28, 30, 31, 127, 163, 164, 165, 174, 175, 176], "on_validation_epoch_end": [27, 28, 30, 31], "loop": [27, 28, 30, 31], "predict_step": [27, 28, 30, 31], "By": [27, 28, 30, 31], "forward": [27, 28, 30, 31, 98, 99, 101, 102, 111, 112, 113, 114, 115, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "add": [27, 28, 30, 31, 34, 66, 72, 165, 176], "logic": [27, 28, 30, 31], "infer": [27, 28, 30, 31], "multi": [27, 28, 30, 31, 78, 85], "prevent": [27, 28, 30, 31], "oom": [27, 28, 30, 31], "basepredictionwrit": [27, 28, 30, 31], "write": [27, 28, 30, 31, 212, 213], "databas": [27, 28, 30, 31], "spawn": [27, 28, 30, 31], "happen": [27, 28, 30, 31], "strategi": [27, 28, 30, 31], "ddp_spawn": [27, 28, 30, 31], "tpu": [27, 28, 30, 31], "core": [27, 28, 30, 31], "won": [27, 28, 30, 31], "index": [27, 28, 30, 31, 64, 65, 70, 71, 192, 195, 215, 226, 229, 238, 247], "mymodel": [27, 28, 30, 31], "dm": [27, 28, 30, 31], "training_step": [27, 28, 30, 31], "addit": [27, 28, 30, 31, 101, 113, 128, 129, 158, 169], "bar": [27, 28, 30, 31], "logger": [27, 28, 30, 31, 197], "skip": [27, 28, 30, 31, 125, 126, 127], "support": [27, 28, 30, 31], "deepspe": [27, 28, 30, 31], "special": [27, 28, 30, 31, 32], "calcul": [27, 28, 30, 31], "fancier": [27, 28, 30, 31], "someth": [27, 28, 30, 31], "z": [27, 28, 30, 31, 98, 99, 114, 132, 133, 136, 183, 184, 186, 188, 189, 199, 250, 251], "out": [27, 28, 30, 31, 65, 71, 84, 102, 113, 114, 115, 129, 136, 138, 147], "super": [27, 28, 30, 31], "automatic_optim": [27, 28, 30, 31], "opt1": [27, 28, 30, 31], "opt2": [27, 28, 30, 31], "decod": [27, 28, 30, 31, 98, 101, 111, 113, 114, 128, 129, 132, 134, 136], "accumulate_grad_batch": [27, 28, 30, 31], "intern": [27, 28, 30, 31], "validation_step": [27, 28, 30, 31], "anyth": [27, 28, 30, 31], "interest": [27, 28, 30, 31, 88, 89, 100, 124], "val": [27, 28, 30, 31], "own": [27, 28, 30, 31], "whatev": [27, 28, 30, 31], "sample_img": [27, 28, 30, 31], "grid": [27, 28, 30, 31, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 186, 189, 198, 199, 216, 232, 239, 251], "add_imag": [27, 28, 30, 31], "example_imag": [27, 28, 30, 31], "labels_hat": [27, 28, 30, 31], "log_dict": [27, 28, 30, 31], "argument": [27, 28, 30, 31, 35, 56, 205, 222, 246], "recommend": [27, 28, 30, 31], "quickli": [27, 28, 30, 31], "tell": [27, 28, 30, 31], "don": [27, 28, 30, 31], "put": [27, 28, 30, 31], "disabl": [27, 28, 30, 31], "At": [27, 28, 30, 31, 113, 129], "goe": [27, 28, 30, 31], "back": [27, 28, 30, 31], "version": [30, 31, 32, 35], "x_i": [30, 31], "x_j": [30, 31], "maxim": [30, 31], "minim": [30, 31, 214, 237], "part": [30, 31], "head": [30, 31], "deep": [30, 31, 253], "cnn": [30, 31, 60], "scnn": [30, 31], "respons": [30, 31], "extract": [30, 31, 210], "denot": [30, 31], "finish": [30, 31], "remov": [30, 31, 88, 89], "extractor": [30, 31], "wors": [30, 31], "those": [30, 31, 215, 238], "new": [30, 31, 39, 57, 61, 79, 80, 100, 124, 159, 170], "becom": [30, 31], "invari": [30, 31], "stage": [30, 31], "z_i": [30, 31], "z_j": [30, 31], "therebi": [30, 31], "infonc": [30, 31], "propos": [30, 31], "aaron": [30, 31], "van": [30, 31], "den": [30, 31], "oord": [30, 31], "short": [30, 31], "over": [30, 31], "formal": [30, 31], "written": [30, 31], "ell_": [30, 31], "j": [30, 31], "frac": [30, 31], "exp": [30, 31], "sim": [30, 31], "tau": [30, 31], "sum_": [30, 31], "k": [30, 31, 62, 75, 158, 163, 169, 174, 190, 252], "2n": [30, 31], "mathbb": [30, 31], "kneq": [30, 31], "z_k": [30, 31], "logleft": [30, 31], "determin": [30, 31, 62, 75], "peak": [30, 31], "bound": [30, 31, 74, 83], "balanc": [30, 31], "influenc": [30, 31], "dissimilar": [30, 31], "versu": [30, 31], "cosin": [30, 31], "cdot": [30, 31], "maximum": [30, 31, 180, 181, 221, 245], "minimum": [30, 31, 180, 181], "converg": [30, 31], "around": [30, 31], "exact": [30, 31], "opposit": [30, 31], "flexibl": [30, 31], "altern": [30, 31], "track": [30, 31], "projector": [30, 31], "cosineannealinglr": [30, 31], "auxiliari": [30, 31], "aux": [30, 31], "expfil": 32, "selector": [32, 33], "cv": [32, 36], "logdir": 32, "verbos": 32, "useful": 32, "date": 32, "reus": [32, 222, 246], "section": 32, "descipt": 32, "scaler": 32, "dl": 32, "interfac": [32, 33, 35, 36, 253], "probe": 32, "environ": [32, 33, 34, 36], "fullfil": 32, "constraint": 32, "impos": 32, "interface_occurr": 32, "definit": [32, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 202, 234], "term": [32, 35, 37], "interface_vers": 32, "__version__": 32, "mismatch": 32, "detect": 32, "connot": 32, "previous": 32, "param": [32, 35, 36], "cross": [32, 36, 164, 165, 175, 176], "instanci": 32, "prefix": 32, "filter": [32, 33, 64, 70, 98, 99, 100, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 162, 163, 166, 169, 171, 173, 174, 177], "block": [32, 125, 126, 130, 131], "construct": 32, "hierarch": 32, "properti": [32, 53], "parent": 32, "separ": 32, "form": [32, 39, 57, 62, 75], "architecture_nam": [32, 39, 57], "revis": [32, 39, 57], "hug": [32, 39, 57], "face": [32, 39, 57, 180, 181], "specifid": 32, "machin": [32, 39, 57], "design": 32, "select": [32, 33], "appropri": [32, 33, 56], "scheme": 32, "hyperparapet": 32, "defautl": 32, "coupl": 32, "moment": 32, "dictionarai": 32, "config": 33, "env": [33, 34, 36], "declar": 33, "filter_conf": 33, "updated_env": 34, "environemt": 34, "my_modul": 35, "my_class": 35, "exppect": 35, "module": 35, "cl": 35, "replac": [36, 65, 71, 88, 89, 101, 113, 128, 129], "updated_param": 36, "param_set": 36, "termin": 37, "expos": [38, 40], "access": [38, 40, 156, 205], "value_kei": [38, 40], "b": [38, 40], "retriev": [39, 57, 88, 89], "locat": [39, 57, 88, 89, 210], "avaiabl": [39, 57], "pathlib": [39, 57], "repo": [39, 57], "classmethod": [39, 57, 62, 75, 100, 124], "hf_download": [39, 57], "hf_id": [39, 57], "hf_revis": [39, 57], "force_download": [39, 57], "present": [39, 56, 57], "alwai": [39, 57], "resum": [39, 57], "forc": [39, 57], "id": [39, 57], "commit": [39, 57], "hash": [39, 57], "exist": [39, 57, 88, 89, 224, 225], "cach": [39, 57, 64, 65, 67, 70, 71, 73, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 205], "hub_split": [39, 57], "hub_nam": [39, 57], "interpret": [39, 57], "hub_id": [39, 57], "hub_revis": [39, 57], "decalr": [39, 57], "ns_download": [39, 57], "ns_id": [39, 57], "reset": [41, 50, 51], "background": 41, "foreground": [41, 43], "reverse_dict": 41, "revers": [41, 98, 132], "alia": [42, 43, 61, 79, 80, 100, 124], "conveni": [50, 51], "style": [50, 51], "ansi": [50, 51], "fn": 53, "attribute_nam": 53, "descriptor": 53, "protocol": 53, "decor": [53, 55, 78, 85, 205, 222, 246], "attributeerror": [53, 55], "falsei": 53, "hasattr": [53, 55], "doc": 53, "org": [53, 209, 211], "howto": 53, "html": 53, "explan": 53, "deleg": 54, "underli": 54, "truthi": 55, "callabl": [55, 88, 89, 205], "either": [55, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "otherwis": [55, 56], "unavail": 55, "helloifeven": 55, "_x_is_even": 55, "say_hello": 55, "hello": 55, "obj": 55, "msg": [56, 191], "presenc": 56, "trail": 56, "underscor": 56, "except": 56, "messag": [56, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 191], "yet": 56, "string": [56, 180, 181], "substitut": 56, "eg": 56, "sparsifi": 56, "fitt": 56, "inspir": 60, "natur": 60, "randomize_per_channel": [61, 78, 79, 85], "field": [61, 64, 70, 79, 80, 100, 124], "tranform": [61, 79, 187, 200], "channel": [61, 78, 79, 85, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178], "wise": [61, 79, 113, 129], "randomli": [62, 63, 75, 76], "bootstrap": [62, 75], "measur": [62, 63, 67, 73, 75, 76, 77], "group": [62, 75], "subject": [62, 63, 75, 76, 88, 89], "vertex": [62, 63, 64, 65, 70, 71, 75, 76, 113, 129, 215, 216, 222, 238, 239, 240, 246, 247, 248], "hemispher": [62, 63, 75, 76, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "curupt": [62, 63, 75, 76, 77], "cortic": [62, 63, 67, 73, 75, 76, 77, 86, 93, 94, 95, 97, 98, 99, 101, 102, 111, 112, 113, 114, 115, 128, 129, 132, 133, 134, 135, 136, 138, 147], "meta": [62, 75], "regroup": [62, 75], "m": [62, 64, 65, 67, 70, 71, 73, 75, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 180, 181, 194, 201, 207, 208, 212, 213, 215, 220, 228, 233, 238, 244, 248], "pca": [62, 75], "compon": [62, 75, 183, 184, 188, 250], "panda": [62, 75, 88, 89], "datafram": [62, 75, 88, 89], "extern": [62, 75], "distanc": [62, 75, 163, 174], "popul": [62, 75], "bootstap": [62, 75], "arr": [62, 63, 65, 66, 67, 71, 72, 73, 75, 76], "bootsrap": [62, 75], "controlater": [63, 76], "cachedir": [64, 65, 67, 70, 71, 73, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 205], "convolut": [64, 70, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177], "speed": [64, 70, 100, 124], "recept": [64, 70], "deviat": [64, 66, 70, 72], "kernel": [64, 70, 164, 165, 175, 176, 215, 216, 238, 239], "icosahdron": [64, 65, 67, 70, 71, 73], "optionnali": [64, 65, 70, 71, 78, 85, 88, 89], "neighboor": [64, 65, 70, 71, 180, 181], "sufifi": [64, 65, 70, 71], "ie": [64, 65, 70, 71, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "organ": [64, 65, 70, 71, 206, 215, 238], "ring": [64, 65, 70, 71, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 162, 166, 169, 171, 173, 177, 195, 215, 229, 238], "replacement_valu": [65, 71], "connex": [65, 71], "neighborhood": [65, 71, 125, 130, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 198, 214, 216, 232, 237, 239], "ablat": [65, 71], "cutout": [65, 71], "cut": [65, 71], "nois": [66, 72], "barycentr": [67, 73, 196, 220, 222, 230, 244, 246], "angl": [67, 73, 183, 184, 188, 196, 215, 222, 230, 231, 238, 246, 250], "degre": [67, 73, 196, 222, 230, 246], "euler": [67, 73, 196, 222, 230, 246], "folder": [67, 73, 88, 89, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "smart": [67, 73, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "speedup": [67, 73, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "accordingli": [67, 73], "seri": [69, 82], "n_channel": [69, 82], "_data": [69, 82], "dtype": [74, 80, 83, 186, 199], "uplet": [74, 83, 163, 174, 196, 222, 230, 246], "aplli": 77, "rand_mask": 77, "binari": [77, 94, 95], "corrupt": 77, "mask": [77, 88, 89, 94, 95], "multichannel": [78, 85], "multichannelaugment": [78, 85], "applic": [78, 85, 101, 113, 128, 129], "high": 80, "liftifi": 84, "synthet": 86, "gene": [87, 90, 91, 92], "subject_in_pattern": [88, 89], "target": [88, 89, 187, 190, 200, 252], "target_map": [88, 89], "n_max": [88, 89], "withdraw_subject": [88, 89], "target_ico_ord": [88, 89], "scalabl": [88, 89], "neuroimag": [88, 89, 114, 136], "store": [88, 89, 205, 206, 207, 208, 222, 246], "regex": [88, 89], "nibabel": [88, 89, 209, 211], "level": [88, 89, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249], "identifi": [88, 89, 187, 200], "ico": [88, 89, 100, 124, 158, 169], "tabular": [88, 89], "particip": [88, 89], "tsv": [88, 89], "request": [88, 89, 97], "conta": [88, 89], "triangular": [88, 89, 180, 181, 221, 223, 245], "debug": [88, 89, 101, 102, 113, 114, 115, 127, 128, 129, 136, 138, 147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 191], "purpos": [88, 89], "desir": [88, 89, 214, 237], "problem": [91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "ndarrai": [91, 92, 183, 184, 188, 250], "assocait": [91, 92], "variat": [93, 97, 114, 136], "svae": [93, 114, 136], "beta": [94, 95, 183, 184, 188, 250], "left_mask": [94, 95], "right_mask": [94, 95], "use_ms": [94, 95], "kl": [94, 95], "diverg": [94, 95], "likelihood": [94, 95, 96], "recon": 96, "reconstruct": [96, 98, 114, 132, 136], "w": [96, 137], "relat": [97, 100, 124], "gmvae": 97, "rest": [97, 114, 136], "state": [97, 98, 114, 132, 136], "fmri": [97, 114, 136], "autoencod": [97, 114, 136], "libilab": 97, "rsfmri": 97, "vision": [97, 221, 245], "output_shap": [98, 132, 165, 176], "before_latent_dim": [98, 132], "latent_dim": [98, 99, 111, 112, 114, 132, 133, 134, 135, 136], "conv_flt": [98, 99, 111, 112, 114, 132, 133, 134, 135, 136], "fusion_level": [98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "leakyrelu": [98, 99, 111, 112, 114, 132, 133, 134, 135, 136], "batch_norm": [98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "output_channel": [98, 132], "input_dim": [98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "squar": [98, 132, 137], "convnet": [98, 132, 137], "dens": [98, 132], "pool": [98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 173], "stochast": [98, 114, 132, 136], "left_recon_x": [98, 114, 132, 136], "input_channel": [98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "right_recon_x": [98, 114, 132, 136], "left_x": [99, 102, 111, 112, 114, 115, 133, 134, 135, 136, 138, 147], "right_x": [99, 102, 111, 112, 114, 115, 133, 134, 135, 136, 138, 147], "q": [99, 114, 133, 136], "input_ord": [100, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "n_layer": [100, 124], "repa_s": [100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "repa_zoom": [100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dynamic_repa_zoom": [100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "repa": [100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 216, 239], "ico_info": [100, 124], "build_ico_info": [100, 124], "tangent": [100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 174, 198, 215, 231, 232, 238], "factor": [100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 198, 216, 232, 239], "tessal": [100, 124, 201, 221, 233, 245], "tessel": [100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 221, 245], "neighbor_indic": [100, 124, 158, 160, 161, 166, 169, 171, 172, 177], "down_indic": [100, 124, 125, 130, 160, 161, 162, 166, 171, 172, 173, 177, 193, 194, 227, 228], "up_indic": [100, 124, 159, 167, 170, 178, 202, 203, 234, 235], "conv_neighbor_indic": [100, 124], "dictionnari": [100, 124, 205], "icosehedron": [100, 124], "upsampl": [100, 113, 124, 129, 130, 159, 160, 161, 166, 167, 170, 171, 172, 177, 178, 203, 235], "onform": [100, 124], "gride": [101, 102, 126, 128, 131, 138, 186, 199], "net": [101, 113, 127, 128, 129], "built": [101, 113, 128, 129], "upon": [101, 113, 128, 129], "spma": [101, 128], "rectifi": [101, 113, 128, 129], "doubl": [101, 113, 128, 129], "halv": [101, 113, 128, 129], "zhao": [101, 113, 128, 129], "ipmi": [101, 113, 128, 129], "2019": [101, 113, 127, 128, 129], "cfg": [102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "4096": [102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "init_weight": [102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "512": [102, 115, 138, 147], "stand": [102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "wether": [102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "interp": [113, 129, 130], "2x2": [113, 129], "1x1": [113, 129], "maxpad": [113, 129, 130], "shift": [113, 129, 130], "zeropad": [113, 129, 130], "sphericalgva": [114, 136], "2021": [114, 136], "vert": [114, 115, 136, 147], "tri": [114, 115, 136, 147, 223], "reparameter": [114, 136], "reparametr": [114, 136], "trick": [114, 136], "conv_lay": [125, 130], "in_ch": [125, 126, 130, 131], "out_ch": [125, 126, 130, 131], "conv_neigh_indic": [125, 130], "down_neigh_indic": [125, 161, 162, 172, 173], "pool_mod": 125, "bn": [125, 126, 130, 131], "discret": [125, 130, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "hidden_channel": 127, "pool_ratio": 127, "sum_r": 127, "act": 127, "graph": [127, 248], "unpool": 127, "hongyang": 127, "gao": 127, "shuiwang": 127, "ji": 127, "arxiv": 127, "ratio": 127, "summat": 127, "nonlinear": 127, "edge_index": 127, "overridden": [127, 163, 164, 165, 174, 175, 176], "subclass": [127, 163, 164, 165, 174, 175, 176], "although": [127, 163, 164, 165, 174, 175, 176], "recip": [127, 163, 164, 165, 174, 175, 176], "afterward": [127, 163, 164, 165, 174, 175, 176], "former": [127, 163, 164, 165, 174, 175, 176], "care": [127, 163, 164, 165, 174, 175, 176, 222, 246], "latter": [127, 163, 164, 165, 174, 175, 176], "silent": [127, 163, 164, 165, 174, 175, 176], "neigh_indic": [130, 158, 163, 169, 174], "up_neigh_indic": [130, 159, 160, 161, 166, 167, 170, 171, 172, 177, 178], "upsamp": [130, 131], "upconv": [130, 131], "x1": [130, 131], "x2": [130, 131], "max_pool_indic": [130, 161, 172], "output_dim": 137, "klass_nam": 156, "klass_param": 156, "destination_module_glob": 156, "publicli": 156, "assign": [156, 215, 238], "in_feat": [158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178], "out_feat": [158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178], "formul": [158, 169], "ico2_vertic": [158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178], "ico2_triangl": [158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178], "asarrai": [158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 173, 177, 178, 202, 234], "ico2_x": [158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178], "fix": [159, 170, 180, 181, 240], "ico3_vertic": [159, 160, 161, 162, 166, 167, 170, 171, 172, 173, 177, 178], "ico3_triangl": [159, 160, 161, 162, 166, 167, 170, 171, 172, 173, 177, 178], "ico3_x": [159, 160, 161, 162, 166, 167, 170, 171, 172, 173, 177, 178], "slow": [160, 171], "pooling_typ": [161, 162, 172, 173], "rectagular": [163, 174], "plane": [163, 174, 215, 231, 238], "neigh_weight": [163, 174], "proj_ico_x": [164, 165, 175, 176], "correl": [164, 165, 175, 176], "pad_azimuth": [164, 165, 168, 175, 176], "pad_elev": [164, 165, 168, 175, 176], "zero_pad": [165, 176], "icoconv": [165, 176], "vmin": [180, 181], "vmax": [180, 181], "black": [180, 181], "color_map": [180, 181], "linearsegmentedcolormap": [180, 181], "repres": [180, 181, 247, 248], "opac": [180, 181], "Not": [180, 181], "edg": [180, 181, 247, 248], "line": [180, 181], "cm": [180, 181], "coolwarm": [180, 181], "colormap": [180, 181], "coordin": [182, 183, 184, 186, 187, 188, 189, 199, 200, 224, 240, 250, 251], "system": 182, "tool": [182, 253], "cartesian": [183, 184, 188, 250], "array_lik": [183, 184, 188, 250], "radiant": [183, 184, 188, 250], "pi": [183, 184], "r": [183, 184, 188, 250], "ref_arrai": 185, "atol": [185, 190, 252], "0001": [185, 190, 252], "uniqu": 185, "toler": [185, 190, 252], "along": 185, "new_ord": 185, "resx": [186, 189, 199, 251], "resi": [186, 189, 199, 251], "ico2_vert": [186, 187, 189, 190, 192, 193, 195, 199, 200, 202, 203, 215, 216, 221, 226, 227, 229, 234, 235, 238, 239, 245, 251, 252], "ico2_tri": [186, 187, 189, 190, 192, 193, 195, 199, 200, 202, 203, 215, 216, 221, 226, 227, 229, 234, 235, 238, 239, 245, 251, 252], "y_grid": [186, 189, 199, 251], "ref_vertic": [187, 190, 200, 252], "ico2_std_vert": [187, 190, 200, 252], "ico2_std_tri": [187, 190, 200, 252], "projecte": [189, 251], "y_std": [190, 252], "target_vertic": [192, 202, 226, 234], "n_dim": [192, 202, 226, 234], "n_queri": [192, 202, 226, 234], "nearest_idx": [192, 226], "ico3_vert": [192, 201, 202, 214, 217, 219, 221, 222, 226, 233, 234, 237, 241, 243, 245, 246], "ico3_tri": [192, 201, 202, 214, 217, 219, 221, 222, 226, 233, 234, 237, 241, 243, 245, 246], "down3to2": [192, 226], "ico3_down_vertic": [192, 226], "n_featur": [193, 203, 222, 227, 235, 246], "consecut": [193, 194, 203, 227, 228, 235], "downsampled_data": [193, 227], "new_n_vertic": [193, 203, 227, 235], "ico4_vert": [193, 194, 203, 227, 228, 235], "ico4_tri": [193, 194, 203, 227, 228, 235], "reshap": [193, 195, 202, 203, 222, 227, 229, 234, 235, 246], "y_down": [193, 227], "squeez": [193, 203, 222, 227, 235, 246], "geometri": [194, 202, 207, 208, 212, 213, 228, 234, 236], "new_vertic": [194, 228], "newli": [194, 228], "icosahedorn": [194, 228], "new_triangl": [194, 228], "ico2_down_vert": [194, 228], "ico2_down_tri": [194, 228], "start_nod": [195, 229], "recurs": [195, 229], "node_neigh": [195, 229], "center": [195, 215, 216, 220, 229, 231, 238, 239, 244], "coeffici": [196, 230], "asssoci": [196, 230], "euclidian": [196, 230], "three": [196, 230], "setup": [197, 249], "2d": [198, 232], "grid_in_spher": [198, 216, 232, 239], "grid_in_tplan": [198, 232], "mesh": [201, 202, 215, 233, 234, 238, 248], "target_triangl": [202, 234], "miss": [202, 234], "regular": [202, 234], "interp_indic": [202, 234], "n_feat": [202, 234], "y_up": [202, 203, 234, 235], "upper": [203, 235], "upsampled_data": [203, 235], "hide_err": 204, "secur": 204, "redirect": 204, "context": 204, "manag": 204, "On": 204, "complet": [204, 205], "restor": 204, "hide": 204, "func": 205, "wrap": 205, "receiv": 205, "directori": 205, "transpar": 205, "overlap": 205, "cifti_fil": 206, "decompos": 206, "cifti": [206, 209, 211], "vol": 206, "volum": [206, 211, 253], "surf_left": 206, "surf_right": 206, "surf_fil": [207, 208, 212, 213], "read": [207, 208], "gifti": [208, 213], "surf_nam": 209, "nbviewer": [209, 211], "neurohackademi": [209, 211], "nh2020": [209, 211], "curriculum": [209, 211], "blob": [209, 211], "master": [209, 211], "markiewicz": [209, 211], "gnu": 210, "archiv": 210, "open": 210, "gz": 210, "out_path": 210, "extens": 210, "n_neigh": [214, 218, 237, 242], "length": [215, 238], "remain": [215, 238], "n_vert": [217, 241], "min_order_to_get_n_neighbor": [218, 242], "hi": [219, 243], "clockwise_from_cent": [220, 244], "clockwis": [220, 244], "view": [220, 244], "counter": [220, 244], "reordered_triangl": [220, 244], "reorder": [220, 244], "ico0_vert": [220, 244], "ico0_tri": [220, 244], "clockwise_ico0_tri": [220, 244], "counter_clockwise_ico0_tri": [220, 244], "n_job": [221, 245], "concurr": [221, 245], "job": [221, 245], "euclidean": [222, 246], "rotated_data": [222, 246], "y_rot": [222, 246], "lower_vertic": 223, "ico_fil": 224, "rescal": 224, "topologi": [224, 225], "ref_fil": 225, "fslr": 225, "point_1": 236, "point_2": 236, "middle_point_cach": 236, "middl": 236, "return_index": 247, "triangles_index": 247, "networkx": 248, "nearbi": 248, "potenti": 248, "smooth": 248, "info": 249, "logfil": 249, "unifi": 253, "compat": 253, "analyz": 253, "brain": 253, "product": 253, "advanc": 253, "availbl": 253, "hydra": 253}, "objects": {"nidl.callbacks.check_typing": [[14, 0, 1, "", "BatchTypingCallback"]], "nidl.callbacks.check_typing.BatchTypingCallback": [[14, 1, 1, "", "on_predict_batch_start"], [14, 1, 1, "", "on_test_batch_start"], [14, 1, 1, "", "on_train_batch_start"], [14, 1, 1, "", "on_validation_batch_start"]], "nidl.estimators": [[16, 0, 1, "", "BaseEstimator"], [17, 0, 1, "", "ClassifierMixin"], [18, 0, 1, "", "ClusterMixin"], [19, 0, 1, "", "RegressorMixin"], [20, 0, 1, "", "TransformerMixin"]], "nidl.estimators.base": [[21, 0, 1, "", "BaseEstimator"], [22, 0, 1, "", "ClassifierMixin"], [23, 0, 1, "", "ClusterMixin"], [24, 0, 1, "", "RegressorMixin"], [25, 0, 1, "", "TransformerMixin"]], "nidl.estimators.linear": [[27, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.LogisticRegression": [[27, 1, 1, "", "configure_optimizers"], [27, 1, 1, "", "on_validation_epoch_end"], [27, 1, 1, "", "predict_step"], [27, 1, 1, "", "training_step"], [27, 1, 1, "", "validation_step"]], "nidl.estimators.linear.logistic_regression": [[28, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.logistic_regression.LogisticRegression": [[28, 1, 1, "", "configure_optimizers"], [28, 1, 1, "", "on_validation_epoch_end"], [28, 1, 1, "", "predict_step"], [28, 1, 1, "", "training_step"], [28, 1, 1, "", "validation_step"]], "nidl.estimators.ssl": [[30, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.SimCLR": [[30, 1, 1, "", "configure_optimizers"], [30, 1, 1, "", "on_validation_epoch_end"], [30, 1, 1, "", "predict_step"], [30, 1, 1, "", "training_step"], [30, 1, 1, "", "validation_step"]], "nidl.estimators.ssl.simclr": [[31, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.simclr.SimCLR": [[31, 1, 1, "", "configure_optimizers"], [31, 1, 1, "", "on_validation_epoch_end"], [31, 1, 1, "", "predict_step"], [31, 1, 1, "", "training_step"], [31, 1, 1, "", "validation_step"]], "nidl.experiment": [[32, 2, 1, "", "fetch_experiment"], [33, 2, 1, "", "filter_config"], [34, 2, 1, "", "get_env"], [35, 2, 1, "", "load_interface"], [36, 2, 1, "", "update_params"]], "nidl.utils": [[38, 0, 1, "", "Bunch"], [39, 0, 1, "", "Weights"], [52, 2, 1, "", "print_multicolor"]], "nidl.utils.Weights": [[39, 1, 1, "", "hf_download"], [39, 1, 1, "", "hub_split"], [39, 1, 1, "", "load_pretrained"], [39, 1, 1, "", "ns_download"]], "nidl.utils.bunch": [[40, 0, 1, "", "Bunch"]], "nidl.utils.color": [[41, 0, 1, "", "Colored"], [42, 2, 1, "", "attr"], [43, 2, 1, "", "fg"], [44, 2, 1, "", "hex"], [45, 2, 1, "", "print_multicolor"], [46, 2, 1, "", "print_result"], [47, 2, 1, "", "print_subtitle"], [48, 2, 1, "", "print_title"], [49, 2, 1, "", "print_warning"], [50, 2, 1, "", "random_stylize"], [51, 2, 1, "", "stylize"]], "nidl.utils.color.Colored": [[41, 1, 1, "", "attribute"], [41, 1, 1, "", "background"], [41, 1, 1, "", "foreground"], [41, 1, 1, "", "reverse_dict"]], "nidl.utils.validation": [[53, 0, 1, "", "_AvailableIfDescriptor"], [54, 2, 1, "", "_estimator_is"], [55, 2, 1, "", "available_if"], [56, 2, 1, "", "check_is_fitted"]], "nidl.utils.weights": [[57, 0, 1, "", "Weights"]], "nidl.utils.weights.Weights": [[57, 1, 1, "", "hf_download"], [57, 1, 1, "", "hub_split"], [57, 1, 1, "", "load_pretrained"], [57, 1, 1, "", "ns_download"]], "surfify.augmentation": [[61, 0, 1, "", "BaseTransformer"], [62, 0, 1, "", "GroupMixUp"], [63, 0, 1, "", "HemiMixUp"], [64, 0, 1, "", "SurfBlur"], [65, 0, 1, "", "SurfCutOut"], [66, 0, 1, "", "SurfNoise"], [67, 0, 1, "", "SurfRotation"], [68, 0, 1, "", "Transformer"], [69, 2, 1, "", "apply_chained_transforms"], [74, 2, 1, "", "interval"], [78, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.BaseTransformer": [[61, 0, 1, "", "Transform"], [61, 1, 1, "", "register"]], "surfify.augmentation.BaseTransformer.Transform": [[61, 3, 1, "", "probability"], [61, 3, 1, "", "randomize_per_channel"], [61, 3, 1, "", "transform"]], "surfify.augmentation.GroupMixUp": [[62, 1, 1, "", "groupby"], [62, 1, 1, "", "run"]], "surfify.augmentation.HemiMixUp": [[63, 1, 1, "", "run"]], "surfify.augmentation.SurfBlur": [[64, 1, 1, "", "run"]], "surfify.augmentation.SurfCutOut": [[65, 1, 1, "", "run"]], "surfify.augmentation.SurfNoise": [[66, 1, 1, "", "run"]], "surfify.augmentation.SurfRotation": [[67, 1, 1, "", "run"]], "surfify.augmentation.base": [[70, 0, 1, "", "SurfBlur"], [71, 0, 1, "", "SurfCutOut"], [72, 0, 1, "", "SurfNoise"], [73, 0, 1, "", "SurfRotation"]], "surfify.augmentation.base.SurfBlur": [[70, 1, 1, "", "run"]], "surfify.augmentation.base.SurfCutOut": [[71, 1, 1, "", "run"]], "surfify.augmentation.base.SurfNoise": [[72, 1, 1, "", "run"]], "surfify.augmentation.base.SurfRotation": [[73, 1, 1, "", "run"]], "surfify.augmentation.mixup": [[75, 0, 1, "", "GroupMixUp"], [76, 0, 1, "", "HemiMixUp"], [77, 0, 1, "", "MixUpAugmentation"]], "surfify.augmentation.mixup.GroupMixUp": [[75, 1, 1, "", "groupby"], [75, 1, 1, "", "run"]], "surfify.augmentation.mixup.HemiMixUp": [[76, 1, 1, "", "run"]], "surfify.augmentation.mixup.MixUpAugmentation": [[77, 1, 1, "", "rand_mask"]], "surfify.augmentation.utils": [[79, 0, 1, "", "BaseTransformer"], [80, 0, 1, "", "RandomAugmentation"], [81, 0, 1, "", "Transformer"], [82, 2, 1, "", "apply_chained_transforms"], [83, 2, 1, "", "interval"], [84, 2, 1, "", "listify"], [85, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.utils.BaseTransformer": [[79, 0, 1, "", "Transform"], [79, 1, 1, "", "register"]], "surfify.augmentation.utils.BaseTransformer.Transform": [[79, 3, 1, "", "probability"], [79, 3, 1, "", "randomize_per_channel"], [79, 3, 1, "", "transform"]], "surfify.augmentation.utils.RandomAugmentation": [[80, 0, 1, "", "Interval"]], "surfify.augmentation.utils.RandomAugmentation.Interval": [[80, 3, 1, "", "dtype"], [80, 3, 1, "", "high"], [80, 3, 1, "", "low"]], "surfify.datasets": [[87, 0, 1, "", "ClassificationDataset"], [88, 0, 1, "", "GenericSurfDataset"], [92, 2, 1, "", "make_classification"]], "surfify.datasets._generic": [[89, 0, 1, "", "GenericSurfDataset"]], "surfify.datasets._samples_generator": [[90, 0, 1, "", "ClassificationDataset"], [91, 2, 1, "", "make_classification"]], "surfify.losses": [[94, 0, 1, "", "SphericalVAELoss"]], "surfify.losses.vae": [[95, 0, 1, "", "SphericalVAELoss"], [96, 2, 1, "", "log_likelihood"]], "surfify.models": [[98, 0, 1, "", "HemiFusionDecoder"], [99, 0, 1, "", "HemiFusionEncoder"], [100, 0, 1, "", "SphericalBase"], [101, 0, 1, "", "SphericalGUNet"], [102, 0, 1, "", "SphericalGVGG"], [103, 0, 1, "", "SphericalGVGG11"], [104, 0, 1, "", "SphericalGVGG11BN"], [105, 0, 1, "", "SphericalGVGG13"], [106, 0, 1, "", "SphericalGVGG13BN"], [107, 0, 1, "", "SphericalGVGG16"], [108, 0, 1, "", "SphericalGVGG16BN"], [109, 0, 1, "", "SphericalGVGG19"], [110, 0, 1, "", "SphericalGVGG19BN"], [111, 0, 1, "", "SphericalHemiFusionDecoder"], [112, 0, 1, "", "SphericalHemiFusionEncoder"], [113, 0, 1, "", "SphericalUNet"], [114, 0, 1, "", "SphericalVAE"], [115, 0, 1, "", "SphericalVGG"], [116, 0, 1, "", "SphericalVGG11"], [117, 0, 1, "", "SphericalVGG11BN"], [118, 0, 1, "", "SphericalVGG13"], [119, 0, 1, "", "SphericalVGG13BN"], [120, 0, 1, "", "SphericalVGG16"], [121, 0, 1, "", "SphericalVGG16BN"], [122, 0, 1, "", "SphericalVGG19"], [123, 0, 1, "", "SphericalVGG19BN"]], "surfify.models.HemiFusionDecoder": [[98, 1, 1, "", "forward"]], "surfify.models.HemiFusionEncoder": [[99, 1, 1, "", "forward"]], "surfify.models.SphericalBase": [[100, 0, 1, "", "Ico"], [100, 1, 1, "", "build_ico_info"]], "surfify.models.SphericalBase.Ico": [[100, 3, 1, "", "conv_neighbor_indices"], [100, 3, 1, "", "down_indices"], [100, 3, 1, "", "neighbor_indices"], [100, 3, 1, "", "order"], [100, 3, 1, "", "triangles"], [100, 3, 1, "", "up_indices"], [100, 3, 1, "", "vertices"]], "surfify.models.SphericalGUNet": [[101, 1, 1, "", "forward"]], "surfify.models.SphericalGVGG": [[102, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionDecoder": [[111, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionEncoder": [[112, 1, 1, "", "forward"]], "surfify.models.SphericalUNet": [[113, 1, 1, "", "forward"]], "surfify.models.SphericalVAE": [[114, 1, 1, "", "decode"], [114, 1, 1, "", "encode"], [114, 1, 1, "", "forward"], [114, 1, 1, "", "reparameterize"]], "surfify.models.SphericalVGG": [[115, 1, 1, "", "forward"]], "surfify.models.base": [[124, 0, 1, "", "SphericalBase"]], "surfify.models.base.SphericalBase": [[124, 0, 1, "", "Ico"], [124, 1, 1, "", "build_ico_info"]], "surfify.models.base.SphericalBase.Ico": [[124, 3, 1, "", "conv_neighbor_indices"], [124, 3, 1, "", "down_indices"], [124, 3, 1, "", "neighbor_indices"], [124, 3, 1, "", "order"], [124, 3, 1, "", "triangles"], [124, 3, 1, "", "up_indices"], [124, 3, 1, "", "vertices"]], "surfify.models.unet": [[125, 0, 1, "", "DownBlock"], [126, 0, 1, "", "DownGBlock"], [127, 0, 1, "", "GraphicalUNet"], [128, 0, 1, "", "SphericalGUNet"], [129, 0, 1, "", "SphericalUNet"], [130, 0, 1, "", "UpBlock"], [131, 0, 1, "", "UpGBlock"]], "surfify.models.unet.DownBlock": [[125, 1, 1, "", "forward"]], "surfify.models.unet.DownGBlock": [[126, 1, 1, "", "forward"]], "surfify.models.unet.GraphicalUNet": [[127, 1, 1, "", "forward"]], "surfify.models.unet.SphericalGUNet": [[128, 1, 1, "", "forward"]], "surfify.models.unet.SphericalUNet": [[129, 1, 1, "", "forward"]], "surfify.models.unet.UpBlock": [[130, 1, 1, "", "forward"]], "surfify.models.unet.UpGBlock": [[131, 1, 1, "", "forward"]], "surfify.models.vae": [[132, 0, 1, "", "HemiFusionDecoder"], [133, 0, 1, "", "HemiFusionEncoder"], [134, 0, 1, "", "SphericalHemiFusionDecoder"], [135, 0, 1, "", "SphericalHemiFusionEncoder"], [136, 0, 1, "", "SphericalVAE"], [137, 2, 1, "", "compute_output_dim"]], "surfify.models.vae.HemiFusionDecoder": [[132, 1, 1, "", "forward"]], "surfify.models.vae.HemiFusionEncoder": [[133, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionDecoder": [[134, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionEncoder": [[135, 1, 1, "", "forward"]], "surfify.models.vae.SphericalVAE": [[136, 1, 1, "", "decode"], [136, 1, 1, "", "encode"], [136, 1, 1, "", "forward"], [136, 1, 1, "", "reparameterize"]], "surfify.models.vgg": [[138, 0, 1, "", "SphericalGVGG"], [139, 0, 1, "", "SphericalGVGG11"], [140, 0, 1, "", "SphericalGVGG11BN"], [141, 0, 1, "", "SphericalGVGG13"], [142, 0, 1, "", "SphericalGVGG13BN"], [143, 0, 1, "", "SphericalGVGG16"], [144, 0, 1, "", "SphericalGVGG16BN"], [145, 0, 1, "", "SphericalGVGG19"], [146, 0, 1, "", "SphericalGVGG19BN"], [147, 0, 1, "", "SphericalVGG"], [148, 0, 1, "", "SphericalVGG11"], [149, 0, 1, "", "SphericalVGG11BN"], [150, 0, 1, "", "SphericalVGG13"], [151, 0, 1, "", "SphericalVGG13BN"], [152, 0, 1, "", "SphericalVGG16"], [153, 0, 1, "", "SphericalVGG16BN"], [154, 0, 1, "", "SphericalVGG19"], [155, 0, 1, "", "SphericalVGG19BN"], [156, 2, 1, "", "class_factory"]], "surfify.models.vgg.SphericalGVGG": [[138, 1, 1, "", "forward"]], "surfify.models.vgg.SphericalVGG": [[147, 1, 1, "", "forward"]], "surfify.nn": [[158, 0, 1, "", "IcoDiNeConv"], [159, 0, 1, "", "IcoFixIndexUpSample"], [160, 0, 1, "", "IcoGenericUpConv"], [161, 0, 1, "", "IcoMaxIndexUpSample"], [162, 0, 1, "", "IcoPool"], [163, 0, 1, "", "IcoRePaConv"], [164, 0, 1, "", "IcoSpMaConv"], [165, 0, 1, "", "IcoSpMaConvTranspose"], [166, 0, 1, "", "IcoUpConv"], [167, 0, 1, "", "IcoUpSample"]], "surfify.nn.IcoDiNeConv": [[158, 1, 1, "", "forward"]], "surfify.nn.IcoFixIndexUpSample": [[159, 1, 1, "", "forward"]], "surfify.nn.IcoGenericUpConv": [[160, 1, 1, "", "forward"]], "surfify.nn.IcoMaxIndexUpSample": [[161, 1, 1, "", "forward"]], "surfify.nn.IcoPool": [[162, 1, 1, "", "forward"]], "surfify.nn.IcoRePaConv": [[163, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConv": [[164, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConvTranspose": [[165, 1, 1, "", "forward"]], "surfify.nn.IcoUpConv": [[166, 1, 1, "", "forward"]], "surfify.nn.IcoUpSample": [[167, 1, 1, "", "forward"]], "surfify.nn.functional": [[168, 2, 1, "", "circular_pad"]], "surfify.nn.modules": [[169, 0, 1, "", "IcoDiNeConv"], [170, 0, 1, "", "IcoFixIndexUpSample"], [171, 0, 1, "", "IcoGenericUpConv"], [172, 0, 1, "", "IcoMaxIndexUpSample"], [173, 0, 1, "", "IcoPool"], [174, 0, 1, "", "IcoRePaConv"], [175, 0, 1, "", "IcoSpMaConv"], [176, 0, 1, "", "IcoSpMaConvTranspose"], [177, 0, 1, "", "IcoUpConv"], [178, 0, 1, "", "IcoUpSample"]], "surfify.nn.modules.IcoDiNeConv": [[169, 1, 1, "", "forward"]], "surfify.nn.modules.IcoFixIndexUpSample": [[170, 1, 1, "", "forward"]], "surfify.nn.modules.IcoGenericUpConv": [[171, 1, 1, "", "forward"]], "surfify.nn.modules.IcoMaxIndexUpSample": [[172, 1, 1, "", "forward"]], "surfify.nn.modules.IcoPool": [[173, 1, 1, "", "forward"]], "surfify.nn.modules.IcoRePaConv": [[174, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConv": [[175, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConvTranspose": [[176, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpConv": [[177, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpSample": [[178, 1, 1, "", "forward"]], "surfify.plotting": [[180, 2, 1, "", "plot_trisurf"]], "surfify.plotting.surface": [[181, 2, 1, "", "plot_trisurf"]], "surfify.utils": [[183, 2, 1, "", "cart2sph"], [191, 2, 1, "", "debug_msg"], [192, 2, 1, "", "downsample"], [193, 2, 1, "", "downsample_data"], [194, 2, 1, "", "downsample_ico"], [195, 2, 1, "", "find_neighbors"], [196, 2, 1, "", "find_rotation_interpol_coefs"], [197, 2, 1, "", "get_logger"], [198, 2, 1, "", "get_rectangular_projection"], [199, 2, 1, "", "grid2text"], [200, 2, 1, "", "ico2ico"], [201, 2, 1, "", "icosahedron"], [202, 2, 1, "", "interpolate"], [203, 2, 1, "", "interpolate_data"], [214, 2, 1, "", "min_depth_to_get_n_neighbors"], [215, 2, 1, "", "neighbors"], [216, 2, 1, "", "neighbors_rec"], [217, 2, 1, "", "number_of_ico_vertices"], [218, 2, 1, "", "number_of_neighbors"], [219, 2, 1, "", "order_of_ico_from_vertices"], [220, 2, 1, "", "order_triangles"], [221, 2, 1, "", "patch_tri"], [222, 2, 1, "", "rotate_data"], [249, 2, 1, "", "setup_logging"], [250, 2, 1, "", "sph2cart"], [251, 2, 1, "", "text2grid"], [252, 2, 1, "", "text2ico"]], "surfify.utils.coord": [[184, 2, 1, "", "cart2sph"], [185, 2, 1, "", "find_corresponding_order"], [186, 2, 1, "", "grid2text"], [187, 2, 1, "", "ico2ico"], [188, 2, 1, "", "sph2cart"], [189, 2, 1, "", "text2grid"], [190, 2, 1, "", "text2ico"]], "surfify.utils.io": [[204, 0, 1, "", "HidePrints"], [205, 2, 1, "", "compute_and_store"], [206, 2, 1, "", "decompose_cifti"], [207, 2, 1, "", "read_freesurfer"], [208, 2, 1, "", "read_gifti"], [209, 2, 1, "", "surf_data_from_cifti"], [210, 2, 1, "", "ungzip"], [211, 2, 1, "", "volume_from_cifti"], [212, 2, 1, "", "write_freesurfer"], [213, 2, 1, "", "write_gifti"]], "surfify.utils.sampling": [[223, 2, 1, "", "_patch_tri_iter"], [224, 2, 1, "", "build_freesurfer_ico"], [225, 2, 1, "", "build_fslr_ref"], [226, 2, 1, "", "downsample"], [227, 2, 1, "", "downsample_data"], [228, 2, 1, "", "downsample_ico"], [229, 2, 1, "", "find_neighbors"], [230, 2, 1, "", "find_rotation_interpol_coefs"], [231, 2, 1, "", "get_angle_with_xaxis"], [232, 2, 1, "", "get_rectangular_projection"], [233, 2, 1, "", "icosahedron"], [234, 2, 1, "", "interpolate"], [235, 2, 1, "", "interpolate_data"], [236, 2, 1, "", "middle_point"], [237, 2, 1, "", "min_depth_to_get_n_neighbors"], [238, 2, 1, "", "neighbors"], [239, 2, 1, "", "neighbors_rec"], [240, 2, 1, "", "normalize"], [241, 2, 1, "", "number_of_ico_vertices"], [242, 2, 1, "", "number_of_neighbors"], [243, 2, 1, "", "order_of_ico_from_vertices"], [244, 2, 1, "", "order_triangles"], [245, 2, 1, "", "patch_tri"], [246, 2, 1, "", "rotate_data"], [247, 2, 1, "", "triangles_to_edges"], [248, 2, 1, "", "vertex_adjacency_graph"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"us": [0, 3], "case": [0, 3], "spheric": [0, 3, 4, 7], "modul": [0, 3, 157], "comput": [1, 9, 254], "time": [1, 9, 254], "self": 2, "supervis": 2, "contrast": 2, "learn": 2, "simclr": [2, 29], "setup": 2, "data": [2, 6], "augment": [2, 4, 60], "dataset": [2, 8, 86], "train": [2, 8], "logist": 2, "regress": 2, "baselin": 2, "conclus": 2, "surfcutout": 4, "surfnois": 4, "surfblur": 4, "surfrot": 4, "hemimixup": 4, "groupmixup": 4, "group": 4, "transform": 4, "icosahedron": 5, "match": 5, "project": 6, "textur": 6, "load": 6, "3": 6, "d": 6, "surfac": [6, 179], "2": 6, "grid": 6, "uniformli": 6, "distribut": 6, "locat": 6, "integr": 6, "deep": 6, "neural": 6, "network": 6, "neighbor": 7, "direct": 7, "rectagular": 7, "tangent": 7, "plane": 7, "unet": [8, 97], "segment": 8, "inspect": 8, "model": [8, 97], "predict": 8, "label": 8, "api": [10, 12, 13, 15, 26, 29, 37, 58, 59, 60, 86, 93, 97, 157, 179, 182], "document": [10, 12, 13, 15, 26, 29, 37, 58, 59, 60, 86, 93, 97, 157, 179, 182], "nidl": [10, 11, 12, 13, 15, 26, 29, 37, 58], "instal": 11, "stabl": 11, "version": 11, "current": 11, "experi": 12, "callback": 13, "check_typ": 13, "estim": [15, 26, 29], "base": [15, 60, 97], "linear": 26, "logistic_regress": 26, "exampl": [27, 28, 30, 31, 39, 57], "ssl": 29, "util": [37, 60, 182], "bunch": 37, "color": 37, "valid": 37, "weight": 37, "search": 58, "surfifi": [59, 60, 86, 93, 97, 157, 179, 182], "mixup": 60, "_samples_gener": 86, "_gener": 86, "loss": 93, "vae": [93, 97], "vgg": 97, "nn": 157, "function": 157, "plot": 179, "coord": 182, "io": 182, "sampl": 182}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Use Cases": [[0, "use-cases"]], "Spherical Modules Use Cases": [[0, "spherical-modules-use-cases"], [3, "spherical-modules-use-cases"]], "Computation times": [[1, "computation-times"], [9, "computation-times"], [254, "computation-times"]], "Self-Supervised Contrastive Learning with SimCLR": [[2, "self-supervised-contrastive-learning-with-simclr"]], "Setup": [[2, "setup"]], "Data Augmentation for Contrastive Learning": [[2, "data-augmentation-for-contrastive-learning"]], "Dataset": [[2, "dataset"]], "Training": [[2, "training"]], "Logistic Regression": [[2, "logistic-regression"]], "Baseline": [[2, "baseline"]], "Conclusion": [[2, "conclusion"]], "Spherical augmentations": [[4, "spherical-augmentations"]], "SurfCutOut": [[4, "surfcutout"]], "SurfNoise": [[4, "surfnoise"]], "SurfBlur": [[4, "surfblur"]], "SurfRotation": [[4, "surfrotation"]], "HemiMixUp": [[4, "hemimixup"]], "GroupMixUp": [[4, "groupmixup"]], "GroupMixUp group": [[4, "groupmixup-group"]], "Transformer": [[4, "transformer"]], "Icosahedron matching": [[5, "icosahedron-matching"]], "Project texture": [[6, "project-texture"]], "Load data": [[6, "load-data"]], "3-D surface to 2-D grid projection": [[6, "d-surface-to-2-d-grid-projection"]], "2-D grid to 3-D surface projection": [[6, "d-grid-to-3-d-surface-projection"]], "Uniformly distributed locations": [[6, "uniformly-distributed-locations"]], "Integration in deep neural network": [[6, "integration-in-deep-neural-network"]], "Spherical neighbors": [[7, "spherical-neighbors"]], "Direct Neighbor": [[7, "direct-neighbor"]], "Rectagular Tangent Plane Neighbor": [[7, "rectagular-tangent-plane-neighbor"]], "UNet segmentation": [[8, "unet-segmentation"]], "Inspect dataset": [[8, "inspect-dataset"]], "Train the model": [[8, "train-the-model"]], "Inspect the predicted labels": [[8, "inspect-the-predicted-labels"]], "API documentation of NIDL": [[10, "api-documentation-of-nidl"]], "Installing nidl": [[11, "installing-nidl"]], "Installing a stable version": [[11, "installing-a-stable-version"]], "Installing the current version": [[11, "installing-the-current-version"]], "API documentation of nidl": [[12, "api-documentation-of-nidl"]], "nidl": [[12, "nidl"]], "nidl.experiment": [[12, "nidl-experiment"]], "API documentation of nidl.callbacks": [[13, "api-documentation-of-nidl-callbacks"]], "nidl.callbacks": [[13, "nidl-callbacks"]], "nidl.callbacks.check_typing": [[13, "nidl-callbacks-check-typing"]], "API documentation of nidl.estimators": [[15, "api-documentation-of-nidl-estimators"]], "nidl.estimators": [[15, "nidl-estimators"]], "nidl.estimators.base": [[15, "nidl-estimators-base"]], "API documentation of nidl.estimators.linear": [[26, "api-documentation-of-nidl-estimators-linear"]], "nidl.estimators.linear": [[26, "nidl-estimators-linear"]], "nidl.estimators.linear.logistic_regression": [[26, "nidl-estimators-linear-logistic-regression"]], "Examples": [[27, "examples"], [28, "examples"], [30, "examples"], [31, "examples"], [39, "examples"], [57, "examples"]], "API documentation of nidl.estimators.ssl": [[29, "api-documentation-of-nidl-estimators-ssl"]], "nidl.estimators.ssl": [[29, "nidl-estimators-ssl"]], "nidl.estimators.ssl.simclr": [[29, "id1"]], "API documentation of nidl.utils": [[37, "api-documentation-of-nidl-utils"]], "nidl.utils": [[37, "nidl-utils"]], "nidl.utils.bunch": [[37, "id1"]], "nidl.utils.color": [[37, "nidl-utils-color"]], "nidl.utils.validation": [[37, "nidl-utils-validation"]], "nidl.utils.weights": [[37, "id2"]], "Search in API documentation of NIDL": [[58, "search-in-api-documentation-of-nidl"]], "API documentation of surfify": [[59, "api-documentation-of-surfify"]], "surfify": [[59, "surfify"]], "API documentation of surfify.augmentation": [[60, "api-documentation-of-surfify-augmentation"]], "surfify.augmentation": [[60, "surfify-augmentation"]], "surfify.augmentation.base": [[60, "surfify-augmentation-base"]], "surfify.augmentation.mixup": [[60, "surfify-augmentation-mixup"]], "surfify.augmentation.utils": [[60, "surfify-augmentation-utils"]], "API documentation of surfify.datasets": [[86, "api-documentation-of-surfify-datasets"]], "surfify.datasets": [[86, "surfify-datasets"]], "surfify.datasets._samples_generator": [[86, "surfify-datasets-samples-generator"]], "surfify.datasets._generic": [[86, "surfify-datasets-generic"]], "API documentation of surfify.losses": [[93, "api-documentation-of-surfify-losses"]], "surfify.losses": [[93, "surfify-losses"]], "surfify.losses.vae": [[93, "surfify-losses-vae"]], "API documentation of surfify.models": [[97, "api-documentation-of-surfify-models"]], "surfify.models": [[97, "surfify-models"]], "surfify.models.base": [[97, "surfify-models-base"]], "surfify.models.vae": [[97, "surfify-models-vae"]], "surfify.models.vgg": [[97, "surfify-models-vgg"]], "surfify.models.unet": [[97, "surfify-models-unet"]], "API documentation of surfify.nn": [[157, "api-documentation-of-surfify-nn"]], "surfify.nn": [[157, "surfify-nn"]], "surfify.nn.functional": [[157, "surfify-nn-functional"]], "surfify.nn.modules": [[157, "surfify-nn-modules"]], "API documentation of surfify.plotting": [[179, "api-documentation-of-surfify-plotting"]], "surfify.plotting": [[179, "surfify-plotting"]], "surfify.plotting.surface": [[179, "surfify-plotting-surface"]], "API documentation of surfify.utils": [[182, "api-documentation-of-surfify-utils"]], "surfify.utils": [[182, "surfify-utils"]], "surfify.utils.coord": [[182, "surfify-utils-coord"]], "surfify.utils.io": [[182, "surfify-utils-io"]], "surfify.utils.sampling": [[182, "surfify-utils-sampling"]]}, "indexentries": {"batchtypingcallback (class in nidl.callbacks.check_typing)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback"]], "on_predict_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_predict_batch_start"]], "on_test_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_test_batch_start"]], "on_train_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_train_batch_start"]], "on_validation_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_validation_batch_start"]], "baseestimator (class in nidl.estimators)": [[16, "nidl.estimators.BaseEstimator"]], "classifiermixin (class in nidl.estimators)": [[17, "nidl.estimators.ClassifierMixin"]], "clustermixin (class in nidl.estimators)": [[18, "nidl.estimators.ClusterMixin"]], "regressormixin (class in nidl.estimators)": [[19, "nidl.estimators.RegressorMixin"]], "transformermixin (class in nidl.estimators)": [[20, "nidl.estimators.TransformerMixin"]], "baseestimator (class in nidl.estimators.base)": [[21, "nidl.estimators.base.BaseEstimator"]], "classifiermixin (class in nidl.estimators.base)": [[22, "nidl.estimators.base.ClassifierMixin"]], "clustermixin (class in nidl.estimators.base)": [[23, "nidl.estimators.base.ClusterMixin"]], "regressormixin (class in nidl.estimators.base)": [[24, "nidl.estimators.base.RegressorMixin"]], "transformermixin (class in nidl.estimators.base)": [[25, "nidl.estimators.base.TransformerMixin"]], "logisticregression (class in nidl.estimators.linear)": [[27, "nidl.estimators.linear.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logisticregression method)": [[27, "nidl.estimators.linear.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logisticregression method)": [[27, "nidl.estimators.linear.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logisticregression method)": [[27, "nidl.estimators.linear.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logisticregression method)": [[27, "nidl.estimators.linear.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logisticregression method)": [[27, "nidl.estimators.linear.LogisticRegression.validation_step"]], "logisticregression (class in nidl.estimators.linear.logistic_regression)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[28, "nidl.estimators.linear.logistic_regression.LogisticRegression.validation_step"]], "simclr (class in nidl.estimators.ssl)": [[30, "nidl.estimators.ssl.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr method)": [[30, "nidl.estimators.ssl.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr method)": [[30, "nidl.estimators.ssl.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr method)": [[30, "nidl.estimators.ssl.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr method)": [[30, "nidl.estimators.ssl.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr method)": [[30, "nidl.estimators.ssl.SimCLR.validation_step"]], "simclr (class in nidl.estimators.ssl.simclr)": [[31, "nidl.estimators.ssl.simclr.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr.simclr method)": [[31, "nidl.estimators.ssl.simclr.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr.simclr method)": [[31, "nidl.estimators.ssl.simclr.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr.simclr method)": [[31, "nidl.estimators.ssl.simclr.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr.simclr method)": [[31, "nidl.estimators.ssl.simclr.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr.simclr method)": [[31, "nidl.estimators.ssl.simclr.SimCLR.validation_step"]], "fetch_experiment() (in module nidl.experiment)": [[32, "nidl.experiment.fetch_experiment"]], "filter_config() (in module nidl.experiment)": [[33, "nidl.experiment.filter_config"]], "get_env() (in module nidl.experiment)": [[34, "nidl.experiment.get_env"]], "load_interface() (in module nidl.experiment)": [[35, "nidl.experiment.load_interface"]], "update_params() (in module nidl.experiment)": [[36, "nidl.experiment.update_params"]], "bunch (class in nidl.utils)": [[38, "nidl.utils.Bunch"]], "weights (class in nidl.utils)": [[39, "nidl.utils.Weights"]], "hf_download() (nidl.utils.weights class method)": [[39, "nidl.utils.Weights.hf_download"]], "hub_split() (nidl.utils.weights class method)": [[39, "nidl.utils.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights method)": [[39, "nidl.utils.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights class method)": [[39, "nidl.utils.Weights.ns_download"]], "bunch (class in nidl.utils.bunch)": [[40, "nidl.utils.bunch.Bunch"]], "colored (class in nidl.utils.color)": [[41, "nidl.utils.color.Colored"]], "attribute() (nidl.utils.color.colored method)": [[41, "nidl.utils.color.Colored.attribute"]], "background() (nidl.utils.color.colored method)": [[41, "nidl.utils.color.Colored.background"]], "foreground() (nidl.utils.color.colored method)": [[41, "nidl.utils.color.Colored.foreground"]], "reverse_dict() (nidl.utils.color.colored method)": [[41, "nidl.utils.color.Colored.reverse_dict"]], "attr() (in module nidl.utils.color)": [[42, "nidl.utils.color.attr"]], "fg() (in module nidl.utils.color)": [[43, "nidl.utils.color.fg"]], "hex() (in module nidl.utils.color)": [[44, "nidl.utils.color.hex"]], "print_multicolor() (in module nidl.utils.color)": [[45, "nidl.utils.color.print_multicolor"]], "print_result() (in module nidl.utils.color)": [[46, "nidl.utils.color.print_result"]], "print_subtitle() (in module nidl.utils.color)": [[47, "nidl.utils.color.print_subtitle"]], "print_title() (in module nidl.utils.color)": [[48, "nidl.utils.color.print_title"]], "print_warning() (in module nidl.utils.color)": [[49, "nidl.utils.color.print_warning"]], "random_stylize() (in module nidl.utils.color)": [[50, "nidl.utils.color.random_stylize"]], "stylize() (in module nidl.utils.color)": [[51, "nidl.utils.color.stylize"]], "print_multicolor() (in module nidl.utils)": [[52, "nidl.utils.print_multicolor"]], "_availableifdescriptor (class in nidl.utils.validation)": [[53, "nidl.utils.validation._AvailableIfDescriptor"]], "_estimator_is() (in module nidl.utils.validation)": [[54, "nidl.utils.validation._estimator_is"]], "available_if() (in module nidl.utils.validation)": [[55, "nidl.utils.validation.available_if"]], "check_is_fitted() (in module nidl.utils.validation)": [[56, "nidl.utils.validation.check_is_fitted"]], "weights (class in nidl.utils.weights)": [[57, "nidl.utils.weights.Weights"]], "hf_download() (nidl.utils.weights.weights class method)": [[57, "nidl.utils.weights.Weights.hf_download"]], "hub_split() (nidl.utils.weights.weights class method)": [[57, "nidl.utils.weights.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights.weights method)": [[57, "nidl.utils.weights.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights.weights class method)": [[57, "nidl.utils.weights.Weights.ns_download"]], "basetransformer (class in surfify.augmentation)": [[61, "surfify.augmentation.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation)": [[61, "surfify.augmentation.BaseTransformer.Transform"]], "probability (surfify.augmentation.basetransformer.transform attribute)": [[61, "surfify.augmentation.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.basetransformer.transform attribute)": [[61, "surfify.augmentation.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.basetransformer method)": [[61, "surfify.augmentation.BaseTransformer.register"]], "transform (surfify.augmentation.basetransformer.transform attribute)": [[61, "surfify.augmentation.BaseTransformer.Transform.transform"]], "groupmixup (class in surfify.augmentation)": [[62, "surfify.augmentation.GroupMixUp"]], "groupby() (surfify.augmentation.groupmixup class method)": [[62, "surfify.augmentation.GroupMixUp.groupby"]], "run() (surfify.augmentation.groupmixup method)": [[62, "surfify.augmentation.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation)": [[63, "surfify.augmentation.HemiMixUp"]], "run() (surfify.augmentation.hemimixup method)": [[63, "surfify.augmentation.HemiMixUp.run"]], "surfblur (class in surfify.augmentation)": [[64, "surfify.augmentation.SurfBlur"]], "run() (surfify.augmentation.surfblur method)": [[64, "surfify.augmentation.SurfBlur.run"]], "surfcutout (class in surfify.augmentation)": [[65, "surfify.augmentation.SurfCutOut"]], "run() (surfify.augmentation.surfcutout method)": [[65, "surfify.augmentation.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation)": [[66, "surfify.augmentation.SurfNoise"]], "run() (surfify.augmentation.surfnoise method)": [[66, "surfify.augmentation.SurfNoise.run"]], "surfrotation (class in surfify.augmentation)": [[67, "surfify.augmentation.SurfRotation"]], "run() (surfify.augmentation.surfrotation method)": [[67, "surfify.augmentation.SurfRotation.run"]], "transformer (class in surfify.augmentation)": [[68, "surfify.augmentation.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation)": [[69, "surfify.augmentation.apply_chained_transforms"]], "surfblur (class in surfify.augmentation.base)": [[70, "surfify.augmentation.base.SurfBlur"]], "run() (surfify.augmentation.base.surfblur method)": [[70, "surfify.augmentation.base.SurfBlur.run"]], "surfcutout (class in surfify.augmentation.base)": [[71, "surfify.augmentation.base.SurfCutOut"]], "run() (surfify.augmentation.base.surfcutout method)": [[71, "surfify.augmentation.base.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation.base)": [[72, "surfify.augmentation.base.SurfNoise"]], "run() (surfify.augmentation.base.surfnoise method)": [[72, "surfify.augmentation.base.SurfNoise.run"]], "surfrotation (class in surfify.augmentation.base)": [[73, "surfify.augmentation.base.SurfRotation"]], "run() (surfify.augmentation.base.surfrotation method)": [[73, "surfify.augmentation.base.SurfRotation.run"]], "interval() (in module surfify.augmentation)": [[74, "surfify.augmentation.interval"]], "groupmixup (class in surfify.augmentation.mixup)": [[75, "surfify.augmentation.mixup.GroupMixUp"]], "groupby() (surfify.augmentation.mixup.groupmixup class method)": [[75, "surfify.augmentation.mixup.GroupMixUp.groupby"]], "run() (surfify.augmentation.mixup.groupmixup method)": [[75, "surfify.augmentation.mixup.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation.mixup)": [[76, "surfify.augmentation.mixup.HemiMixUp"]], "run() (surfify.augmentation.mixup.hemimixup method)": [[76, "surfify.augmentation.mixup.HemiMixUp.run"]], "mixupaugmentation (class in surfify.augmentation.mixup)": [[77, "surfify.augmentation.mixup.MixUpAugmentation"]], "rand_mask() (surfify.augmentation.mixup.mixupaugmentation method)": [[77, "surfify.augmentation.mixup.MixUpAugmentation.rand_mask"]], "multichannel_augmentation() (in module surfify.augmentation)": [[78, "surfify.augmentation.multichannel_augmentation"]], "basetransformer (class in surfify.augmentation.utils)": [[79, "surfify.augmentation.utils.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation.utils)": [[79, "surfify.augmentation.utils.BaseTransformer.Transform"]], "probability (surfify.augmentation.utils.basetransformer.transform attribute)": [[79, "surfify.augmentation.utils.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.utils.basetransformer.transform attribute)": [[79, "surfify.augmentation.utils.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.utils.basetransformer method)": [[79, "surfify.augmentation.utils.BaseTransformer.register"]], "transform (surfify.augmentation.utils.basetransformer.transform attribute)": [[79, "surfify.augmentation.utils.BaseTransformer.Transform.transform"]], "randomaugmentation (class in surfify.augmentation.utils)": [[80, "surfify.augmentation.utils.RandomAugmentation"]], "randomaugmentation.interval (class in surfify.augmentation.utils)": [[80, "surfify.augmentation.utils.RandomAugmentation.Interval"]], "dtype (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[80, "surfify.augmentation.utils.RandomAugmentation.Interval.dtype"]], "high (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[80, "surfify.augmentation.utils.RandomAugmentation.Interval.high"]], "low (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[80, "surfify.augmentation.utils.RandomAugmentation.Interval.low"]], "transformer (class in surfify.augmentation.utils)": [[81, "surfify.augmentation.utils.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation.utils)": [[82, "surfify.augmentation.utils.apply_chained_transforms"]], "interval() (in module surfify.augmentation.utils)": [[83, "surfify.augmentation.utils.interval"]], "listify() (in module surfify.augmentation.utils)": [[84, "surfify.augmentation.utils.listify"]], "multichannel_augmentation() (in module surfify.augmentation.utils)": [[85, "surfify.augmentation.utils.multichannel_augmentation"]], "classificationdataset (class in surfify.datasets)": [[87, "surfify.datasets.ClassificationDataset"]], "genericsurfdataset (class in surfify.datasets)": [[88, "surfify.datasets.GenericSurfDataset"]], "genericsurfdataset (class in surfify.datasets._generic)": [[89, "surfify.datasets._generic.GenericSurfDataset"]], "classificationdataset (class in surfify.datasets._samples_generator)": [[90, "surfify.datasets._samples_generator.ClassificationDataset"]], "make_classification() (in module surfify.datasets._samples_generator)": [[91, "surfify.datasets._samples_generator.make_classification"]], "make_classification() (in module surfify.datasets)": [[92, "surfify.datasets.make_classification"]], "sphericalvaeloss (class in surfify.losses)": [[94, "surfify.losses.SphericalVAELoss"]], "sphericalvaeloss (class in surfify.losses.vae)": [[95, "surfify.losses.vae.SphericalVAELoss"]], "log_likelihood() (in module surfify.losses.vae)": [[96, "surfify.losses.vae.log_likelihood"]], "hemifusiondecoder (class in surfify.models)": [[98, "surfify.models.HemiFusionDecoder"]], "forward() (surfify.models.hemifusiondecoder method)": [[98, "surfify.models.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models)": [[99, "surfify.models.HemiFusionEncoder"]], "forward() (surfify.models.hemifusionencoder method)": [[99, "surfify.models.HemiFusionEncoder.forward"]], "sphericalbase (class in surfify.models)": [[100, "surfify.models.SphericalBase"]], "sphericalbase.ico (class in surfify.models)": [[100, "surfify.models.SphericalBase.Ico"]], "build_ico_info() (surfify.models.sphericalbase class method)": [[100, "surfify.models.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.order"]], "triangles (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.sphericalbase.ico attribute)": [[100, "surfify.models.SphericalBase.Ico.vertices"]], "sphericalgunet (class in surfify.models)": [[101, "surfify.models.SphericalGUNet"]], "forward() (surfify.models.sphericalgunet method)": [[101, "surfify.models.SphericalGUNet.forward"]], "sphericalgvgg (class in surfify.models)": [[102, "surfify.models.SphericalGVGG"]], "forward() (surfify.models.sphericalgvgg method)": [[102, "surfify.models.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models)": [[103, "surfify.models.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models)": [[104, "surfify.models.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models)": [[105, "surfify.models.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models)": [[106, "surfify.models.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models)": [[107, "surfify.models.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models)": [[108, "surfify.models.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models)": [[109, "surfify.models.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models)": [[110, "surfify.models.SphericalGVGG19BN"]], "sphericalhemifusiondecoder (class in surfify.models)": [[111, "surfify.models.SphericalHemiFusionDecoder"]], "forward() (surfify.models.sphericalhemifusiondecoder method)": [[111, "surfify.models.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models)": [[112, "surfify.models.SphericalHemiFusionEncoder"]], "forward() (surfify.models.sphericalhemifusionencoder method)": [[112, "surfify.models.SphericalHemiFusionEncoder.forward"]], "sphericalunet (class in surfify.models)": [[113, "surfify.models.SphericalUNet"]], "forward() (surfify.models.sphericalunet method)": [[113, "surfify.models.SphericalUNet.forward"]], "sphericalvae (class in surfify.models)": [[114, "surfify.models.SphericalVAE"]], "decode() (surfify.models.sphericalvae method)": [[114, "surfify.models.SphericalVAE.decode"]], "encode() (surfify.models.sphericalvae method)": [[114, "surfify.models.SphericalVAE.encode"]], "forward() (surfify.models.sphericalvae method)": [[114, "surfify.models.SphericalVAE.forward"]], "reparameterize() (surfify.models.sphericalvae method)": [[114, "surfify.models.SphericalVAE.reparameterize"]], "sphericalvgg (class in surfify.models)": [[115, "surfify.models.SphericalVGG"]], "forward() (surfify.models.sphericalvgg method)": [[115, "surfify.models.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models)": [[116, "surfify.models.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models)": [[117, "surfify.models.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models)": [[118, "surfify.models.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models)": [[119, "surfify.models.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models)": [[120, "surfify.models.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models)": [[121, "surfify.models.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models)": [[122, "surfify.models.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models)": [[123, "surfify.models.SphericalVGG19BN"]], "sphericalbase (class in surfify.models.base)": [[124, "surfify.models.base.SphericalBase"]], "sphericalbase.ico (class in surfify.models.base)": [[124, "surfify.models.base.SphericalBase.Ico"]], "build_ico_info() (surfify.models.base.sphericalbase class method)": [[124, "surfify.models.base.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.order"]], "triangles (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.base.sphericalbase.ico attribute)": [[124, "surfify.models.base.SphericalBase.Ico.vertices"]], "downblock (class in surfify.models.unet)": [[125, "surfify.models.unet.DownBlock"]], "forward() (surfify.models.unet.downblock method)": [[125, "surfify.models.unet.DownBlock.forward"]], "downgblock (class in surfify.models.unet)": [[126, "surfify.models.unet.DownGBlock"]], "forward() (surfify.models.unet.downgblock method)": [[126, "surfify.models.unet.DownGBlock.forward"]], "graphicalunet (class in surfify.models.unet)": [[127, "surfify.models.unet.GraphicalUNet"]], "forward() (surfify.models.unet.graphicalunet method)": [[127, "surfify.models.unet.GraphicalUNet.forward"]], "sphericalgunet (class in surfify.models.unet)": [[128, "surfify.models.unet.SphericalGUNet"]], "forward() (surfify.models.unet.sphericalgunet method)": [[128, "surfify.models.unet.SphericalGUNet.forward"]], "sphericalunet (class in surfify.models.unet)": [[129, "surfify.models.unet.SphericalUNet"]], "forward() (surfify.models.unet.sphericalunet method)": [[129, "surfify.models.unet.SphericalUNet.forward"]], "upblock (class in surfify.models.unet)": [[130, "surfify.models.unet.UpBlock"]], "forward() (surfify.models.unet.upblock method)": [[130, "surfify.models.unet.UpBlock.forward"]], "upgblock (class in surfify.models.unet)": [[131, "surfify.models.unet.UpGBlock"]], "forward() (surfify.models.unet.upgblock method)": [[131, "surfify.models.unet.UpGBlock.forward"]], "hemifusiondecoder (class in surfify.models.vae)": [[132, "surfify.models.vae.HemiFusionDecoder"]], "forward() (surfify.models.vae.hemifusiondecoder method)": [[132, "surfify.models.vae.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models.vae)": [[133, "surfify.models.vae.HemiFusionEncoder"]], "forward() (surfify.models.vae.hemifusionencoder method)": [[133, "surfify.models.vae.HemiFusionEncoder.forward"]], "sphericalhemifusiondecoder (class in surfify.models.vae)": [[134, "surfify.models.vae.SphericalHemiFusionDecoder"]], "forward() (surfify.models.vae.sphericalhemifusiondecoder method)": [[134, "surfify.models.vae.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models.vae)": [[135, "surfify.models.vae.SphericalHemiFusionEncoder"]], "forward() (surfify.models.vae.sphericalhemifusionencoder method)": [[135, "surfify.models.vae.SphericalHemiFusionEncoder.forward"]], "sphericalvae (class in surfify.models.vae)": [[136, "surfify.models.vae.SphericalVAE"]], "decode() (surfify.models.vae.sphericalvae method)": [[136, "surfify.models.vae.SphericalVAE.decode"]], "encode() (surfify.models.vae.sphericalvae method)": [[136, "surfify.models.vae.SphericalVAE.encode"]], "forward() (surfify.models.vae.sphericalvae method)": [[136, "surfify.models.vae.SphericalVAE.forward"]], "reparameterize() (surfify.models.vae.sphericalvae method)": [[136, "surfify.models.vae.SphericalVAE.reparameterize"]], "compute_output_dim() (in module surfify.models.vae)": [[137, "surfify.models.vae.compute_output_dim"]], "sphericalgvgg (class in surfify.models.vgg)": [[138, "surfify.models.vgg.SphericalGVGG"]], "forward() (surfify.models.vgg.sphericalgvgg method)": [[138, "surfify.models.vgg.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models.vgg)": [[139, "surfify.models.vgg.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models.vgg)": [[140, "surfify.models.vgg.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models.vgg)": [[141, "surfify.models.vgg.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models.vgg)": [[142, "surfify.models.vgg.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models.vgg)": [[143, "surfify.models.vgg.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models.vgg)": [[144, "surfify.models.vgg.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models.vgg)": [[145, "surfify.models.vgg.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models.vgg)": [[146, "surfify.models.vgg.SphericalGVGG19BN"]], "sphericalvgg (class in surfify.models.vgg)": [[147, "surfify.models.vgg.SphericalVGG"]], "forward() (surfify.models.vgg.sphericalvgg method)": [[147, "surfify.models.vgg.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models.vgg)": [[148, "surfify.models.vgg.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models.vgg)": [[149, "surfify.models.vgg.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models.vgg)": [[150, "surfify.models.vgg.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models.vgg)": [[151, "surfify.models.vgg.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models.vgg)": [[152, "surfify.models.vgg.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models.vgg)": [[153, "surfify.models.vgg.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models.vgg)": [[154, "surfify.models.vgg.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models.vgg)": [[155, "surfify.models.vgg.SphericalVGG19BN"]], "class_factory() (in module surfify.models.vgg)": [[156, "surfify.models.vgg.class_factory"]], "icodineconv (class in surfify.nn)": [[158, "surfify.nn.IcoDiNeConv"]], "forward() (surfify.nn.icodineconv method)": [[158, "surfify.nn.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn)": [[159, "surfify.nn.IcoFixIndexUpSample"]], "forward() (surfify.nn.icofixindexupsample method)": [[159, "surfify.nn.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn)": [[160, "surfify.nn.IcoGenericUpConv"]], "forward() (surfify.nn.icogenericupconv method)": [[160, "surfify.nn.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn)": [[161, "surfify.nn.IcoMaxIndexUpSample"]], "forward() (surfify.nn.icomaxindexupsample method)": [[161, "surfify.nn.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn)": [[162, "surfify.nn.IcoPool"]], "forward() (surfify.nn.icopool method)": [[162, "surfify.nn.IcoPool.forward"]], "icorepaconv (class in surfify.nn)": [[163, "surfify.nn.IcoRePaConv"]], "forward() (surfify.nn.icorepaconv method)": [[163, "surfify.nn.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn)": [[164, "surfify.nn.IcoSpMaConv"]], "forward() (surfify.nn.icospmaconv method)": [[164, "surfify.nn.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn)": [[165, "surfify.nn.IcoSpMaConvTranspose"]], "forward() (surfify.nn.icospmaconvtranspose method)": [[165, "surfify.nn.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn)": [[166, "surfify.nn.IcoUpConv"]], "forward() (surfify.nn.icoupconv method)": [[166, "surfify.nn.IcoUpConv.forward"]], "icoupsample (class in surfify.nn)": [[167, "surfify.nn.IcoUpSample"]], "forward() (surfify.nn.icoupsample method)": [[167, "surfify.nn.IcoUpSample.forward"]], "circular_pad() (in module surfify.nn.functional)": [[168, "surfify.nn.functional.circular_pad"]], "icodineconv (class in surfify.nn.modules)": [[169, "surfify.nn.modules.IcoDiNeConv"]], "forward() (surfify.nn.modules.icodineconv method)": [[169, "surfify.nn.modules.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn.modules)": [[170, "surfify.nn.modules.IcoFixIndexUpSample"]], "forward() (surfify.nn.modules.icofixindexupsample method)": [[170, "surfify.nn.modules.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn.modules)": [[171, "surfify.nn.modules.IcoGenericUpConv"]], "forward() (surfify.nn.modules.icogenericupconv method)": [[171, "surfify.nn.modules.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn.modules)": [[172, "surfify.nn.modules.IcoMaxIndexUpSample"]], "forward() (surfify.nn.modules.icomaxindexupsample method)": [[172, "surfify.nn.modules.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn.modules)": [[173, "surfify.nn.modules.IcoPool"]], "forward() (surfify.nn.modules.icopool method)": [[173, "surfify.nn.modules.IcoPool.forward"]], "icorepaconv (class in surfify.nn.modules)": [[174, "surfify.nn.modules.IcoRePaConv"]], "forward() (surfify.nn.modules.icorepaconv method)": [[174, "surfify.nn.modules.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn.modules)": [[175, "surfify.nn.modules.IcoSpMaConv"]], "forward() (surfify.nn.modules.icospmaconv method)": [[175, "surfify.nn.modules.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn.modules)": [[176, "surfify.nn.modules.IcoSpMaConvTranspose"]], "forward() (surfify.nn.modules.icospmaconvtranspose method)": [[176, "surfify.nn.modules.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn.modules)": [[177, "surfify.nn.modules.IcoUpConv"]], "forward() (surfify.nn.modules.icoupconv method)": [[177, "surfify.nn.modules.IcoUpConv.forward"]], "icoupsample (class in surfify.nn.modules)": [[178, "surfify.nn.modules.IcoUpSample"]], "forward() (surfify.nn.modules.icoupsample method)": [[178, "surfify.nn.modules.IcoUpSample.forward"]], "plot_trisurf() (in module surfify.plotting)": [[180, "surfify.plotting.plot_trisurf"]], "plot_trisurf() (in module surfify.plotting.surface)": [[181, "surfify.plotting.surface.plot_trisurf"]], "cart2sph() (in module surfify.utils)": [[183, "surfify.utils.cart2sph"]], "cart2sph() (in module surfify.utils.coord)": [[184, "surfify.utils.coord.cart2sph"]], "find_corresponding_order() (in module surfify.utils.coord)": [[185, "surfify.utils.coord.find_corresponding_order"]], "grid2text() (in module surfify.utils.coord)": [[186, "surfify.utils.coord.grid2text"]], "ico2ico() (in module surfify.utils.coord)": [[187, "surfify.utils.coord.ico2ico"]], "sph2cart() (in module surfify.utils.coord)": [[188, "surfify.utils.coord.sph2cart"]], "text2grid() (in module surfify.utils.coord)": [[189, "surfify.utils.coord.text2grid"]], "text2ico() (in module surfify.utils.coord)": [[190, "surfify.utils.coord.text2ico"]], "debug_msg() (in module surfify.utils)": [[191, "surfify.utils.debug_msg"]], "downsample() (in module surfify.utils)": [[192, "surfify.utils.downsample"]], "downsample_data() (in module surfify.utils)": [[193, "surfify.utils.downsample_data"]], "downsample_ico() (in module surfify.utils)": [[194, "surfify.utils.downsample_ico"]], "find_neighbors() (in module surfify.utils)": [[195, "surfify.utils.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils)": [[196, "surfify.utils.find_rotation_interpol_coefs"]], "get_logger() (in module surfify.utils)": [[197, "surfify.utils.get_logger"]], "get_rectangular_projection() (in module surfify.utils)": [[198, "surfify.utils.get_rectangular_projection"]], "grid2text() (in module surfify.utils)": [[199, "surfify.utils.grid2text"]], "ico2ico() (in module surfify.utils)": [[200, "surfify.utils.ico2ico"]], "icosahedron() (in module surfify.utils)": [[201, "surfify.utils.icosahedron"]], "interpolate() (in module surfify.utils)": [[202, "surfify.utils.interpolate"]], "interpolate_data() (in module surfify.utils)": [[203, "surfify.utils.interpolate_data"]], "hideprints (class in surfify.utils.io)": [[204, "surfify.utils.io.HidePrints"]], "compute_and_store() (in module surfify.utils.io)": [[205, "surfify.utils.io.compute_and_store"]], "decompose_cifti() (in module surfify.utils.io)": [[206, "surfify.utils.io.decompose_cifti"]], "read_freesurfer() (in module surfify.utils.io)": [[207, "surfify.utils.io.read_freesurfer"]], "read_gifti() (in module surfify.utils.io)": [[208, "surfify.utils.io.read_gifti"]], "surf_data_from_cifti() (in module surfify.utils.io)": [[209, "surfify.utils.io.surf_data_from_cifti"]], "ungzip() (in module surfify.utils.io)": [[210, "surfify.utils.io.ungzip"]], "volume_from_cifti() (in module surfify.utils.io)": [[211, "surfify.utils.io.volume_from_cifti"]], "write_freesurfer() (in module surfify.utils.io)": [[212, "surfify.utils.io.write_freesurfer"]], "write_gifti() (in module surfify.utils.io)": [[213, "surfify.utils.io.write_gifti"]], "min_depth_to_get_n_neighbors() (in module surfify.utils)": [[214, "surfify.utils.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils)": [[215, "surfify.utils.neighbors"]], "neighbors_rec() (in module surfify.utils)": [[216, "surfify.utils.neighbors_rec"]], "number_of_ico_vertices() (in module surfify.utils)": [[217, "surfify.utils.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils)": [[218, "surfify.utils.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils)": [[219, "surfify.utils.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils)": [[220, "surfify.utils.order_triangles"]], "patch_tri() (in module surfify.utils)": [[221, "surfify.utils.patch_tri"]], "rotate_data() (in module surfify.utils)": [[222, "surfify.utils.rotate_data"]], "_patch_tri_iter() (in module surfify.utils.sampling)": [[223, "surfify.utils.sampling._patch_tri_iter"]], "build_freesurfer_ico() (in module surfify.utils.sampling)": [[224, "surfify.utils.sampling.build_freesurfer_ico"]], "build_fslr_ref() (in module surfify.utils.sampling)": [[225, "surfify.utils.sampling.build_fslr_ref"]], "downsample() (in module surfify.utils.sampling)": [[226, "surfify.utils.sampling.downsample"]], "downsample_data() (in module surfify.utils.sampling)": [[227, "surfify.utils.sampling.downsample_data"]], "downsample_ico() (in module surfify.utils.sampling)": [[228, "surfify.utils.sampling.downsample_ico"]], "find_neighbors() (in module surfify.utils.sampling)": [[229, "surfify.utils.sampling.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils.sampling)": [[230, "surfify.utils.sampling.find_rotation_interpol_coefs"]], "get_angle_with_xaxis() (in module surfify.utils.sampling)": [[231, "surfify.utils.sampling.get_angle_with_xaxis"]], "get_rectangular_projection() (in module surfify.utils.sampling)": [[232, "surfify.utils.sampling.get_rectangular_projection"]], "icosahedron() (in module surfify.utils.sampling)": [[233, "surfify.utils.sampling.icosahedron"]], "interpolate() (in module surfify.utils.sampling)": [[234, "surfify.utils.sampling.interpolate"]], "interpolate_data() (in module surfify.utils.sampling)": [[235, "surfify.utils.sampling.interpolate_data"]], "middle_point() (in module surfify.utils.sampling)": [[236, "surfify.utils.sampling.middle_point"]], "min_depth_to_get_n_neighbors() (in module surfify.utils.sampling)": [[237, "surfify.utils.sampling.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils.sampling)": [[238, "surfify.utils.sampling.neighbors"]], "neighbors_rec() (in module surfify.utils.sampling)": [[239, "surfify.utils.sampling.neighbors_rec"]], "normalize() (in module surfify.utils.sampling)": [[240, "surfify.utils.sampling.normalize"]], "number_of_ico_vertices() (in module surfify.utils.sampling)": [[241, "surfify.utils.sampling.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils.sampling)": [[242, "surfify.utils.sampling.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils.sampling)": [[243, "surfify.utils.sampling.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils.sampling)": [[244, "surfify.utils.sampling.order_triangles"]], "patch_tri() (in module surfify.utils.sampling)": [[245, "surfify.utils.sampling.patch_tri"]], "rotate_data() (in module surfify.utils.sampling)": [[246, "surfify.utils.sampling.rotate_data"]], "triangles_to_edges() (in module surfify.utils.sampling)": [[247, "surfify.utils.sampling.triangles_to_edges"]], "vertex_adjacency_graph() (in module surfify.utils.sampling)": [[248, "surfify.utils.sampling.vertex_adjacency_graph"]], "setup_logging() (in module surfify.utils)": [[249, "surfify.utils.setup_logging"]], "sph2cart() (in module surfify.utils)": [[250, "surfify.utils.sph2cart"]], "text2grid() (in module surfify.utils)": [[251, "surfify.utils.text2grid"]], "text2ico() (in module surfify.utils)": [[252, "surfify.utils.text2ico"]]}})
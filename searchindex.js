Search.setIndex({"docnames": ["auto_gallery/index", "auto_gallery/sg_execution_times", "auto_gallery/simclr_stl10", "auto_gallery/surfify/index", "auto_gallery/surfify/plot_augmentation", "auto_gallery/surfify/plot_match_icosahedron", "auto_gallery/surfify/plot_project_texture", "auto_gallery/surfify/plot_spherical_neighbors", "auto_gallery/surfify/plot_unet_segmentation", "auto_gallery/surfify/sg_execution_times", "generated/documentation", "generated/installation", "generated/nidl", "generated/nidl.callbacks", "generated/nidl.callbacks.check_typing.BatchTypingCallback", "generated/nidl.datasets", "generated/nidl.datasets.BaseImageDataset", "generated/nidl.datasets.BaseNumpyDataset", "generated/nidl.datasets.base.BaseDataset", "generated/nidl.datasets.base.BaseImageDataset", "generated/nidl.datasets.base.BaseNumpyDataset", "generated/nidl.estimators", "generated/nidl.estimators.BaseEstimator", "generated/nidl.estimators.ClassifierMixin", "generated/nidl.estimators.ClusterMixin", "generated/nidl.estimators.RegressorMixin", "generated/nidl.estimators.TransformerMixin", "generated/nidl.estimators.base.BaseEstimator", "generated/nidl.estimators.base.ClassifierMixin", "generated/nidl.estimators.base.ClusterMixin", "generated/nidl.estimators.base.RegressorMixin", "generated/nidl.estimators.base.TransformerMixin", "generated/nidl.estimators.linear", "generated/nidl.estimators.linear.LogisticRegression", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression", "generated/nidl.estimators.ssl", "generated/nidl.estimators.ssl.SimCLR", "generated/nidl.estimators.ssl.simclr.SimCLR", "generated/nidl.experiment.fetch_experiment", "generated/nidl.experiment.filter_config", "generated/nidl.experiment.get_env", "generated/nidl.experiment.load_interface", "generated/nidl.experiment.update_params", "generated/nidl.transforms", "generated/nidl.transforms.ContrastiveTransforms", "generated/nidl.transforms.ssl.ContrastiveTransforms", "generated/nidl.utils", "generated/nidl.utils.Bunch", "generated/nidl.utils.Weights", "generated/nidl.utils.bunch.Bunch", "generated/nidl.utils.color.Colored", "generated/nidl.utils.color.attr", "generated/nidl.utils.color.fg", "generated/nidl.utils.color.hex", "generated/nidl.utils.color.print_multicolor", "generated/nidl.utils.color.print_result", "generated/nidl.utils.color.print_subtitle", "generated/nidl.utils.color.print_title", "generated/nidl.utils.color.print_warning", "generated/nidl.utils.color.random_stylize", "generated/nidl.utils.color.stylize", "generated/nidl.utils.print_multicolor", "generated/nidl.utils.validation._AvailableIfDescriptor", "generated/nidl.utils.validation._estimator_is", "generated/nidl.utils.validation.available_if", "generated/nidl.utils.validation.check_is_fitted", "generated/nidl.utils.weights.Weights", "generated/search", "generated/surfify", "generated/surfify.augmentation", "generated/surfify.augmentation.BaseTransformer", "generated/surfify.augmentation.GroupMixUp", "generated/surfify.augmentation.HemiMixUp", "generated/surfify.augmentation.SurfBlur", "generated/surfify.augmentation.SurfCutOut", "generated/surfify.augmentation.SurfNoise", "generated/surfify.augmentation.SurfRotation", "generated/surfify.augmentation.Transformer", "generated/surfify.augmentation.apply_chained_transforms", "generated/surfify.augmentation.base.SurfBlur", "generated/surfify.augmentation.base.SurfCutOut", "generated/surfify.augmentation.base.SurfNoise", "generated/surfify.augmentation.base.SurfRotation", "generated/surfify.augmentation.interval", "generated/surfify.augmentation.mixup.GroupMixUp", "generated/surfify.augmentation.mixup.HemiMixUp", "generated/surfify.augmentation.mixup.MixUpAugmentation", "generated/surfify.augmentation.multichannel_augmentation", "generated/surfify.augmentation.utils.BaseTransformer", "generated/surfify.augmentation.utils.RandomAugmentation", "generated/surfify.augmentation.utils.Transformer", "generated/surfify.augmentation.utils.apply_chained_transforms", "generated/surfify.augmentation.utils.interval", "generated/surfify.augmentation.utils.listify", "generated/surfify.augmentation.utils.multichannel_augmentation", "generated/surfify.datasets", "generated/surfify.datasets.ClassificationDataset", "generated/surfify.datasets.GenericSurfDataset", "generated/surfify.datasets._generic.GenericSurfDataset", "generated/surfify.datasets._samples_generator.ClassificationDataset", "generated/surfify.datasets._samples_generator.make_classification", "generated/surfify.datasets.make_classification", "generated/surfify.losses", "generated/surfify.losses.SphericalVAELoss", "generated/surfify.losses.vae.SphericalVAELoss", "generated/surfify.losses.vae.log_likelihood", "generated/surfify.models", "generated/surfify.models.HemiFusionDecoder", "generated/surfify.models.HemiFusionEncoder", "generated/surfify.models.SphericalBase", "generated/surfify.models.SphericalGUNet", "generated/surfify.models.SphericalGVGG", "generated/surfify.models.SphericalGVGG11", "generated/surfify.models.SphericalGVGG11BN", "generated/surfify.models.SphericalGVGG13", "generated/surfify.models.SphericalGVGG13BN", "generated/surfify.models.SphericalGVGG16", "generated/surfify.models.SphericalGVGG16BN", "generated/surfify.models.SphericalGVGG19", "generated/surfify.models.SphericalGVGG19BN", "generated/surfify.models.SphericalHemiFusionDecoder", "generated/surfify.models.SphericalHemiFusionEncoder", "generated/surfify.models.SphericalUNet", "generated/surfify.models.SphericalVAE", "generated/surfify.models.SphericalVGG", "generated/surfify.models.SphericalVGG11", "generated/surfify.models.SphericalVGG11BN", "generated/surfify.models.SphericalVGG13", "generated/surfify.models.SphericalVGG13BN", "generated/surfify.models.SphericalVGG16", "generated/surfify.models.SphericalVGG16BN", "generated/surfify.models.SphericalVGG19", "generated/surfify.models.SphericalVGG19BN", "generated/surfify.models.base.SphericalBase", "generated/surfify.models.unet.DownBlock", "generated/surfify.models.unet.DownGBlock", "generated/surfify.models.unet.GraphicalUNet", "generated/surfify.models.unet.SphericalGUNet", "generated/surfify.models.unet.SphericalUNet", "generated/surfify.models.unet.UpBlock", "generated/surfify.models.unet.UpGBlock", "generated/surfify.models.vae.HemiFusionDecoder", "generated/surfify.models.vae.HemiFusionEncoder", "generated/surfify.models.vae.SphericalHemiFusionDecoder", "generated/surfify.models.vae.SphericalHemiFusionEncoder", "generated/surfify.models.vae.SphericalVAE", "generated/surfify.models.vae.compute_output_dim", "generated/surfify.models.vgg.SphericalGVGG", "generated/surfify.models.vgg.SphericalGVGG11", "generated/surfify.models.vgg.SphericalGVGG11BN", "generated/surfify.models.vgg.SphericalGVGG13", "generated/surfify.models.vgg.SphericalGVGG13BN", "generated/surfify.models.vgg.SphericalGVGG16", "generated/surfify.models.vgg.SphericalGVGG16BN", "generated/surfify.models.vgg.SphericalGVGG19", "generated/surfify.models.vgg.SphericalGVGG19BN", "generated/surfify.models.vgg.SphericalVGG", "generated/surfify.models.vgg.SphericalVGG11", "generated/surfify.models.vgg.SphericalVGG11BN", "generated/surfify.models.vgg.SphericalVGG13", "generated/surfify.models.vgg.SphericalVGG13BN", "generated/surfify.models.vgg.SphericalVGG16", "generated/surfify.models.vgg.SphericalVGG16BN", "generated/surfify.models.vgg.SphericalVGG19", "generated/surfify.models.vgg.SphericalVGG19BN", "generated/surfify.models.vgg.class_factory", "generated/surfify.nn", "generated/surfify.nn.IcoDiNeConv", "generated/surfify.nn.IcoFixIndexUpSample", "generated/surfify.nn.IcoGenericUpConv", "generated/surfify.nn.IcoMaxIndexUpSample", "generated/surfify.nn.IcoPool", "generated/surfify.nn.IcoRePaConv", "generated/surfify.nn.IcoSpMaConv", "generated/surfify.nn.IcoSpMaConvTranspose", "generated/surfify.nn.IcoUpConv", "generated/surfify.nn.IcoUpSample", "generated/surfify.nn.functional.circular_pad", "generated/surfify.nn.modules.IcoDiNeConv", "generated/surfify.nn.modules.IcoFixIndexUpSample", "generated/surfify.nn.modules.IcoGenericUpConv", "generated/surfify.nn.modules.IcoMaxIndexUpSample", "generated/surfify.nn.modules.IcoPool", "generated/surfify.nn.modules.IcoRePaConv", "generated/surfify.nn.modules.IcoSpMaConv", "generated/surfify.nn.modules.IcoSpMaConvTranspose", "generated/surfify.nn.modules.IcoUpConv", "generated/surfify.nn.modules.IcoUpSample", "generated/surfify.plotting", "generated/surfify.plotting.plot_trisurf", "generated/surfify.plotting.surface.plot_trisurf", "generated/surfify.utils", "generated/surfify.utils.cart2sph", "generated/surfify.utils.coord.cart2sph", "generated/surfify.utils.coord.find_corresponding_order", "generated/surfify.utils.coord.grid2text", "generated/surfify.utils.coord.ico2ico", "generated/surfify.utils.coord.sph2cart", "generated/surfify.utils.coord.text2grid", "generated/surfify.utils.coord.text2ico", "generated/surfify.utils.debug_msg", "generated/surfify.utils.downsample", "generated/surfify.utils.downsample_data", "generated/surfify.utils.downsample_ico", "generated/surfify.utils.find_neighbors", "generated/surfify.utils.find_rotation_interpol_coefs", "generated/surfify.utils.get_logger", "generated/surfify.utils.get_rectangular_projection", "generated/surfify.utils.grid2text", "generated/surfify.utils.ico2ico", "generated/surfify.utils.icosahedron", "generated/surfify.utils.interpolate", "generated/surfify.utils.interpolate_data", "generated/surfify.utils.io.HidePrints", "generated/surfify.utils.io.compute_and_store", "generated/surfify.utils.io.decompose_cifti", "generated/surfify.utils.io.read_freesurfer", "generated/surfify.utils.io.read_gifti", "generated/surfify.utils.io.surf_data_from_cifti", "generated/surfify.utils.io.ungzip", "generated/surfify.utils.io.volume_from_cifti", "generated/surfify.utils.io.write_freesurfer", "generated/surfify.utils.io.write_gifti", "generated/surfify.utils.min_depth_to_get_n_neighbors", "generated/surfify.utils.neighbors", "generated/surfify.utils.neighbors_rec", "generated/surfify.utils.number_of_ico_vertices", "generated/surfify.utils.number_of_neighbors", "generated/surfify.utils.order_of_ico_from_vertices", "generated/surfify.utils.order_triangles", "generated/surfify.utils.patch_tri", "generated/surfify.utils.rotate_data", "generated/surfify.utils.sampling._patch_tri_iter", "generated/surfify.utils.sampling.build_freesurfer_ico", "generated/surfify.utils.sampling.build_fslr_ref", "generated/surfify.utils.sampling.downsample", "generated/surfify.utils.sampling.downsample_data", "generated/surfify.utils.sampling.downsample_ico", "generated/surfify.utils.sampling.find_neighbors", "generated/surfify.utils.sampling.find_rotation_interpol_coefs", "generated/surfify.utils.sampling.get_angle_with_xaxis", "generated/surfify.utils.sampling.get_rectangular_projection", "generated/surfify.utils.sampling.icosahedron", "generated/surfify.utils.sampling.interpolate", "generated/surfify.utils.sampling.interpolate_data", "generated/surfify.utils.sampling.middle_point", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors", "generated/surfify.utils.sampling.neighbors", "generated/surfify.utils.sampling.neighbors_rec", "generated/surfify.utils.sampling.normalize", "generated/surfify.utils.sampling.number_of_ico_vertices", "generated/surfify.utils.sampling.number_of_neighbors", "generated/surfify.utils.sampling.order_of_ico_from_vertices", "generated/surfify.utils.sampling.order_triangles", "generated/surfify.utils.sampling.patch_tri", "generated/surfify.utils.sampling.rotate_data", "generated/surfify.utils.sampling.triangles_to_edges", "generated/surfify.utils.sampling.vertex_adjacency_graph", "generated/surfify.utils.setup_logging", "generated/surfify.utils.sph2cart", "generated/surfify.utils.text2grid", "generated/surfify.utils.text2ico", "index", "sg_execution_times"], "filenames": ["auto_gallery/index.rst", "auto_gallery/sg_execution_times.rst", "auto_gallery/simclr_stl10.rst", "auto_gallery/surfify/index.rst", "auto_gallery/surfify/plot_augmentation.rst", "auto_gallery/surfify/plot_match_icosahedron.rst", "auto_gallery/surfify/plot_project_texture.rst", "auto_gallery/surfify/plot_spherical_neighbors.rst", "auto_gallery/surfify/plot_unet_segmentation.rst", "auto_gallery/surfify/sg_execution_times.rst", "generated/documentation.rst", "generated/installation.rst", "generated/nidl.rst", "generated/nidl.callbacks.rst", "generated/nidl.callbacks.check_typing.BatchTypingCallback.rst", "generated/nidl.datasets.rst", "generated/nidl.datasets.BaseImageDataset.rst", "generated/nidl.datasets.BaseNumpyDataset.rst", "generated/nidl.datasets.base.BaseDataset.rst", "generated/nidl.datasets.base.BaseImageDataset.rst", "generated/nidl.datasets.base.BaseNumpyDataset.rst", "generated/nidl.estimators.rst", "generated/nidl.estimators.BaseEstimator.rst", "generated/nidl.estimators.ClassifierMixin.rst", "generated/nidl.estimators.ClusterMixin.rst", "generated/nidl.estimators.RegressorMixin.rst", "generated/nidl.estimators.TransformerMixin.rst", "generated/nidl.estimators.base.BaseEstimator.rst", "generated/nidl.estimators.base.ClassifierMixin.rst", "generated/nidl.estimators.base.ClusterMixin.rst", "generated/nidl.estimators.base.RegressorMixin.rst", "generated/nidl.estimators.base.TransformerMixin.rst", "generated/nidl.estimators.linear.rst", "generated/nidl.estimators.linear.LogisticRegression.rst", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression.rst", "generated/nidl.estimators.ssl.rst", "generated/nidl.estimators.ssl.SimCLR.rst", "generated/nidl.estimators.ssl.simclr.SimCLR.rst", "generated/nidl.experiment.fetch_experiment.rst", "generated/nidl.experiment.filter_config.rst", "generated/nidl.experiment.get_env.rst", "generated/nidl.experiment.load_interface.rst", "generated/nidl.experiment.update_params.rst", "generated/nidl.transforms.rst", "generated/nidl.transforms.ContrastiveTransforms.rst", "generated/nidl.transforms.ssl.ContrastiveTransforms.rst", "generated/nidl.utils.rst", "generated/nidl.utils.Bunch.rst", "generated/nidl.utils.Weights.rst", "generated/nidl.utils.bunch.Bunch.rst", "generated/nidl.utils.color.Colored.rst", "generated/nidl.utils.color.attr.rst", "generated/nidl.utils.color.fg.rst", "generated/nidl.utils.color.hex.rst", "generated/nidl.utils.color.print_multicolor.rst", "generated/nidl.utils.color.print_result.rst", "generated/nidl.utils.color.print_subtitle.rst", "generated/nidl.utils.color.print_title.rst", "generated/nidl.utils.color.print_warning.rst", "generated/nidl.utils.color.random_stylize.rst", "generated/nidl.utils.color.stylize.rst", "generated/nidl.utils.print_multicolor.rst", "generated/nidl.utils.validation._AvailableIfDescriptor.rst", "generated/nidl.utils.validation._estimator_is.rst", "generated/nidl.utils.validation.available_if.rst", "generated/nidl.utils.validation.check_is_fitted.rst", "generated/nidl.utils.weights.Weights.rst", "generated/search.rst", "generated/surfify.rst", "generated/surfify.augmentation.rst", "generated/surfify.augmentation.BaseTransformer.rst", "generated/surfify.augmentation.GroupMixUp.rst", "generated/surfify.augmentation.HemiMixUp.rst", "generated/surfify.augmentation.SurfBlur.rst", "generated/surfify.augmentation.SurfCutOut.rst", "generated/surfify.augmentation.SurfNoise.rst", "generated/surfify.augmentation.SurfRotation.rst", "generated/surfify.augmentation.Transformer.rst", "generated/surfify.augmentation.apply_chained_transforms.rst", "generated/surfify.augmentation.base.SurfBlur.rst", "generated/surfify.augmentation.base.SurfCutOut.rst", "generated/surfify.augmentation.base.SurfNoise.rst", "generated/surfify.augmentation.base.SurfRotation.rst", "generated/surfify.augmentation.interval.rst", "generated/surfify.augmentation.mixup.GroupMixUp.rst", "generated/surfify.augmentation.mixup.HemiMixUp.rst", "generated/surfify.augmentation.mixup.MixUpAugmentation.rst", "generated/surfify.augmentation.multichannel_augmentation.rst", "generated/surfify.augmentation.utils.BaseTransformer.rst", "generated/surfify.augmentation.utils.RandomAugmentation.rst", "generated/surfify.augmentation.utils.Transformer.rst", "generated/surfify.augmentation.utils.apply_chained_transforms.rst", "generated/surfify.augmentation.utils.interval.rst", "generated/surfify.augmentation.utils.listify.rst", "generated/surfify.augmentation.utils.multichannel_augmentation.rst", "generated/surfify.datasets.rst", "generated/surfify.datasets.ClassificationDataset.rst", "generated/surfify.datasets.GenericSurfDataset.rst", "generated/surfify.datasets._generic.GenericSurfDataset.rst", "generated/surfify.datasets._samples_generator.ClassificationDataset.rst", "generated/surfify.datasets._samples_generator.make_classification.rst", "generated/surfify.datasets.make_classification.rst", "generated/surfify.losses.rst", "generated/surfify.losses.SphericalVAELoss.rst", "generated/surfify.losses.vae.SphericalVAELoss.rst", "generated/surfify.losses.vae.log_likelihood.rst", "generated/surfify.models.rst", "generated/surfify.models.HemiFusionDecoder.rst", "generated/surfify.models.HemiFusionEncoder.rst", "generated/surfify.models.SphericalBase.rst", "generated/surfify.models.SphericalGUNet.rst", "generated/surfify.models.SphericalGVGG.rst", "generated/surfify.models.SphericalGVGG11.rst", "generated/surfify.models.SphericalGVGG11BN.rst", "generated/surfify.models.SphericalGVGG13.rst", "generated/surfify.models.SphericalGVGG13BN.rst", "generated/surfify.models.SphericalGVGG16.rst", "generated/surfify.models.SphericalGVGG16BN.rst", "generated/surfify.models.SphericalGVGG19.rst", "generated/surfify.models.SphericalGVGG19BN.rst", "generated/surfify.models.SphericalHemiFusionDecoder.rst", "generated/surfify.models.SphericalHemiFusionEncoder.rst", "generated/surfify.models.SphericalUNet.rst", "generated/surfify.models.SphericalVAE.rst", "generated/surfify.models.SphericalVGG.rst", "generated/surfify.models.SphericalVGG11.rst", "generated/surfify.models.SphericalVGG11BN.rst", "generated/surfify.models.SphericalVGG13.rst", "generated/surfify.models.SphericalVGG13BN.rst", "generated/surfify.models.SphericalVGG16.rst", "generated/surfify.models.SphericalVGG16BN.rst", "generated/surfify.models.SphericalVGG19.rst", "generated/surfify.models.SphericalVGG19BN.rst", "generated/surfify.models.base.SphericalBase.rst", "generated/surfify.models.unet.DownBlock.rst", "generated/surfify.models.unet.DownGBlock.rst", "generated/surfify.models.unet.GraphicalUNet.rst", "generated/surfify.models.unet.SphericalGUNet.rst", "generated/surfify.models.unet.SphericalUNet.rst", "generated/surfify.models.unet.UpBlock.rst", "generated/surfify.models.unet.UpGBlock.rst", "generated/surfify.models.vae.HemiFusionDecoder.rst", "generated/surfify.models.vae.HemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalHemiFusionDecoder.rst", "generated/surfify.models.vae.SphericalHemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalVAE.rst", "generated/surfify.models.vae.compute_output_dim.rst", "generated/surfify.models.vgg.SphericalGVGG.rst", "generated/surfify.models.vgg.SphericalGVGG11.rst", "generated/surfify.models.vgg.SphericalGVGG11BN.rst", "generated/surfify.models.vgg.SphericalGVGG13.rst", "generated/surfify.models.vgg.SphericalGVGG13BN.rst", "generated/surfify.models.vgg.SphericalGVGG16.rst", "generated/surfify.models.vgg.SphericalGVGG16BN.rst", "generated/surfify.models.vgg.SphericalGVGG19.rst", "generated/surfify.models.vgg.SphericalGVGG19BN.rst", "generated/surfify.models.vgg.SphericalVGG.rst", "generated/surfify.models.vgg.SphericalVGG11.rst", "generated/surfify.models.vgg.SphericalVGG11BN.rst", "generated/surfify.models.vgg.SphericalVGG13.rst", "generated/surfify.models.vgg.SphericalVGG13BN.rst", "generated/surfify.models.vgg.SphericalVGG16.rst", "generated/surfify.models.vgg.SphericalVGG16BN.rst", "generated/surfify.models.vgg.SphericalVGG19.rst", "generated/surfify.models.vgg.SphericalVGG19BN.rst", "generated/surfify.models.vgg.class_factory.rst", "generated/surfify.nn.rst", "generated/surfify.nn.IcoDiNeConv.rst", "generated/surfify.nn.IcoFixIndexUpSample.rst", "generated/surfify.nn.IcoGenericUpConv.rst", "generated/surfify.nn.IcoMaxIndexUpSample.rst", "generated/surfify.nn.IcoPool.rst", "generated/surfify.nn.IcoRePaConv.rst", "generated/surfify.nn.IcoSpMaConv.rst", "generated/surfify.nn.IcoSpMaConvTranspose.rst", "generated/surfify.nn.IcoUpConv.rst", "generated/surfify.nn.IcoUpSample.rst", "generated/surfify.nn.functional.circular_pad.rst", "generated/surfify.nn.modules.IcoDiNeConv.rst", "generated/surfify.nn.modules.IcoFixIndexUpSample.rst", "generated/surfify.nn.modules.IcoGenericUpConv.rst", "generated/surfify.nn.modules.IcoMaxIndexUpSample.rst", "generated/surfify.nn.modules.IcoPool.rst", "generated/surfify.nn.modules.IcoRePaConv.rst", "generated/surfify.nn.modules.IcoSpMaConv.rst", "generated/surfify.nn.modules.IcoSpMaConvTranspose.rst", "generated/surfify.nn.modules.IcoUpConv.rst", "generated/surfify.nn.modules.IcoUpSample.rst", "generated/surfify.plotting.rst", "generated/surfify.plotting.plot_trisurf.rst", "generated/surfify.plotting.surface.plot_trisurf.rst", "generated/surfify.utils.rst", "generated/surfify.utils.cart2sph.rst", "generated/surfify.utils.coord.cart2sph.rst", "generated/surfify.utils.coord.find_corresponding_order.rst", "generated/surfify.utils.coord.grid2text.rst", "generated/surfify.utils.coord.ico2ico.rst", "generated/surfify.utils.coord.sph2cart.rst", "generated/surfify.utils.coord.text2grid.rst", "generated/surfify.utils.coord.text2ico.rst", "generated/surfify.utils.debug_msg.rst", "generated/surfify.utils.downsample.rst", "generated/surfify.utils.downsample_data.rst", "generated/surfify.utils.downsample_ico.rst", "generated/surfify.utils.find_neighbors.rst", "generated/surfify.utils.find_rotation_interpol_coefs.rst", "generated/surfify.utils.get_logger.rst", "generated/surfify.utils.get_rectangular_projection.rst", "generated/surfify.utils.grid2text.rst", "generated/surfify.utils.ico2ico.rst", "generated/surfify.utils.icosahedron.rst", "generated/surfify.utils.interpolate.rst", "generated/surfify.utils.interpolate_data.rst", "generated/surfify.utils.io.HidePrints.rst", "generated/surfify.utils.io.compute_and_store.rst", "generated/surfify.utils.io.decompose_cifti.rst", "generated/surfify.utils.io.read_freesurfer.rst", "generated/surfify.utils.io.read_gifti.rst", "generated/surfify.utils.io.surf_data_from_cifti.rst", "generated/surfify.utils.io.ungzip.rst", "generated/surfify.utils.io.volume_from_cifti.rst", "generated/surfify.utils.io.write_freesurfer.rst", "generated/surfify.utils.io.write_gifti.rst", "generated/surfify.utils.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.neighbors.rst", "generated/surfify.utils.neighbors_rec.rst", "generated/surfify.utils.number_of_ico_vertices.rst", "generated/surfify.utils.number_of_neighbors.rst", "generated/surfify.utils.order_of_ico_from_vertices.rst", "generated/surfify.utils.order_triangles.rst", "generated/surfify.utils.patch_tri.rst", "generated/surfify.utils.rotate_data.rst", "generated/surfify.utils.sampling._patch_tri_iter.rst", "generated/surfify.utils.sampling.build_freesurfer_ico.rst", "generated/surfify.utils.sampling.build_fslr_ref.rst", "generated/surfify.utils.sampling.downsample.rst", "generated/surfify.utils.sampling.downsample_data.rst", "generated/surfify.utils.sampling.downsample_ico.rst", "generated/surfify.utils.sampling.find_neighbors.rst", "generated/surfify.utils.sampling.find_rotation_interpol_coefs.rst", "generated/surfify.utils.sampling.get_angle_with_xaxis.rst", "generated/surfify.utils.sampling.get_rectangular_projection.rst", "generated/surfify.utils.sampling.icosahedron.rst", "generated/surfify.utils.sampling.interpolate.rst", "generated/surfify.utils.sampling.interpolate_data.rst", "generated/surfify.utils.sampling.middle_point.rst", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.sampling.neighbors.rst", "generated/surfify.utils.sampling.neighbors_rec.rst", "generated/surfify.utils.sampling.normalize.rst", "generated/surfify.utils.sampling.number_of_ico_vertices.rst", "generated/surfify.utils.sampling.number_of_neighbors.rst", "generated/surfify.utils.sampling.order_of_ico_from_vertices.rst", "generated/surfify.utils.sampling.order_triangles.rst", "generated/surfify.utils.sampling.patch_tri.rst", "generated/surfify.utils.sampling.rotate_data.rst", "generated/surfify.utils.sampling.triangles_to_edges.rst", "generated/surfify.utils.sampling.vertex_adjacency_graph.rst", "generated/surfify.utils.setup_logging.rst", "generated/surfify.utils.sph2cart.rst", "generated/surfify.utils.text2grid.rst", "generated/surfify.utils.text2ico.rst", "index.rst", "sg_execution_times.rst"], "titles": ["Use Cases", "Computation times", "Self-Supervised Contrastive Learning with SimCLR", "Spherical Modules Use Cases", "Spherical augmentations", "Icosahedron matching", "Project texture", "Spherical neighbors", "UNet segmentation", "Computation times", "API documentation of NIDL", "Installing <cite>nidl</cite>", "API documentation of <em>nidl</em>", "API documentation of <em>nidl.callbacks</em>", "&lt;no title&gt;", "API documentation of <em>nidl.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.estimators</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.estimators.linear</em>", "Examples", "Examples", "API documentation of <em>nidl.estimators.ssl</em>", "Examples", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.transforms</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.utils</em>", "&lt;no title&gt;", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Examples", "Search in API documentation of NIDL", "API documentation of <em>surfify</em>", "API documentation of <em>surfify.augmentation</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.losses</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.models</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.nn</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.plotting</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computation times"], "terms": {"self": [0, 1, 10, 33, 34, 35, 36, 37, 43, 44, 45, 48, 62, 64, 66, 263], "supervis": [0, 1, 10, 33, 34, 35, 36, 37, 43, 44, 45, 48, 66, 263], "contrast": [0, 1, 33, 34, 36, 37, 48, 66, 97, 98, 263], "learn": [0, 1, 33, 34, 36, 37, 43, 44, 45, 48, 66, 106, 123, 145, 167, 178, 262, 263], "simclr": [0, 1, 10, 33, 34, 36, 37, 48, 66, 67, 263], "neighbor": [0, 3, 4, 9, 10, 67, 71, 73, 74, 79, 80, 84, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 175, 178, 180, 181, 182, 183, 186, 191, 195, 198, 201, 204, 205, 208, 211, 223, 224, 225, 227, 231, 235, 238, 239, 243, 246, 247, 248, 251, 255, 257, 260, 263], "unet": [0, 3, 9, 10, 67, 110, 122, 134, 135, 136, 137, 138, 139, 140, 263], "segment": [0, 3, 9, 263], "project": [0, 3, 4, 5, 7, 9, 11, 16, 19, 36, 37, 38, 76, 82, 196, 199, 201, 204, 207, 209, 210, 224, 225, 230, 235, 238, 240, 241, 242, 245, 247, 248, 254, 261, 263], "textur": [0, 3, 4, 9, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 107, 108, 111, 120, 121, 123, 124, 141, 142, 143, 144, 145, 147, 156, 189, 190, 195, 198, 199, 202, 208, 211, 212, 231, 236, 243, 244, 255, 260, 261, 263], "icosahedron": [0, 3, 4, 6, 7, 8, 9, 10, 67, 73, 74, 76, 79, 80, 82, 96, 99, 100, 101, 106, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 260, 261, 263], "match": [0, 3, 9, 17, 20, 194, 199, 261, 263], "augment": [0, 3, 9, 10, 16, 17, 18, 19, 20, 36, 37, 38, 44, 45, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 263], "download": [0, 2, 4, 5, 6, 7, 8, 46, 48, 66], "all": [0, 2, 5, 16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 110, 122, 136, 137, 138, 172, 173, 174, 183, 184, 185, 263], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 44, 45, 47, 49, 64, 109, 111, 122, 123, 124, 133, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 260, 261, 263], "python": [0, 2, 4, 5, 6, 7, 8, 62], "sourc": [0, 2, 4, 5, 6, 7, 8, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "code": [0, 2, 4, 5, 6, 7, 8, 14, 38, 41, 59, 60], "auto_gallery_python": 0, "zip": [0, 2, 4, 5, 6, 7, 8, 219], "jupyt": [0, 2, 4, 5, 6, 7, 8], "notebook": [0, 2, 4, 5, 6, 7, 8], "auto_gallery_jupyt": 0, "galleri": [0, 2, 4, 5, 6, 7, 8, 10, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "gener": [0, 2, 4, 5, 6, 7, 8, 10, 15, 16, 19, 33, 34, 36, 37, 86, 95, 96, 99, 100, 101, 106, 198, 204, 219, 221, 222, 233, 234, 238, 260], "sphinx": [0, 2, 4, 5, 6, 7, 8], "00": [1, 9, 263], "000": [1, 2, 263], "total": [1, 4, 5, 6, 7, 8, 9, 263], "execut": [1, 9, 214, 263], "1": [1, 2, 4, 5, 6, 7, 8, 33, 34, 36, 37, 38, 47, 49, 64, 70, 71, 74, 80, 84, 88, 89, 96, 99, 100, 101, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 173, 174, 175, 178, 180, 181, 182, 184, 185, 186, 189, 190, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 233, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 257, 260, 261], "file": [1, 9, 16, 17, 18, 19, 20, 38, 48, 66, 97, 98, 215, 216, 217, 219, 221, 222, 258, 262, 263], "from": [1, 2, 4, 5, 6, 7, 8, 9, 11, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 47, 49, 64, 71, 74, 80, 84, 97, 98, 107, 109, 110, 111, 122, 123, 124, 133, 137, 138, 141, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 260, 261, 263], "auto_galleri": [1, 9], "mem": [1, 9, 263], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 263], "simclr_stl10": [1, 2, 263], "py": [1, 2, 4, 5, 6, 7, 8, 9, 263], "0": [1, 2, 4, 5, 6, 7, 8, 14, 33, 34, 36, 37, 38, 64, 70, 74, 76, 80, 82, 88, 89, 109, 123, 133, 136, 145, 168, 173, 174, 179, 184, 185, 189, 190, 194, 196, 199, 201, 204, 209, 224, 225, 229, 230, 231, 235, 238, 247, 248, 253, 254, 255, 257, 261, 263], "go": [2, 4, 5, 6, 7, 8], "end": [2, 4, 5, 6, 7, 8, 33, 34, 36, 37, 59, 60, 65], "full": [2, 4, 5, 6, 7, 8, 10, 203, 237], "http": [2, 11, 62, 106, 218, 220], "uvadlc": 2, "readthedoc": 2, "io": [2, 10, 67, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "In": [2, 33, 34, 36, 37, 42, 44, 45, 110, 122, 137, 138, 165], "thi": [2, 5, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "tutori": [2, 11], "we": [2, 5, 6, 8, 33, 34, 36, 37, 44, 45, 63, 165, 177, 218, 220], "take": [2, 36, 37, 136, 146, 172, 173, 174, 183, 184, 185], "closer": [2, 36, 37], "look": [2, 36, 37, 204, 238], "also": [2, 10, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 62, 95, 97, 98, 214, 262], "sometim": [2, 47, 49], "call": [2, 14, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 44, 45, 65, 97, 98, 136, 172, 173, 174, 183, 184, 185, 214, 231, 255], "unsupervis": 2, "describ": [2, 36, 37, 38, 262], "scenario": 2, "where": [2, 6, 16, 17, 18, 19, 20, 36, 37, 38, 48, 66, 97, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178, 189, 190, 198, 257, 260], "have": [2, 5, 6, 14, 33, 34, 36, 37, 214, 224, 247], "given": [2, 48, 65, 66, 105, 107, 141, 214, 231, 255, 256, 257], "input": [2, 8, 14, 16, 17, 18, 19, 20, 22, 27, 38, 40, 44, 45, 48, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 91, 93, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 194, 195, 198, 199, 208, 214, 216, 217, 232, 260, 261], "accompani": 2, "label": [2, 6, 33, 34, 100, 101, 189, 190], "classic": [2, 122, 138, 139], "wai": [2, 22, 27, 44, 45, 224, 247, 262], "howev": 2, "still": 2, "contain": [2, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 47, 49, 97, 98, 109, 133, 146, 189, 190, 214, 230, 254], "lot": 2, "inform": [2, 16, 17, 18, 19, 20, 38, 97, 98, 106, 109, 133], "which": [2, 22, 27, 33, 34, 36, 37, 65, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 194, 204, 231, 238, 255], "can": [2, 5, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 63, 70, 77, 88, 90, 97, 98, 110, 111, 122, 123, 124, 136, 137, 138, 145, 146, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 213, 214], "how": [2, 4, 5, 7, 8, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "ar": [2, 5, 6, 8, 14, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 39, 47, 49, 69, 97, 98, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 177, 194, 198, 211, 224, 231, 233, 243, 247, 255, 257, 260], "imag": [2, 6, 16, 17, 18, 19, 20, 33, 34, 36, 37, 44, 45, 69, 97, 98, 105, 198, 215, 260], "differ": [2, 5, 16, 17, 18, 19, 20, 36, 37, 38, 44, 45, 74, 80, 97, 98, 109, 110, 122, 133, 137, 138], "each": [2, 5, 16, 19, 22, 27, 33, 34, 36, 37, 38, 44, 45, 71, 73, 74, 79, 80, 84, 87, 94, 96, 99, 100, 101, 105, 107, 108, 109, 110, 120, 121, 122, 133, 136, 137, 138, 141, 142, 143, 144, 204, 205, 224, 225, 231, 238, 239, 247, 248, 255], "other": [2, 5, 36, 37, 38, 199, 261], "what": [2, 33, 34, 36, 37, 38, 41], "pattern": [2, 6, 16, 17, 18, 19, 20, 97, 98, 177], "descript": 2, "certain": [2, 204, 227, 238, 251], "cluster": [2, 24, 29], "To": [2, 5, 16, 19, 33, 34, 36, 37], "get": [2, 36, 37, 223, 226, 227, 228, 246, 250, 251, 252, 257], "an": [2, 6, 7, 8, 11, 22, 27, 33, 34, 36, 37, 38, 40, 41, 44, 45, 47, 48, 49, 62, 64, 65, 66, 73, 74, 79, 80, 83, 86, 87, 89, 92, 94, 109, 110, 122, 133, 137, 138, 167, 178, 195, 198, 199, 203, 208, 210, 212, 223, 226, 227, 228, 231, 237, 242, 244, 245, 246, 250, 251, 252, 255, 260, 261], "insight": 2, "question": 2, "implement": [2, 33, 34, 36, 37, 62, 73, 79, 106, 123, 136, 145], "popular": [2, 10, 95], "simpl": [2, 4, 5, 7, 8, 36, 37, 196, 209, 257], "method": [2, 10, 14, 16, 19, 22, 27, 33, 34, 36, 37, 47, 48, 49, 63, 64, 66, 95, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 231, 255], "appli": [2, 5, 6, 36, 37, 44, 45, 48, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 88, 89, 90, 91, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 177, 196, 207, 209, 225, 241, 248], "stl10": 2, "requir": [2, 22, 27, 33, 34, 36, 37], "some": [2, 7, 10, 33, 34, 36, 37, 38, 40, 77, 78, 90, 91, 95, 257], "packag": [2, 5, 11], "besid": 2, "nidl": [2, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 262], "let": [2, 36, 37], "": [2, 5, 7, 33, 34, 36, 37, 65, 72, 73, 74, 76, 79, 80, 82, 85, 96, 99, 100, 101, 107, 108, 110, 120, 121, 122, 134, 137, 138, 139, 141, 142, 143, 144, 167, 178, 201, 204, 214, 224, 225, 229, 230, 235, 238, 247, 248, 253, 254], "first": [2, 5, 6, 8, 33, 34, 36, 37, 107, 110, 122, 134, 135, 137, 138, 141, 231, 255], "start": [2, 74, 80, 204, 238], "import": [2, 4, 5, 6, 7, 8, 36, 37, 38, 40, 41, 47, 49, 64, 95, 109, 111, 122, 123, 124, 133, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 260, 261], "our": [2, 5], "standard": [2, 73, 75, 79, 81, 109, 110, 122, 133, 137, 138, 210, 213, 230, 242, 254], "librari": 2, "below": [2, 33, 34, 36, 37, 38], "o": [2, 5, 7, 191, 201, 204, 224, 225, 230, 235, 238, 247, 248, 254], "matplotlib": [2, 4, 5, 6, 7, 8, 189, 190, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "pyplot": [2, 4, 5, 6, 7, 8, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "plt": [2, 4, 5, 6, 7, 8, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "pytorch_lightn": 2, "pl": 2, "torch": [2, 6, 8, 33, 34, 36, 37, 48, 66, 106, 111, 122, 123, 124, 136, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "nn": [2, 6, 8, 10, 22, 27, 33, 34, 36, 37, 48, 66, 67, 73, 79, 107, 108, 120, 121, 134, 136, 139, 141, 142, 143, 144, 146, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "util": [2, 4, 5, 6, 7, 8, 10, 33, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 79, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 122, 123, 124, 138, 145, 156, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "torchvis": [2, 33, 34, 36, 37], "collect": 2, "ordereddict": 2, "copi": [2, 16, 19], "deepcopi": 2, "weight": [2, 10, 33, 34, 36, 37, 38, 48, 66, 67, 71, 84, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 205, 211, 225, 231, 239, 243, 248, 255], "estim": [2, 4, 5, 6, 7, 8, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 63, 65, 67, 196, 209], "ssl": [2, 10, 36, 37, 45, 67], "linear": [2, 10, 33, 34, 67, 110, 122, 137, 138, 139], "logisticregress": [2, 10, 32, 33, 34, 67], "callback": [2, 10, 14, 22, 27, 33, 34, 36, 37, 67], "learningratemonitor": [2, 33, 34, 36, 37], "modelcheckpoint": 2, "transform": [2, 5, 10, 16, 17, 18, 19, 20, 22, 26, 27, 31, 38, 44, 45, 67, 69, 70, 77, 78, 87, 88, 90, 91, 94, 97, 98, 107, 141, 192, 193, 196, 197, 209, 230, 254, 259], "defin": [2, 10, 13, 16, 17, 18, 19, 20, 21, 22, 27, 36, 37, 38, 39, 71, 84, 86, 89, 97, 98, 110, 122, 136, 137, 138, 139, 140, 165, 172, 173, 174, 183, 184, 185, 189, 190, 207, 210, 216, 217, 221, 222, 241, 242], "global": [2, 38, 165], "paramet": [2, 8, 14, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "datadir": 2, "tmp": 2, "checkpointdir": 2, "saved_model": 2, "num_work": 2, "cpu_count": 2, "num_imag": 2, "6": [2, 4, 33, 34, 36, 37, 47, 49, 109, 123, 124, 133, 145, 156, 224, 230, 247, 254, 263], "backend": 2, "cudnn": 2, "determinst": 2, "true": [2, 4, 5, 6, 7, 8, 33, 34, 36, 37, 48, 54, 59, 60, 61, 64, 66, 70, 87, 88, 94, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 175, 178, 180, 181, 182, 186, 189, 190, 195, 196, 199, 202, 204, 208, 209, 224, 229, 236, 238, 247, 253, 261], "benchmark": 2, "fals": [2, 4, 6, 7, 22, 27, 33, 34, 36, 37, 48, 62, 64, 66, 97, 98, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 189, 190, 196, 201, 203, 204, 209, 210, 211, 212, 213, 215, 218, 220, 224, 225, 229, 230, 231, 235, 237, 238, 242, 243, 244, 247, 248, 253, 254, 255, 256], "devic": [2, 33, 34, 36, 37], "gpu": [2, 33, 34, 36, 37], "cuda": 2, "is_avail": 2, "els": 2, "cpu": 2, "As": [2, 8, 36, 37], "mani": [2, 5, 33, 34, 36, 37], "befor": [2, 36, 37, 65, 110, 122, 137, 138, 174, 185], "provid": [2, 16, 17, 18, 19, 20, 22, 27, 76, 82, 97, 98, 166, 205, 231, 239, 255, 262], "pre": 2, "model": [2, 10, 33, 34, 36, 37, 38, 46, 48, 66, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "If": [2, 14, 16, 17, 18, 19, 20, 33, 34, 36, 37, 48, 65, 66, 214, 231, 255], "you": [2, 5, 11, 14, 16, 19, 33, 34, 36, 37, 38, 39, 48, 66], "run": [2, 4, 5, 6, 7, 8, 33, 34, 36, 37, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 136, 172, 173, 174, 183, 184, 185, 230, 254], "local": [2, 38, 42, 48, 66], "make": [2, 64, 165], "sure": 2, "suffici": 2, "disk": [2, 33, 34, 36, 37], "space": [2, 6, 36, 37, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 207, 241], "avail": [2, 33, 34, 36, 37, 38, 48, 64, 66], "load_pretrain": [2, 48, 66], "makedir": 2, "exist_ok": 2, "name": [2, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 41, 48, 65, 66, 107, 108, 120, 121, 141, 142, 143, 144, 165, 189, 190, 200, 214], "hf": [2, 38, 48, 66], "hub": [2, 38, 48, 66], "neurospin": [2, 11, 48, 66], "resnet18": 2, "data_dir": [2, 48, 66], "filepath": [2, 48, 66], "pt": 2, "allow": [2, 5, 14, 17, 20, 36, 37, 38, 39, 44, 45, 214, 231, 255], "effici": [2, 44, 45], "need": [2, 5, 6, 33, 34, 36, 37, 38, 44, 45, 136, 172, 173, 174, 177, 183, 184, 185], "prepar": [2, 44, 45], "load": [2, 8, 10, 16, 17, 19, 20, 38, 41, 42, 44, 45, 48, 66, 95, 97, 98, 218, 220], "sampl": [2, 8, 10, 44, 45, 67, 95, 96, 99, 100, 101, 105, 107, 108, 110, 111, 122, 123, 124, 134, 137, 138, 139, 141, 142, 145, 147, 156, 169, 170, 171, 175, 177, 180, 181, 182, 186, 198, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260], "two": [2, 5, 33, 34, 36, 37, 44, 45, 194, 196, 209, 224, 247], "random": [2, 4, 22, 27, 44, 45, 70, 74, 80, 86, 87, 88, 89, 94, 96, 99, 100, 101], "batch": [2, 8, 14, 22, 27, 33, 34, 36, 37, 44, 45, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "The": [2, 5, 16, 19, 33, 34, 36, 37, 38, 44, 45, 65, 73, 75, 76, 79, 81, 82, 106, 107, 108, 110, 120, 121, 122, 123, 136, 137, 138, 141, 142, 143, 144, 145, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 192, 193, 213, 214], "easiest": [2, 44, 45], "do": [2, 5, 33, 34, 36, 37, 44, 45], "i": [2, 5, 8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "creat": [2, 44, 45, 62, 70, 83, 88, 89, 92, 95, 97, 98, 109, 133, 165], "when": [2, 14, 22, 27, 33, 34, 36, 37, 44, 45, 48, 64, 66, 189, 190, 194, 199, 214, 229, 253, 261], "being": [2, 44, 45], "set": [2, 5, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 42, 44, 45, 50, 74, 76, 80, 82, 95, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 201, 211, 215, 235, 243], "twice": [2, 44, 45], "class": [2, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 213], "contrastivetransform": [2, 10, 43, 44, 45, 67], "framework": 2, "easili": [2, 5], "extend": [2, 47, 49], "more": [2, 16, 17, 18, 19, 20, 44, 45, 97, 98, 262], "posit": [2, 44, 45], "than": [2, 36, 37], "same": [2, 5, 36, 37, 38, 39, 194, 196, 209, 214, 219, 224, 247], "most": [2, 189, 190], "usual": [2, 36, 37], "obtain": [2, 36, 37], "us": [2, 4, 5, 6, 7, 8, 10, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "onli": [2, 5, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "def": [2, 4, 6, 33, 34, 36, 37, 64], "__init__": [2, 33, 34, 36, 37, 64], "base_transform": 2, "n_view": [2, 44, 45], "2": [2, 4, 5, 7, 8, 9, 33, 34, 36, 37, 38, 44, 45, 47, 49, 64, 70, 83, 88, 89, 92, 96, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 207, 208, 209, 211, 212, 223, 224, 225, 230, 235, 236, 237, 238, 241, 243, 244, 246, 247, 248, 254, 256, 260, 261, 263], "__call__": 2, "x": [2, 6, 7, 8, 33, 34, 36, 37, 64, 100, 101, 105, 108, 110, 111, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 142, 143, 144, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 195, 197, 198, 199, 202, 208, 211, 212, 224, 231, 236, 240, 243, 244, 247, 255, 259, 260, 261], "return": [2, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 39, 40, 41, 42, 48, 62, 64, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91, 92, 93, 94, 97, 98, 100, 101, 105, 107, 108, 109, 111, 120, 121, 123, 124, 133, 141, 142, 143, 144, 145, 146, 147, 156, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261], "rang": [2, 4, 5, 8, 192, 193, 227, 251], "next": [2, 5, 33, 34, 36, 37, 214], "specif": [2, 10, 33, 34, 36, 37, 71, 72, 84, 85, 110, 122, 137, 138, 165, 226, 250], "want": [2, 11, 36, 37, 48, 66], "choic": [2, 38], "crucial": 2, "hyperparamet": [2, 36, 37], "sinc": [2, 5, 6, 36, 37, 136, 172, 173, 174, 177, 183, 184, 185], "directli": [2, 69], "affect": [2, 22, 27], "latent": [2, 36, 37, 107, 108, 120, 121, 123, 141, 142, 143, 144, 145], "structur": [2, 5], "might": [2, 33, 34, 36, 37], "overal": 2, "experi": [2, 10, 33, 34, 36, 37, 38, 39, 40, 41, 42, 67, 262], "5": [2, 4, 6, 7, 8, 9, 76, 82, 109, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 183, 207, 224, 225, 241, 247, 248, 263], "follow": [2, 36, 37, 38], "origin": [2, 6, 36, 37, 69, 105], "horizont": [2, 6], "flip": 2, "crop": 2, "resiz": 2, "color": [2, 7, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 189, 190], "distort": 2, "grayscal": 2, "gaussian": [2, 73, 75, 79, 81, 96, 99, 100, 101], "blur": [2, 73, 79], "comparison": 2, "reduc": [2, 71, 84, 202, 203, 205, 236, 237, 239], "effect": 2, "jitter": 2, "slightli": 2, "instead": [2, 136, 172, 173, 174, 183, 184, 185], "8": [2, 4, 6, 8, 33, 34, 36, 37, 122, 138, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187], "bright": 2, "satur": 2, "hue": 2, "better": 2, "perform": [2, 36, 37, 65, 71, 84, 136, 171, 172, 173, 174, 182, 183, 184, 185], "wa": [2, 36, 37], "faster": [2, 214], "stabl": 2, "instanc": [2, 5, 22, 27, 33, 34, 36, 37, 65, 70, 88, 89, 109, 133, 136, 172, 173, 174, 183, 184, 185], "scale": [2, 6, 8, 33, 34, 36, 37, 96, 99, 100, 101, 198, 199, 202, 207, 211, 212, 225, 231, 236, 241, 243, 244, 248, 255, 260, 261], "highli": 2, "vari": 2, "benefici": 2, "t": [2, 6, 33, 34, 36, 37], "reli": 2, "anymor": 2, "distinguish": 2, "between": [2, 5, 33, 34, 36, 37, 71, 72, 84, 85, 189, 190, 194, 196, 209, 224, 233, 247, 257], "contrast_transform": 2, "compos": [2, 38, 44, 45, 224, 247], "randomhorizontalflip": 2, "randomresizedcrop": 2, "size": [2, 6, 7, 8, 33, 34, 36, 37, 71, 72, 74, 80, 84, 85, 86, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 177, 183, 184, 185, 204, 207, 225, 230, 232, 238, 241, 248, 254], "96": [2, 4, 174, 185, 195, 208], "randomappli": 2, "colorjitt": 2, "p": 2, "randomgrayscal": 2, "gaussianblur": 2, "kernel_s": [2, 6, 173, 174, 184, 185], "9": [2, 4, 5, 103, 104], "totensor": 2, "normal": [2, 10, 33, 34, 36, 37, 67, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 191, 240, 249], "after": [2, 33, 34, 36, 37, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "discuss": 2, "techniqu": [2, 257], "now": [2, 5, 8, 36, 37, 146], "focu": 2, "similarli": 2, "cifar10": 2, "10": [2, 4, 5, 7, 8, 9, 111, 122, 124, 138, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254, 263], "airplan": 2, "bird": 2, "car": 2, "cat": 2, "deer": 2, "dog": 2, "hors": 2, "monkei": 2, "ship": 2, "truck": 2, "higher": 2, "resolut": [2, 97, 98, 110, 122, 137, 138], "pixel": 2, "500": 2, "per": [2, 16, 19], "addition": 2, "much": 2, "larger": [2, 36, 37], "100": [2, 4, 7, 8, 201, 204, 224, 225, 230, 233, 235, 238, 247, 248, 254], "unlabel": 2, "similar": [2, 5, 33, 34, 36, 37], "wider": [2, 36, 37], "anim": 2, "vehicl": 2, "ideal": 2, "showcas": 2, "benefit": 2, "offer": 2, "luckili": 2, "through": [2, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "keep": [2, 97, 98], "mind": 2, "rel": [2, 16, 17, 18, 19, 20], "larg": 2, "ha": [2, 5, 33, 34, 36, 37, 110, 122, 137, 138], "consider": [2, 36, 37], "3gb": 2, "bit": [2, 33, 34, 36, 37], "time": [2, 4, 5, 6, 7, 8, 231, 255], "For": [2, 33, 34, 36, 37, 65, 146, 224, 247], "initi": [2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "loader": [2, 8], "abov": 2, "unlabeled_data": 2, "via": [2, 231, 255], "train_data_contrast": 2, "valid": [2, 10, 14, 22, 27, 33, 34, 36, 37, 38, 42, 62, 63, 64, 65, 67], "root": [2, 11, 16, 17, 18, 19, 20, 97, 98], "split": [2, 16, 17, 18, 19, 20, 36, 37, 97, 98], "pair": [2, 97, 98], "img": 2, "stack": 2, "idx": [2, 4, 7, 16, 17, 19, 20, 204, 224, 230, 238, 247, 254], "dim": [2, 8, 33, 34, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "img_grid": 2, "make_grid": [2, 33, 34, 36, 37], "nrow": 2, "pad_valu": 2, "permut": [2, 5, 72, 85, 194, 196, 209], "figur": [2, 6, 189, 190], "figsiz": [2, 4, 5, 6, 7, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "titl": [2, 6, 56, 57], "imshow": [2, 6, 198, 260], "axi": [2, 6, 8, 189, 190, 194, 205, 211, 218, 220, 224, 231, 239, 240, 243, 247, 255], "off": [2, 6], "And": 2, "associ": [2, 7, 33, 34, 36, 37, 191, 199, 205, 231, 239, 255, 261], "dataload": [2, 8, 33, 34, 36, 37, 38], "batch_siz": [2, 8, 108, 120, 121, 123, 142, 143, 144, 145], "256": [2, 50, 107, 108, 120, 121, 141, 142, 143, 144], "train_load": 2, "shuffl": [2, 8, 22, 27], "drop_last": 2, "pin_memori": 2, "val_load": 2, "common": [2, 10, 13, 15, 21, 43, 69, 102, 106], "resnet": 2, "18": [2, 4], "architectur": [2, 8, 10, 33, 34, 36, 37, 106, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156], "f": [2, 6, 33, 34, 36, 37, 110, 122, 137, 138], "paper": [2, 36, 37], "g": [2, 33, 34, 36, 37], "layer": [2, 36, 37, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187], "mlp": [2, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "relu": [2, 36, 37, 110, 122, 134, 135, 136, 137, 138, 139, 140], "activ": [2, 36, 37, 107, 108, 110, 120, 121, 122, 123, 137, 138, 141, 142, 143, 144, 145], "hidden": [2, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "note": [2, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 62, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 214], "up": [2, 36, 37, 109, 110, 122, 133, 137, 138, 194, 196, 204, 209, 227, 238, 251], "simclrv2": [2, 36, 37], "author": [2, 36, 37, 38], "mention": [2, 36, 37], "boost": [2, 36, 37], "why": [2, 5], "four": 2, "dimens": [2, 5, 36, 37, 146], "deeper": 2, "show": [2, 4, 5, 6, 7, 8, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "overfit": 2, "A": [2, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 33, 34, 36, 37, 48, 66, 69, 97, 98, 106], "observ": 2, "u": [2, 6, 36, 37, 97, 98, 110, 122, 136, 137, 138], "compar": [2, 36, 37], "neg": 2, "lead": 2, "smoother": 2, "loss": [2, 8, 10, 33, 34, 36, 37, 38, 67, 103, 104, 105], "gradient": [2, 33, 34, 36, 37], "case": [2, 33, 34, 36, 37, 38, 41, 42], "experienc": 2, "good": 2, "result": [2, 55, 62, 165, 213], "hidden_dim": [2, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "128": [2, 107, 108, 120, 121, 141, 142, 143, 144], "encod": [2, 33, 34, 36, 37, 102, 106, 108, 110, 120, 121, 122, 123, 137, 138, 142, 143, 144, 145], "none": [2, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 41, 42, 48, 65, 66, 71, 73, 74, 76, 79, 80, 82, 84, 96, 97, 98, 99, 100, 101, 103, 104, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 174, 185, 189, 190, 202, 203, 212, 214, 231, 233, 234, 236, 237, 244, 245, 255, 258], "num_class": [2, 33, 34, 124, 125, 126, 127, 128, 129, 130, 131, 132, 156, 157, 158, 159, 160, 161, 162, 163, 164], "4": [2, 4, 5, 7, 8, 9, 109, 122, 133, 138, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 185, 186, 187, 194, 196, 199, 202, 203, 209, 212, 227, 236, 237, 244, 251, 257, 261, 263], "latent_s": [2, 36, 37], "fc": 2, "out_featur": 2, "ident": 2, "save_weights_onli": 2, "mode": [2, 11, 33, 34, 36, 37, 38, 134], "max": [2, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 181, 182], "monitor": [2, 33, 34, 36, 37], "val_acc_top5": 2, "logging_interv": 2, "epoch": [2, 8, 33, 34, 36, 37], "trainer_param": 2, "default_root_dir": 2, "acceler": [2, 33, 34, 36, 37], "max_epoch": [2, 33, 34, 36, 37], "lr": [2, 8, 33, 34, 36, 37], "5e": 2, "temperatur": [2, 33, 34, 36, 37], "07": 2, "weight_decai": [2, 8, 33, 34, 36, 37], "1e": [2, 8, 194, 199, 261], "random_st": [2, 22, 27, 33, 34, 36, 37], "42": [2, 4, 6, 8, 198, 199, 202, 211, 212, 231, 236, 243, 244, 255, 260, 261], "print": [2, 4, 5, 6, 8, 46, 50, 64, 109, 111, 123, 124, 133, 145, 147, 156, 210, 223, 226, 227, 228, 229, 242, 246, 250, 251, 252, 253], "found": [2, 5, 16, 17, 18, 19, 20, 33, 34, 36, 37, 65], "pretrain": [2, 36, 37], "weight_fil": [2, 48, 66], "fitted_": 2, "fit": [2, 22, 27, 33, 34, 36, 37, 65], "deploi": 2, "downstream": [2, 36, 37], "task": [2, 36, 37], "see": [2, 16, 17, 18, 19, 20, 36, 37, 38, 62, 76, 82, 97, 98, 218, 220], "well": [2, 36, 37], "littl": 2, "verifi": [2, 65], "whether": [2, 48, 66], "represent": [2, 36, 37, 76, 82, 106, 120, 121, 123, 143, 144, 145, 205, 231, 239, 255, 257], "featur": [2, 10, 36, 37, 95, 110, 122, 134, 135, 136, 137, 138, 139, 140, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187], "word": 2, "singl": [2, 16, 19, 33, 34, 36, 37, 262], "map": [2, 5, 6, 17, 20, 36, 37, 173, 174, 177, 184, 185, 189, 190, 196, 209, 230, 254], "predict": [2, 14, 22, 27, 33, 34, 36, 37, 111, 124, 147, 156], "base": [2, 10, 14, 18, 19, 20, 22, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 67, 71, 79, 80, 81, 82, 84, 109, 133, 167, 178, 194, 214, 224, 225, 230, 247, 248, 254], "network": [2, 36, 37, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "chang": [2, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "dure": [2, 33, 34, 36, 37, 74, 80], "process": [2, 11, 33, 34, 36, 37, 109, 133], "h": [2, 36, 37, 105, 146], "necessari": 2, "further": [2, 10], "worri": 2, "too": 2, "about": [2, 38, 231, 255], "veri": [2, 5, 33, 34, 36, 37], "few": 2, "henc": 2, "expect": [2, 8, 16, 17, 18, 19, 20, 38, 97, 98], "even": [2, 48, 66], "assum": [2, 71, 72, 84, 85, 194], "alreadi": [2, 48, 66], "been": [2, 33, 34, 36, 37], "vector": [2, 36, 37, 224, 247], "dynam": [2, 38, 40, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "so": [2, 5, 33, 34, 36, 37], "here": [2, 5, 33, 34, 36, 37, 38, 218, 220], "within": [2, 136, 172, 173, 174, 183, 184, 185], "second": [2, 4, 5, 6, 7, 8, 33, 34, 36, 37], "did": [2, 5], "ani": [2, 33, 34, 36, 37, 97, 98, 210, 242], "signific": 2, "gain": 2, "test": [2, 5, 8, 14], "while": [2, 5, 33, 34, 36, 37, 136, 172, 173, 174, 183, 184, 185], "800": 2, "64": [2, 4, 107, 108, 120, 121, 123, 141, 142, 143, 144, 145], "scale_transform": 2, "train_img_data": 2, "test_img_data": 2, "number": [2, 5, 33, 34, 44, 45, 70, 71, 74, 80, 83, 84, 88, 89, 92, 96, 99, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178, 189, 190, 198, 202, 203, 212, 223, 226, 227, 228, 230, 236, 237, 244, 246, 250, 251, 252, 254, 260], "len": [2, 4, 5, 6, 8, 33, 34, 36, 37, 122, 123, 124, 138, 145, 156, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 204, 223, 228, 238, 246, 252], "froozen": 2, "e": [2, 6, 11, 33, 34, 36, 37, 38, 41, 198, 260], "output": [2, 22, 27, 33, 34, 36, 37, 38, 41, 47, 49, 73, 74, 79, 80, 107, 110, 122, 134, 135, 136, 137, 138, 139, 140, 141, 146, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 213, 214], "new_model": 2, "sequenti": [2, 224, 247], "normal_": 2, "mean": [2, 33, 34, 36, 37, 42, 122, 134, 138, 171, 182, 211, 243], "std": 2, "01": [2, 9, 263], "bia": [2, 167, 178], "zero_": 2, "requires_grad_": 2, "final": [2, 8, 122, 138], "evalu": [2, 6, 177], "everi": [2, 33, 34, 36, 37, 136, 172, 173, 174, 183, 184, 185, 201, 235], "earli": 2, "stop": [2, 33, 34, 36, 37, 224, 247], "low": [2, 89], "frequenc": [2, 33, 34, 36, 37], "ensur": [2, 93], "despit": 2, "thei": [2, 5, 8, 47, 49], "smaller": 2, "20": [2, 4, 6, 7, 8, 71, 84], "50": [2, 4], "200": 2, "give": [2, 10], "intuit": 2, "transfer": 2, "recognit": 2, "like": [2, 33, 34, 36, 37, 38, 136], "classif": [2, 6, 8, 96, 99, 100, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "test_load": 2, "val_acc": [2, 33, 34, 36, 37], "check_val_every_n_epoch": [2, 33, 34, 36, 37], "3": [2, 4, 5, 7, 8, 9, 38, 47, 49, 62, 73, 74, 76, 79, 80, 82, 96, 97, 98, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 137, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 195, 196, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 260, 261, 263], "pred": [2, 8, 33, 34], "shape": [2, 5, 6, 8, 111, 122, 123, 124, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 210, 211, 226, 242, 243, 250], "acc": [2, 33, 34, 36, 37], "argmax": [2, 8, 33, 34, 36, 37], "float": [2, 4, 8, 33, 34, 36, 37, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 103, 104, 136, 189, 190, 192, 193, 194, 197, 199, 259, 261], "accuraci": [2, 8, 33, 34, 36, 37], "2f": 2, "_pretrained_filenam": 2, "path": [2, 16, 17, 19, 20, 38, 48, 66, 73, 74, 79, 80, 110, 122, 137, 138, 214, 215, 219, 221, 222, 224, 233, 234, 247], "join": 2, "isfil": 2, "save": [2, 38, 221, 222], "state_dict": 2, "one": [2, 5, 33, 34, 36, 37, 38, 74, 80, 87, 94, 107, 136, 141, 172, 173, 174, 183, 184, 185, 199, 261], "would": [2, 36, 37], "improv": 2, "classifi": [2, 23, 28], "60": [2, 4], "correctli": 2, "quit": 2, "impress": 2, "consid": [2, 5, 16, 17, 18, 19, 20, 74, 80, 97, 98, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178], "dimension": [2, 36, 37], "With": 2, "achiev": 2, "80": [2, 4], "increas": [2, 212, 244], "suggest": 2, "exponenti": 2, "could": [2, 5, 33, 34, 36, 37], "finetun": [2, 36, 37], "adapt": [2, 74, 80, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "indic": [2, 22, 27, 33, 34, 36, 37, 71, 84, 134, 139, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 194, 202, 203, 204, 205, 211, 212, 224, 230, 236, 237, 238, 239, 243, 244, 247, 254, 256], "advantag": 2, "straightforward": 2, "It": [2, 10, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "clear": 2, "its": [2, 33, 34, 36, 37, 59, 60, 214, 224, 247], "count": 2, "1000": 2, "fair": 2, "ones": 2, "becaus": [2, 5, 36, 37], "distribut": [2, 36, 37, 108, 123, 142, 145], "notic": 2, "ad": [2, 110, 122, 137, 138], "restrict": 2, "oper": [2, 33, 34, 36, 37, 136], "125": 2, "1250": 2, "done": [2, 214], "recogn": 2, "object": [2, 38, 41, 47, 49, 64, 83, 92, 189, 190, 213, 214], "check": [2, 14, 16, 19, 22, 27, 38, 62, 63, 64, 65], "patch": [2, 36, 37, 74, 80, 97, 98, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 225, 230, 232, 248, 254], "belong": 2, "chosen": 2, "weaker": 2, "function": [2, 5, 6, 8, 10, 12, 14, 16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 73, 74, 76, 78, 79, 80, 82, 83, 87, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 105, 106, 107, 108, 110, 120, 121, 122, 136, 137, 138, 141, 142, 143, 144, 146, 165, 172, 173, 174, 177, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "almost": [2, 6], "strongli": 2, "iter": [2, 33, 34, 36, 37, 146], "train_transform": 2, "sigma": [2, 4, 73, 74, 75, 79, 80, 81], "train_img_aug_data": 2, "2e": 2, "scratch": 2, "73": [2, 4], "7": [2, 4, 224, 247], "less": 2, "leverag": 2, "amount": 2, "generaliz": 2, "sole": 2, "par": 2, "tenth": 2, "experiment": [2, 38], "limit": 2, "recent": 2, "work": [2, 5, 16, 19, 33, 34, 36, 37, 38, 146], "ting": 2, "chen": 2, "et": [2, 36, 37, 110, 122, 137, 138], "al": [2, 36, 37, 110, 122, 137, 138], "trend": 2, "imagenet": 2, "seem": [2, 5], "stronger": 2, "come": [2, 36, 37], "close": [2, 5], "approach": [2, 11], "combin": [2, 71, 84], "beyond": 2, "khosla": 2, "moreov": 2, "last": [2, 107, 141], "year": 2, "great": [2, 36, 37], "includ": [2, 10, 16, 17, 18, 19, 20, 33, 34, 36, 37, 95, 97, 98], "distil": 2, "byol": 2, "redund": 2, "reduct": 2, "barlow": 2, "twin": 2, "There": 2, "explor": 2, "domain": [2, 4], "step": [2, 8, 33, 34, 36, 37, 110, 122, 137, 138], "ahead": 2, "memori": [2, 4, 5, 6, 7, 8, 17, 20, 214], "usag": [2, 4, 5, 6, 7, 8], "ipynb": [2, 4, 5, 6, 7, 8, 218, 220], "credit": [4, 5, 6, 7, 8], "grigi": [4, 6, 7, 8], "c": [4, 5, 7, 47, 49, 105, 201, 204, 224, 225, 235, 238, 247, 248], "ambrois": [4, 5], "numpi": [4, 5, 6, 8, 16, 17, 18, 19, 20, 192, 193, 197, 259], "np": [4, 5, 6, 8, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 195, 208, 211, 243], "surfifi": [4, 5, 6, 7, 8, 9, 10, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263], "min_depth_to_get_n_neighbor": [4, 10, 67, 191, 223, 246], "plot": [4, 5, 6, 7, 8, 10, 67, 189, 190, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "plot_trisurf": [4, 5, 6, 7, 8, 10, 67, 188, 189, 190, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 224, 225, 230, 231, 235, 236, 237, 238, 242, 243, 244, 247, 248, 254, 255, 260, 261], "interv": [4, 10, 33, 34, 36, 37, 67, 69, 83, 86, 89, 92], "vertic": [4, 5, 7, 71, 72, 73, 74, 76, 79, 80, 82, 84, 85, 96, 99, 100, 101, 109, 122, 133, 138, 167, 168, 178, 179, 189, 190, 195, 196, 198, 199, 201, 202, 203, 205, 208, 209, 210, 211, 212, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 260, 261], "triangl": [4, 5, 7, 73, 74, 76, 79, 80, 82, 109, 122, 133, 138, 189, 190, 195, 196, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 216, 217, 221, 222, 224, 225, 229, 230, 231, 232, 235, 236, 237, 238, 239, 242, 243, 244, 247, 248, 253, 254, 255, 256, 257, 261], "order": [4, 5, 6, 7, 8, 22, 27, 38, 97, 98, 107, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 194, 195, 196, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 260, 261], "neigh": [4, 7, 73, 74, 79, 80, 172, 183, 204, 205, 224, 225, 231, 232, 238, 239, 247, 248, 255], "direct_neighbor": [4, 7, 167, 169, 170, 171, 175, 178, 180, 181, 182, 186, 204, 224, 230, 232, 238, 247, 254], "max_depth": 4, "ceil": 4, "displai": [4, 6, 7, 8, 10, 38, 54, 61, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200], "aug": 4, "add_axi": 4, "alpha": [4, 5, 189, 190, 192, 193, 196, 197, 209, 259], "arg": [4, 33, 34, 36, 37, 78, 91, 123, 145], "kwarg": [4, 22, 27, 33, 34, 36, 37, 47, 49, 78, 91, 123, 145], "data": [4, 8, 10, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 44, 45, 48, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 195, 198, 201, 202, 208, 211, 212, 214, 215, 218, 220, 231, 233, 234, 235, 236, 243, 244, 255, 260], "fig": [4, 5, 7, 189, 190, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "ax": [4, 5, 6, 7, 174, 185, 189, 190, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "subplot": [4, 5, 7, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "subplot_kw": [4, 5, 7, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "3d": [4, 5, 7, 196, 201, 204, 207, 209, 210, 224, 225, 230, 235, 238, 241, 242, 247, 248, 254], "aspect": [4, 5, 7, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "auto": [4, 5, 7, 38, 42, 102, 106, 196, 201, 204, 209, 210, 224, 225, 230, 235, 238, 242, 247, 248, 254], "flatten": [4, 6, 177], "colorbar": [4, 7, 189, 190, 196, 201, 203, 204, 209, 210, 224, 225, 230, 235, 237, 238, 242, 247, 248, 254], "edgecolor": [4, 5, 189, 190, 196, 209], "white": [4, 75, 81], "linewidth": [4, 7, 189, 190], "red": [4, 7, 201, 204, 224, 225, 235, 238, 247, 248], "blue": [4, 5, 7, 196, 204, 209, 224, 225, 238, 247, 248], "green": [4, 5, 7, 196, 209], "_textur": 4, "tight_layout": 4, "arrai": [4, 5, 16, 17, 18, 19, 20, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 91, 93, 96, 97, 98, 99, 100, 101, 134, 139, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 194, 195, 196, 198, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 221, 222, 224, 225, 229, 230, 231, 235, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 253, 254, 255, 256, 257, 260, 261], "patch_siz": [4, 74, 80], "int": [4, 16, 19, 22, 27, 33, 34, 36, 37, 38, 44, 45, 71, 72, 74, 80, 83, 84, 85, 86, 92, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 194, 195, 198, 202, 203, 204, 207, 208, 210, 212, 223, 224, 225, 226, 227, 228, 230, 236, 237, 238, 241, 242, 244, 246, 247, 248, 250, 251, 252, 254, 256, 260], "n_patch": [4, 74, 80], "uniform": 4, "phi": [4, 76, 82], "180": 4, "theta": [4, 76, 82], "psi": [4, 76, 82], "controlateral_textur": 4, "prob": [4, 71, 72, 84, 85, 86], "n_vertic": [4, 6, 8, 71, 72, 84, 85, 86, 100, 101, 120, 121, 123, 143, 144, 145, 202, 212, 223, 226, 227, 228, 231, 236, 244, 246, 250, 251, 252, 255], "controlateral_data": [4, 72, 85], "group_textur": 4, "group_data": [4, 71, 84], "n_sampl": [4, 6, 8, 71, 84, 96, 99, 100, 101, 198, 199, 201, 202, 211, 212, 231, 235, 236, 243, 244, 255, 260, 261], "neigh_ind": [4, 71, 84], "groupbi": [4, 71, 84], "n_neighbor": [4, 71, 84], "n_compon": [4, 71, 84], "30": [4, 8, 71, 84], "58": 4, "74": 4, "49": 4, "62": 4, "47": 4, "15": [4, 8], "99": [4, 8], "92": 4, "54": 4, "65": [4, 6], "31": 4, "14": 4, "78": 4, "90": [4, 6, 9, 263], "76": 4, "93": 4, "21": [4, 9, 263], "70": 4, "22": 4, "46": 4, "89": 4, "25": [4, 8], "82": 4, "11": [4, 5], "59": 4, "56": 4, "12": [4, 5, 224, 247], "19": 4, "13": [4, 7], "23": 4, "28": 4, "51": 4, "79": [4, 5, 9, 263], "16": [4, 33, 34, 36, 37, 173, 174, 184, 185], "17": 4, "77": 4, "88": 4, "52": 4, "95": 4, "48": 4, "72": 4, "66": 4, "24": [4, 5], "69": 4, "86": 4, "26": 4, "27": 4, "29": [4, 5], "83": 4, "63": 4, "36": 4, "32": [4, 110, 122, 123, 136, 137, 138, 145], "33": 4, "34": 4, "39": 4, "35": [4, 8], "37": 4, "38": 4, "45": [4, 231, 255], "71": 4, "40": [4, 6, 7, 8, 96, 99, 100, 101], "41": 4, "81": 4, "43": 4, "44": 4, "87": 4, "98": 4, "97": 4, "53": 4, "68": 4, "55": 4, "57": 4, "61": 4, "94": 4, "67": 4, "75": 4, "84": 4, "85": 4, "91": 4, "aug1": 4, "aug2": 4, "aug3": 4, "tran": 4, "regist": [4, 70, 77, 88, 90, 136, 172, 173, 174, 183, 184, 185], "probabl": [4, 70, 71, 72, 84, 85, 86, 88], "script": [4, 5, 6, 7, 8], "minut": [4, 5, 6, 7, 8], "228": [4, 9, 263], "110": [4, 9, 263], "plot_augment": [4, 9, 263], "math": 5, "warn": [5, 33, 34, 36, 37, 38, 58], "scipi": [5, 196, 209], "spatial": [5, 196, 209], "mpl_toolkit": 5, "mplot3d": 5, "axes3d": [5, 189, 190], "ico2ico": [5, 10, 67, 191, 196, 199, 209, 261], "build": [5, 7, 38, 73, 74, 79, 80, 83, 92, 109, 133, 224, 225, 230, 232, 233, 234, 245, 247, 248, 254, 257], "refer": [5, 10, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "vertices_norm": 5, "triangles_norm": 5, "standard_ico": [5, 6, 8, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 196, 199, 209, 210, 230, 242, 254, 261], "642": [5, 6, 8], "1280": [5, 6, 8], "Then": 5, "fetch": [5, 10, 38, 95, 233, 234], "freesurf": [5, 109, 133, 216, 221, 230, 233, 254], "try": 5, "find": [5, 38, 194, 196, 201, 204, 209, 211, 235, 238, 243, 245], "optim": [5, 8, 33, 34, 36, 37, 38], "rotat": [5, 76, 82, 196, 205, 209, 231, 239, 255], "modul": [5, 10, 13, 21, 22, 27, 33, 34, 36, 37, 38, 40, 48, 66, 67, 68, 69, 73, 79, 107, 108, 110, 120, 121, 122, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "rmse": 5, "align_vector": 5, "54571598073452": 5, "okai": 5, "doe": [5, 36, 37], "suppos": 5, "equal": 5, "zero": [5, 6, 36, 37, 74, 80, 111, 122, 123, 124, 138, 139, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 208], "issu": [5, 41], "matric": 5, "That": 5, "previou": 5, "algorithm": 5, "properli": 5, "correspond": [5, 33, 34, 36, 37, 71, 72, 84, 85, 194, 199, 226, 250, 261], "row": [5, 73, 74, 79, 80, 224, 247], "matrix": [5, 71, 84], "52573111": 5, "85065081": 5, "96386126": 5, "2664047": 5, "91298249": 5, "39960705": 5, "08232358": 5, "8944": 5, "4472": 5, "2764": 5, "8507": 5, "1815": 5, "296": 5, "9378": 5, "0272": 5, "3462": 5, "0692": 5, "213": 5, "9746": 5, "sufac": [5, 10, 166, 191], "togeth": 5, "place": [5, 42], "comput": [5, 33, 34, 36, 37, 105, 136, 146, 172, 173, 174, 183, 184, 185, 205, 214, 231, 239, 240, 255], "small": [5, 36, 37], "subset": [5, 97, 98], "point": [5, 7, 201, 204, 207, 211, 224, 225, 230, 235, 238, 240, 241, 243, 245, 247, 248, 254], "both": [5, 36, 37, 174, 185, 224, 247], "absolut": [5, 38, 41], "valu": [5, 14, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 47, 49, 62, 64, 73, 74, 79, 80, 97, 98, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 189, 190, 192, 193, 194, 211, 224, 243, 247], "sign": [5, 196, 209], "vertices_of_interest_norm": 5, "search": [5, 204, 224, 238, 247], "coords_of_interest": 5, "idx_of_interest": 5, "ab": 5, "sum": [5, 8, 33, 34, 36, 37], "vertices_of_interest": 5, "fs_row_idx": 5, "break": 5, "possibl": [5, 33, 34, 36, 37, 48, 66], "depend": 5, "various": 5, "until": 5, "itertool": 5, "n_permut": 5, "factori": 5, "best_rms": 5, "best_rot": 5, "catch_warn": 5, "simplefilt": 5, "ignor": [5, 22, 27, 136, 172, 173, 174, 183, 184, 185], "categori": 5, "userwarn": [5, 16, 17, 18, 19, 20], "format": [5, 8, 14, 200, 216, 217, 221, 222], "as_matrix": 5, "52575203": 5, "85063788": 5, "971395685383565e": 5, "05": [5, 9, 263], "simpli": [5, 33, 34, 36, 37], "solv": 5, "outlin": 5, "proper": [5, 16, 17, 19, 20], "anoth": 5, "half": 5, "clearli": 5, "appear": 5, "opt": 5, "hostedtoolcach": 5, "x64": 5, "lib": 5, "python3": 5, "site": 5, "coord": [5, 10, 67, 193, 194, 195, 196, 197, 198, 199], "246": 5, "closest": [5, 205, 239], "9190925817849288": 5, "420": [5, 9, 263], "plot_match_icosahedron": [5, 9, 263], "convert": [6, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 137, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 195, 198, 208, 260], "onto": [6, 198, 199, 260, 261], "spheric": [6, 9, 102, 103, 104, 106, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 177, 184, 185, 191, 192, 193, 195, 197, 198, 207, 208, 224, 241, 247, 259, 260, 263], "evenli": [6, 198, 260], "resampl": [6, 198, 260], "respect": [6, 177, 198, 260], "sin": [6, 198, 260], "elev": [6, 103, 104, 107, 108, 111, 123, 124, 141, 142, 145, 147, 156, 177, 192, 193, 197, 198, 259, 260], "azimuth": [6, 103, 104, 107, 108, 111, 123, 124, 141, 142, 145, 147, 156, 177, 192, 193, 197, 198, 259, 260], "vice": 6, "versa": 6, "dataset": [6, 10, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 67, 96, 97, 98, 99, 100, 101, 188, 198, 199, 202, 211, 212, 231, 236, 243, 244, 255, 260, 261], "ico_ord": [6, 8, 97, 98], "n_class": [6, 8, 96, 99, 100, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 198, 199, 202, 211, 212, 231, 236, 243, 244, 255, 260, 261], "ico_vertic": [6, 8, 96, 99, 100, 101], "ico_triangl": [6, 8], "_": [6, 36, 37, 170, 171, 181, 182, 218, 220], "make_classif": [6, 8, 10, 67, 95, 100, 101, 198, 199, 202, 211, 212, 231, 236, 243, 244, 255, 260, 261], "seed": [6, 8, 33, 34, 36, 37, 96, 99, 100, 101, 198, 199, 202, 211, 212, 231, 236, 243, 244, 255, 260, 261], "proj_textur": 6, "text2grid": [6, 10, 67, 191, 192, 193, 195, 197, 198, 208, 259, 260], "proj": [6, 195, 198, 208, 260], "lower": [6, 202, 233, 236], "nearest": [6, 71, 84, 122, 138, 139, 195, 198, 201, 208, 211, 235, 243, 260], "192": [6, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 137, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 195, 198, 208, 260], "text": [6, 7, 33, 34, 36, 37, 46, 54, 59, 60, 61], "grid2text": [6, 10, 67, 191, 192, 193, 195, 197, 198, 208, 259, 260], "is_label": [6, 8, 189, 190, 195, 199, 202, 208, 211, 212, 231, 236, 243, 244, 255, 261], "enabl": [6, 33, 34, 36, 37, 38, 47, 49], "scatter_dens": 6, "y": [6, 8, 33, 34, 36, 37, 100, 101, 192, 193, 195, 197, 198, 199, 202, 208, 211, 212, 231, 236, 243, 244, 255, 259, 260, 261], "labelx": 6, "labe": 6, "scatter": [6, 7, 201, 204, 224, 225, 230, 235, 238, 247, 248, 254], "densiti": [6, 207, 225, 241, 248], "left": [6, 103, 104, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 215], "width": [6, 189, 190], "bottom": 6, "height": [6, 146], "005": 6, "rect_scatt": 6, "rect_histx": 6, "rect_histi": 6, "ax_scatt": 6, "tick_param": 6, "direct": [6, 36, 37, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178, 198, 224, 247, 260], "top": [6, 36, 37], "right": [6, 36, 37, 103, 104, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 215], "set_xlabel": 6, "set_ylabel": 6, "ax_histx": 6, "ax_histi": 6, "bin": 6, "hist": 6, "orient": 6, "set_xlim": 6, "get_xlim": 6, "set_ylim": 6, "get_ylim": 6, "radiu": [6, 192, 193, 197, 259], "cart2sph": [6, 10, 67, 191, 192, 193, 197, 259], "sin_elev": 6, "circularli": [6, 177], "continu": [6, 177], "circular": [6, 173, 174, 177, 184, 185], "pad": [6, 122, 138, 139, 168, 173, 174, 177, 179, 184, 185], "boundari": [6, 177], "expand_dim": 6, "astyp": 6, "float32": 6, "from_numpi": 6, "pad_textur": 6, "circular_pad": [6, 10, 67, 166, 177], "padd": 6, "conv": [6, 110, 122, 134, 135, 136, 137, 138, 139, 140, 167, 178], "conv2d": [6, 146], "in_channel": [6, 8, 110, 122, 136, 137, 138], "out_channel": [6, 8, 110, 122, 136, 137, 138], "stride": [6, 173, 174, 184, 185], "conv_textur": 6, "194": [6, 111, 112, 113, 114, 115, 116, 117, 118, 119, 147, 148, 149, 150, 151, 152, 153, 154, 155, 173, 184], "677": [6, 9, 263], "plot_project_textur": [6, 9, 263], "get_rectangular_project": [7, 10, 67, 191, 207, 241], "depth": [7, 8, 110, 122, 136, 137, 138, 167, 169, 170, 171, 175, 178, 180, 181, 182, 186, 204, 223, 224, 227, 238, 246, 247, 251], "vidx": 7, "cnt": [7, 201, 204, 224, 225, 230, 235, 238, 247, 248, 254], "enumer": [7, 8, 201, 204, 224, 225, 230, 235, 238, 247, 248, 254], "marker": [7, 201, 204, 224, 225, 230, 235, 238, 247, 248, 254], "str": [7, 16, 17, 18, 19, 20, 22, 27, 36, 37, 38, 39, 41, 48, 63, 65, 66, 71, 73, 74, 76, 79, 80, 82, 84, 97, 98, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 182, 200, 205, 214, 215, 216, 217, 219, 221, 222, 231, 233, 234, 239, 255, 258], "3x3": [7, 110, 122, 137, 138], "rectangular": [7, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 207, 225, 241, 248], "sphere": [7, 134, 139, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 207, 225, 229, 240, 241, 245, 248, 249, 253], "zoom": [7, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 183, 204, 207, 225, 238, 241, 248], "orang": 7, "purpl": 7, "brown": 7, "pink": 7, "grai": 7, "oliv": 7, "cyan": 7, "yellow": 7, "tan": 7, "salmon": 7, "violet": 7, "steelblu": 7, "lime": 7, "navi": 7, "node": [7, 74, 80, 167, 178, 204, 207, 238, 241, 257], "node_rec_neigh": 7, "node_tplane_neigh": 7, "234": [7, 9, 263], "196": [7, 9, 263], "plot_spherical_neighbor": [7, 9, 263], "sphericalunet": [8, 10, 67, 106, 110, 122, 136, 137, 138], "genrat": 8, "n_epoch": 8, "surfac": [8, 10, 67, 68, 69, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 137, 138, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 189, 190, 195, 198, 208, 215, 216, 217, 218, 221, 222, 224, 247, 260, 262], "crossentropi": 8, "sgd": [8, 33, 34, 36, 37], "obviou": 8, "classificationdataset": [8, 10, 67, 95, 96, 99], "in_ord": [8, 122, 138], "start_filt": [8, 110, 122, 137, 138], "conv_mod": [8, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "dine": [8, 73, 74, 79, 80, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178, 224, 247], "dine_s": [8, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "up_mod": [8, 122, 138, 139], "transpos": [8, 110, 122, 137, 138, 139, 169, 174, 175, 180, 185, 186], "loss_fn": 8, "crossentropyloss": 8, "momentum": 8, "n_batch": 8, "zero_grad": 8, "backward": [8, 33, 34, 36, 37], "current": [8, 39, 40, 42], "item": [8, 33, 34, 36, 37, 214], "7f": 8, "5d": 8, "eval": [8, 33, 34, 36, 37], "test_loss": 8, "correct": 8, "y_pred": 8, "no_grad": 8, "logit": 8, "softmax": [8, 36, 37], "type": [8, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 76, 82, 83, 92, 122, 138, 139, 171, 182, 205, 224, 231, 239, 247, 255], "append": 8, "concaten": [8, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "error": [8, 33, 34, 36, 37, 62, 65, 213], "n": [8, 48, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 91, 96, 99, 100, 101, 105, 167, 169, 172, 178, 180, 183, 189, 190, 194, 195, 196, 198, 199, 203, 204, 205, 208, 209, 210, 216, 217, 221, 222, 224, 225, 229, 231, 237, 238, 239, 242, 247, 248, 253, 255, 256, 257, 260, 261], "1f": 8, "avg": 8, "8f": 8, "128075": 8, "925515": 8, "757706": 8, "576775": 8, "479808": 8, "398835": 8, "318195": 8, "245157": 8, "005312": 8, "004694": 8, "003669": 8, "002864": 8, "002550": 8, "002517": 8, "002381": 8, "001916": 8, "000007": 8, "000005": 8, "000004": 8, "000003": 8, "000030": 8, "000037": 8, "000046": 8, "000056": 8, "000066": 8, "000073": 8, "000074": 8, "000071": 8, "corresspond": 8, "exactli": 8, "ground": 8, "truth": 8, "205": [8, 9, 263], "295": [8, 9, 263], "plot_unet_segment": [8, 9, 263], "765": [9, 263], "02": [9, 263], "pleas": [10, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "detail": 10, "raw": [10, 215, 218, 220], "mai": 10, "enough": 10, "guidelin": 10, "variou": [10, 46, 146], "help": [10, 46], "develop": [10, 11, 46], "helper": [10, 68], "integr": [10, 68, 136], "pytorch": [10, 33, 34, 36, 37, 68, 107, 108, 120, 121, 141, 142, 143, 144, 200, 262], "artifici": [10, 95], "dedic": [10, 166], "content": [10, 16, 19], "fetch_experi": [10, 12, 38, 67], "filter_config": [10, 12, 39, 67], "get_env": [10, 12, 40, 67], "load_interfac": [10, 12, 41, 67], "update_param": [10, 12, 42, 67], "check_typ": [10, 14, 67], "batchtypingcallback": [10, 13, 14, 22, 27, 67], "baseimagedataset": [10, 15, 16, 19, 67], "basenumpydataset": [10, 15, 17, 20, 67], "basedataset": [10, 15, 18, 67], "baseestim": [10, 21, 22, 27, 67], "classifiermixin": [10, 21, 23, 28, 67], "clustermixin": [10, 21, 24, 29, 67], "regressormixin": [10, 21, 25, 30, 67], "transformermixin": [10, 21, 26, 31, 67], "logistic_regress": [10, 34, 67], "bunch": [10, 38, 47, 49, 67], "print_multicolor": [10, 46, 54, 61, 67], "attr": [10, 46, 51, 63, 67], "fg": [10, 46, 52, 67], "hex": [10, 46, 53, 67], "print_result": [10, 46, 55, 67], "print_subtitl": [10, 46, 56, 67], "print_titl": [10, 46, 57, 67], "print_warn": [10, 46, 58, 67], "random_styl": [10, 46, 59, 67], "styliz": [10, 46, 60, 67], "_availableifdescriptor": [10, 46, 62, 67], "_estimator_i": [10, 46, 63, 67], "available_if": [10, 46, 64, 67], "check_is_fit": [10, 46, 65, 67], "basetransform": [10, 67, 69, 70, 78, 88, 91], "groupmixup": [10, 67, 69, 71, 84], "hemimixup": [10, 67, 69, 72, 85], "surfblur": [10, 67, 69, 73, 79], "surfcutout": [10, 67, 69, 74, 80], "surfnois": [10, 67, 69, 75, 81], "surfrot": [10, 67, 69, 76, 82], "apply_chained_transform": [10, 67, 69, 78, 91], "multichannel_augment": [10, 67, 69, 87, 94], "mixup": [10, 67, 84, 85, 86], "mixupaugment": [10, 67, 69, 86], "randomaugment": [10, 67, 69, 70, 87, 88, 89, 94], "listifi": [10, 67, 69, 93], "genericsurfdataset": [10, 67, 95, 97, 98], "_samples_gener": [10, 67, 99, 100], "_gener": [10, 67, 98], "sphericalvaeloss": [10, 67, 102, 103, 104], "vae": [10, 67, 103, 104, 105, 123, 141, 142, 143, 144, 145, 146], "log_likelihood": [10, 67, 102, 105], "hemifusiondecod": [10, 67, 106, 107, 141], "hemifusionencod": [10, 67, 106, 108, 142], "sphericalbas": [10, 67, 106, 109, 133], "sphericalgunet": [10, 67, 106, 110, 122, 136, 137, 138], "sphericalgvgg": [10, 67, 106, 111, 124, 147, 156], "sphericalgvgg11": [10, 67, 106, 111, 112, 147, 148], "sphericalgvgg11bn": [10, 67, 106, 113, 149], "sphericalgvgg13": [10, 67, 106, 114, 150], "sphericalgvgg13bn": [10, 67, 106, 115, 151], "sphericalgvgg16": [10, 67, 106, 116, 152], "sphericalgvgg16bn": [10, 67, 106, 117, 153], "sphericalgvgg19": [10, 67, 106, 118, 154], "sphericalgvgg19bn": [10, 67, 106, 119, 155], "sphericalhemifusiondecod": [10, 67, 106, 120, 143], "sphericalhemifusionencod": [10, 67, 106, 121, 144], "sphericalva": [10, 67, 106, 123, 145], "sphericalvgg": [10, 67, 106, 111, 124, 147, 156], "sphericalvgg11": [10, 67, 106, 124, 125, 156, 157], "sphericalvgg11bn": [10, 67, 106, 126, 158], "sphericalvgg13": [10, 67, 106, 127, 159], "sphericalvgg13bn": [10, 67, 106, 128, 160], "sphericalvgg16": [10, 67, 106, 129, 161], "sphericalvgg16bn": [10, 67, 106, 130, 162], "sphericalvgg19": [10, 67, 106, 131, 163], "sphericalvgg19bn": [10, 67, 106, 132, 164], "compute_output_dim": [10, 67, 106, 146], "vgg": [10, 67, 111, 124, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "class_factori": [10, 67, 106, 165], "downblock": [10, 67, 106, 134], "downgblock": [10, 67, 106, 135], "graphicalunet": [10, 67, 106, 136], "upblock": [10, 67, 106, 139], "upgblock": [10, 67, 106, 140], "icodineconv": [10, 67, 73, 79, 166, 167, 172, 173, 178, 183, 184], "icofixindexupsampl": [10, 67, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 185, 186, 187], "icogenericupconv": [10, 67, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 185, 186, 187], "icomaxindexupsampl": [10, 67, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 185, 186, 187], "icopool": [10, 67, 166, 170, 171, 181, 182], "icorepaconv": [10, 67, 166, 167, 172, 173, 178, 183, 184], "icospmaconv": [10, 67, 146, 166, 167, 172, 173, 178, 183, 184], "icospmaconvtranspos": [10, 67, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 185, 186, 187], "icoupconv": [10, 67, 166, 168, 169, 170, 175, 176, 179, 180, 181, 186, 187], "icoupsampl": [10, 67, 166, 168, 169, 170, 174, 175, 176, 179, 180, 181, 185, 186, 187], "debug_msg": [10, 67, 191, 200], "downsampl": [10, 67, 97, 98, 109, 133, 134, 135, 139, 169, 170, 171, 175, 180, 181, 182, 186, 191, 201, 202, 203, 211, 212, 233, 235, 236, 237, 243, 244], "downsample_data": [10, 67, 191, 201, 202, 203, 211, 212, 235, 236, 237, 243, 244], "downsample_ico": [10, 67, 191, 201, 202, 203, 211, 212, 235, 236, 237, 243, 244], "find_neighbor": [10, 67, 191, 204, 238], "find_rotation_interpol_coef": [10, 67, 191, 205, 229, 239, 253], "get_logg": [10, 67, 191, 206], "interpol": [10, 67, 76, 82, 122, 138, 139, 168, 176, 179, 187, 189, 190, 191, 195, 198, 201, 202, 203, 205, 208, 211, 212, 229, 231, 235, 236, 237, 239, 243, 244, 253, 255, 260], "interpolate_data": [10, 67, 191, 201, 202, 203, 211, 212, 235, 236, 237, 243, 244], "neighbors_rec": [10, 67, 172, 183, 191, 204, 224, 225, 238, 247, 248], "number_of_ico_vertic": [10, 67, 191, 226, 228, 250, 252], "number_of_neighbor": [10, 67, 191, 223, 227, 246, 251], "order_of_ico_from_vertic": [10, 67, 191, 226, 228, 250, 252], "order_triangl": [10, 67, 191, 229, 253], "patch_tri": [10, 67, 191, 230, 232, 254], "rotate_data": [10, 67, 76, 82, 191, 205, 231, 239, 255], "setup_log": [10, 67, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 258], "sph2cart": [10, 67, 191, 192, 193, 197, 259], "text2ico": [10, 67, 191, 196, 199, 209, 261], "find_corresponding_ord": [10, 67, 191, 194], "hideprint": [10, 67, 191, 213], "compute_and_stor": [10, 67, 191, 214], "decompose_cifti": [10, 67, 191, 215], "read_freesurf": [10, 67, 191, 216], "read_gifti": [10, 67, 191, 217], "surf_data_from_cifti": [10, 67, 191, 218], "ungzip": [10, 67, 191, 219], "volume_from_cifti": [10, 67, 191, 220], "write_freesurf": [10, 67, 191, 221], "write_gifti": [10, 67, 191, 222], "_patch_tri_it": [10, 67, 191, 232], "build_freesurfer_ico": [10, 67, 191, 233], "build_fslr_ref": [10, 67, 191, 234], "get_angle_with_xaxi": [10, 67, 191, 240], "middle_point": [10, 67, 191, 245], "triangles_to_edg": [10, 67, 191, 256], "vertex_adjacency_graph": [10, 67, 191, 257], "walk": 11, "intal": 11, "offici": 11, "releas": 11, "best": [11, 38, 196, 209], "user": [11, 39, 110, 122, 137, 138, 231, 255], "who": 11, "latest": 11, "contribut": 11, "without": [11, 33, 34, 36, 37, 219], "privileg": 11, "pip": 11, "sudo": 11, "git": 11, "repositori": [11, 48, 66], "github": [11, 106, 218, 220], "com": [11, 106], "deepinsight": 11, "page": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "document": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "explain": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "signatur": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "big": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "pictur": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "rais": [14, 16, 17, 18, 19, 20, 62, 64, 65], "typeerror": [14, 65], "annot": 14, "traiterror": 14, "incorrect": 14, "notimplementederror": 14, "handl": [14, 33, 34, 36, 37, 48, 66], "on_predict_batch_start": 14, "trainer": [14, 22, 27, 33, 34, 36, 37], "pl_modul": 14, "batch_idx": [14, 33, 34, 36, 37], "dataloader_idx": [14, 33, 34, 36, 37], "begin": 14, "on_test_batch_start": 14, "on_train_batch_start": 14, "train": [14, 16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 44, 45, 69, 97, 98], "on_validation_batch_start": 14, "channel": [16, 17, 18, 19, 20, 70, 87, 88, 94, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187], "subject_in_pattern": [16, 19, 97, 98], "target": [16, 17, 18, 19, 20, 97, 98, 196, 199, 209, 261], "target_map": [16, 17, 18, 19, 20, 97, 98], "mask": [16, 17, 18, 19, 20, 86, 97, 98, 103, 104], "withdraw_subject": [16, 17, 18, 19, 20, 97, 98], "scalabl": [16, 19, 97, 98], "neuroimag": [16, 17, 18, 19, 20, 97, 98, 123, 145], "locat": [16, 17, 18, 19, 20, 48, 66, 97, 98, 219], "store": [16, 17, 18, 19, 20, 36, 37, 97, 98, 214, 215, 216, 217, 231, 255], "list": [16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 42, 71, 78, 84, 91, 93, 96, 97, 98, 99, 100, 101, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 202, 203, 204, 211, 212, 236, 237, 238, 243, 244, 256], "default": [16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 41, 44, 45, 48, 65, 66, 70, 71, 73, 74, 76, 79, 80, 82, 83, 84, 87, 88, 92, 94, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 171, 173, 174, 178, 182, 184, 185, 189, 190, 194, 198, 199, 202, 203, 205, 207, 210, 212, 213, 214, 215, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 247, 248, 250, 253, 254, 255, 258, 260, 261], "folder": [16, 19, 76, 82, 97, 98, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "level": [16, 19, 97, 98, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 258], "subject": [16, 17, 18, 19, 20, 71, 72, 84, 85, 97, 98], "identifi": [16, 19, 97, 98, 196, 209], "retriev": [16, 19, 48, 66, 97, 98], "tabular": [16, 17, 18, 19, 20, 97, 98], "dict": [16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 39, 40, 41, 42, 73, 74, 79, 80, 97, 98, 109, 133, 165, 204, 205, 224, 238, 239, 247], "optionali": [16, 17, 18, 19, 20, 33, 34, 36, 37, 97, 98, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "dictionari": [16, 17, 18, 19, 20, 33, 34, 36, 37, 47, 49, 50, 73, 74, 79, 80, 97, 98, 224, 247], "specifi": [16, 17, 18, 19, 20, 22, 27, 33, 34, 36, 37, 38, 41, 48, 66, 70, 73, 74, 79, 80, 88, 97, 98, 189, 190, 202, 203, 212, 236, 237, 244], "replac": [16, 17, 18, 19, 20, 42, 74, 80, 97, 98, 110, 122, 137, 138], "exist": [16, 17, 18, 19, 20, 48, 66, 97, 98, 233, 234], "panda": [16, 17, 18, 19, 20, 71, 84, 97, 98], "datafram": [16, 17, 18, 19, 20, 71, 84, 97, 98], "callabl": [16, 17, 18, 19, 20, 64, 97, 98, 214], "optionnali": [16, 17, 18, 19, 20, 73, 74, 79, 80, 87, 94, 97, 98], "remov": [16, 17, 18, 19, 20, 36, 37, 97, 98], "filenotfounderror": [16, 17, 18, 19, 20], "mandatorri": [16, 17, 18, 19, 20], "keyerror": [16, 17, 18, 19, 20], "mandatori": [16, 17, 18, 19, 20], "kei": [16, 17, 18, 19, 20, 33, 34, 36, 37, 38, 47, 49, 73, 74, 79, 80, 109, 133, 224, 247], "miss": [16, 17, 18, 19, 20, 211, 243], "particip": [16, 17, 18, 19, 20, 97, 98], "tsv": [16, 17, 18, 19, 20, 97, 98], "request": [16, 17, 18, 19, 20, 97, 98, 106], "conta": [16, 17, 18, 19, 20, 97, 98], "idea": [16, 19], "your": [16, 18, 19, 33, 34, 36, 37, 38, 48, 59, 60, 66, 262], "rather": [16, 19], "symlink": [16, 19], "aggreg": [16, 19], "enforc": [16, 19, 33, 34, 36, 37], "reproduc": [16, 19, 22, 27, 33, 34, 36, 37], "persist": [16, 19], "get_checksum": [16, 19], "hash": [16, 19, 48, 66], "get_data": [16, 17, 19, 20], "index": [16, 17, 19, 20, 33, 34, 36, 37, 73, 74, 79, 80, 201, 204, 224, 235, 238, 247, 256], "sequenc": [22, 27, 33, 34, 36, 37, 70, 77, 88, 90], "hints_batch": [22, 27], "bool": [22, 27, 48, 63, 66, 70, 87, 88, 94, 97, 98, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 178, 189, 190, 210, 213, 215, 224, 229, 230, 242, 247, 253, 254], "basicali": [22, 27], "lightningmodul": [22, 27, 33, 34, 36, 37], "embed": [22, 27], "child": [22, 27, 38, 87, 94], "inherit": [22, 27, 38], "mixin": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "init": [22, 27, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 96, 99, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 213], "control": [22, 27, 33, 34, 36, 37, 70, 73, 79, 88, 96, 99, 100, 101, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 174, 184, 185, 207, 225, 241, 248], "pass": [22, 27, 33, 34, 36, 37, 64, 136, 172, 173, 174, 183, 184, 185], "across": [22, 27, 71, 72, 84, 85], "multipl": [22, 27, 33, 34, 36, 37, 38, 39, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "attribut": [22, 27, 33, 34, 36, 37, 42, 47, 49, 50, 51, 64, 65], "hint": [22, 27], "runtim": [22, 27], "mechan": [22, 27], "estimator_typ": [23, 24, 25, 26, 28, 29, 30, 31], "tag": [23, 24, 25, 26, 28, 29, 30, 31, 48, 66], "regress": [25, 30], "regressor": [25, 30], "rate": [33, 34, 36, 37, 96, 99, 100, 101], "adam": [33, 34, 36, 37], "decai": [33, 34, 36, 37], "multisteplr": [33, 34], "schedul": [33, 34, 36, 37, 38], "must": [33, 34, 36, 37, 38, 65, 70, 88, 214, 219], "element": [33, 34, 36, 37], "tensor": [33, 34, 36, 37, 103, 104, 105, 107, 108, 111, 120, 121, 123, 124, 139, 141, 142, 143, 144, 145, 147, 156, 177, 200], "variabl": [33, 34, 36, 37, 38, 165], "validation_step_output": [33, 34, 36, 37], "respectivelli": [33, 34, 36, 37], "configure_optim": [33, 34, 36, 37], "choos": [33, 34, 36, 37], "d": [33, 34, 36, 37, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 137, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 173, 174, 177, 184, 185, 195, 198, 208, 260], "But": [33, 34, 36, 37], "gan": [33, 34, 36, 37], "manual": [33, 34, 36, 37], "option": [33, 34, 36, 37, 73, 74, 79, 80, 103, 104, 107, 108, 109, 120, 121, 133, 141, 142, 143, 144, 189, 190, 202, 203, 210, 212, 213, 229, 230, 236, 237, 242, 244, 253, 254], "tupl": [33, 34, 36, 37, 38, 39, 48, 66, 93, 173, 174, 177, 184, 185], "lr_scheduler_config": [33, 34, 36, 37], "lr_schedul": [33, 34, 36, 37], "whose": [33, 34, 36, 37], "configur": [33, 34, 36, 37, 38, 39, 262], "shown": [33, 34, 36, 37], "unit": [33, 34, 36, 37, 110, 122, 137, 138, 207, 225, 241, 245, 248, 249], "updat": [33, 34, 36, 37, 40], "wherea": [33, 34, 36, 37], "should": [33, 34, 36, 37, 48, 64, 66, 136, 172, 173, 174, 183, 184, 185], "metric": [33, 34, 36, 37, 71, 84], "reducelronplateau": [33, 34, 36, 37], "val_loss": [33, 34, 36, 37], "thu": [33, 34, 36, 37], "produc": [33, 34, 36, 37], "strict": [33, 34, 36, 37], "progress": [33, 34, 36, 37], "keyword": [33, 34, 36, 37], "custom": [33, 34, 36, 37, 65], "log": [33, 34, 36, 37, 103, 104, 105, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 145, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 206, 258], "condit": [33, 34, 36, 37, 62], "lightn": [33, 34, 36, 37, 262], "metric_to_track": [33, 34, 36, 37], "often": [33, 34, 36, 37], "optimizer1": [33, 34, 36, 37], "optimizer2": [33, 34, 36, 37], "scheduler1": [33, 34, 36, 37], "scheduler2": [33, 34, 36, 37], "lambdalr": [33, 34, 36, 37], "made": [33, 34, 36, 37], "metric_v": [33, 34, 36, 37], "thing": [33, 34, 36, 37], "know": [33, 34, 36, 37], "automat": [33, 34, 36, 37, 38, 231, 255], "precis": [33, 34, 36, 37], "lbfg": [33, 34, 36, 37], "closur": [33, 34, 36, 37], "switch": [33, 34, 36, 37], "them": [33, 34, 36, 37, 77, 90, 136, 172, 173, 174, 183, 184, 185, 214, 257], "yourself": [33, 34, 36, 37], "overrid": [33, 34, 36, 37], "optimizer_step": [33, 34, 36, 37], "hook": [33, 34, 36, 37, 136, 172, 173, 174, 183, 184, 185], "on_validation_epoch_end": [33, 34, 36, 37], "loop": [33, 34, 36, 37], "predict_step": [33, 34, 36, 37], "By": [33, 34, 36, 37], "forward": [33, 34, 36, 37, 107, 108, 110, 111, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "add": [33, 34, 36, 37, 40, 75, 81, 174, 185], "logic": [33, 34, 36, 37], "infer": [33, 34, 36, 37], "multi": [33, 34, 36, 37, 87, 94], "prevent": [33, 34, 36, 37], "oom": [33, 34, 36, 37], "basepredictionwrit": [33, 34, 36, 37], "write": [33, 34, 36, 37, 221, 222], "databas": [33, 34, 36, 37], "spawn": [33, 34, 36, 37], "happen": [33, 34, 36, 37], "strategi": [33, 34, 36, 37], "ddp_spawn": [33, 34, 36, 37], "tpu": [33, 34, 36, 37], "core": [33, 34, 36, 37], "won": [33, 34, 36, 37], "mymodel": [33, 34, 36, 37], "dm": [33, 34, 36, 37], "training_step": [33, 34, 36, 37], "addit": [33, 34, 36, 37, 110, 122, 137, 138, 167, 178], "bar": [33, 34, 36, 37], "logger": [33, 34, 36, 37, 206], "skip": [33, 34, 36, 37, 134, 135, 136], "support": [33, 34, 36, 37], "deepspe": [33, 34, 36, 37], "special": [33, 34, 36, 37, 38], "calcul": [33, 34, 36, 37], "fancier": [33, 34, 36, 37], "someth": [33, 34, 36, 37], "z": [33, 34, 36, 37, 107, 108, 123, 141, 142, 145, 192, 193, 195, 197, 198, 208, 259, 260], "out": [33, 34, 36, 37, 74, 80, 93, 111, 122, 123, 124, 138, 145, 147, 156], "super": [33, 34, 36, 37], "automatic_optim": [33, 34, 36, 37], "opt1": [33, 34, 36, 37], "opt2": [33, 34, 36, 37], "decod": [33, 34, 36, 37, 107, 110, 120, 122, 123, 137, 138, 141, 143, 145], "accumulate_grad_batch": [33, 34, 36, 37], "intern": [33, 34, 36, 37], "validation_step": [33, 34, 36, 37], "anyth": [33, 34, 36, 37], "interest": [33, 34, 36, 37, 97, 98, 109, 133], "val": [33, 34, 36, 37], "own": [33, 34, 36, 37], "whatev": [33, 34, 36, 37], "sample_img": [33, 34, 36, 37], "grid": [33, 34, 36, 37, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 195, 198, 207, 208, 225, 241, 248, 260], "add_imag": [33, 34, 36, 37], "example_imag": [33, 34, 36, 37], "labels_hat": [33, 34, 36, 37], "log_dict": [33, 34, 36, 37], "argument": [33, 34, 36, 37, 41, 65, 214, 231, 255], "recommend": [33, 34, 36, 37], "quickli": [33, 34, 36, 37], "tell": [33, 34, 36, 37], "don": [33, 34, 36, 37], "put": [33, 34, 36, 37], "disabl": [33, 34, 36, 37], "At": [33, 34, 36, 37, 122, 138], "goe": [33, 34, 36, 37], "back": [33, 34, 36, 37], "version": [36, 37, 38, 41], "x_i": [36, 37], "x_j": [36, 37], "maxim": [36, 37], "minim": [36, 37, 223, 246], "part": [36, 37], "head": [36, 37], "deep": [36, 37, 262], "cnn": [36, 37, 69], "scnn": [36, 37], "respons": [36, 37], "extract": [36, 37, 219], "denot": [36, 37], "finish": [36, 37], "extractor": [36, 37], "wors": [36, 37], "those": [36, 37, 224, 247], "new": [36, 37, 48, 66, 70, 88, 89, 109, 133, 168, 179], "becom": [36, 37], "invari": [36, 37], "stage": [36, 37], "z_i": [36, 37], "z_j": [36, 37], "therebi": [36, 37], "infonc": [36, 37], "propos": [36, 37], "aaron": [36, 37], "van": [36, 37], "den": [36, 37], "oord": [36, 37], "short": [36, 37], "over": [36, 37], "formal": [36, 37], "written": [36, 37], "ell_": [36, 37], "j": [36, 37], "frac": [36, 37], "exp": [36, 37], "sim": [36, 37], "tau": [36, 37], "sum_": [36, 37], "k": [36, 37, 71, 84, 167, 172, 178, 183, 199, 261], "2n": [36, 37], "mathbb": [36, 37], "kneq": [36, 37], "z_k": [36, 37], "logleft": [36, 37], "determin": [36, 37, 71, 84], "peak": [36, 37], "bound": [36, 37, 83, 92], "balanc": [36, 37], "influenc": [36, 37], "dissimilar": [36, 37], "versu": [36, 37], "cosin": [36, 37], "cdot": [36, 37], "maximum": [36, 37, 189, 190, 230, 254], "minimum": [36, 37, 189, 190], "converg": [36, 37], "around": [36, 37], "exact": [36, 37], "opposit": [36, 37], "flexibl": [36, 37], "altern": [36, 37], "track": [36, 37], "projector": [36, 37], "cosineannealinglr": [36, 37], "auxiliari": [36, 37], "aux": [36, 37], "expfil": 38, "selector": [38, 39], "cv": [38, 42], "logdir": 38, "verbos": 38, "useful": 38, "date": 38, "reus": [38, 231, 255], "section": 38, "descipt": 38, "scaler": 38, "dl": 38, "interfac": [38, 39, 41, 42, 262], "probe": 38, "environ": [38, 39, 40, 42], "fullfil": 38, "constraint": 38, "impos": 38, "interface_occurr": 38, "definit": [38, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 211, 243], "term": [38, 41, 46], "interface_vers": 38, "__version__": 38, "mismatch": 38, "detect": 38, "connot": 38, "previous": 38, "param": [38, 41, 42], "cross": [38, 42, 173, 174, 184, 185], "instanci": 38, "prefix": 38, "filter": [38, 39, 73, 79, 107, 108, 109, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 171, 172, 175, 178, 180, 182, 183, 186], "block": [38, 134, 135, 139, 140], "construct": 38, "hierarch": 38, "properti": [38, 62], "parent": 38, "separ": 38, "form": [38, 48, 66, 71, 84], "architecture_nam": [38, 48, 66], "revis": [38, 48, 66], "hug": [38, 48, 66], "face": [38, 48, 66, 189, 190], "specifid": 38, "machin": [38, 48, 66], "design": 38, "select": [38, 39], "appropri": [38, 39, 65], "scheme": 38, "hyperparapet": 38, "defautl": 38, "coupl": 38, "moment": 38, "dictionarai": 38, "config": 39, "env": [39, 40, 42], "declar": 39, "filter_conf": 39, "updated_env": 40, "environemt": 40, "my_modul": 41, "my_class": 41, "exppect": 41, "module": 41, "cl": 41, "updated_param": 42, "param_set": 42, "equival": [44, 45], "termin": 46, "expos": [47, 49], "access": [47, 49, 165, 214], "value_kei": [47, 49], "b": [47, 49], "avaiabl": [48, 66], "pathlib": [48, 66], "repo": [48, 66], "classmethod": [48, 66, 71, 84, 109, 133], "hf_download": [48, 66], "hf_id": [48, 66], "hf_revis": [48, 66], "force_download": [48, 66], "present": [48, 65, 66], "alwai": [48, 66], "resum": [48, 66], "forc": [48, 66], "id": [48, 66], "commit": [48, 66], "cach": [48, 66, 73, 74, 76, 79, 80, 82, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 214], "hub_split": [48, 66], "hub_nam": [48, 66], "interpret": [48, 66], "hub_id": [48, 66], "hub_revis": [48, 66], "decalr": [48, 66], "ns_download": [48, 66], "ns_id": [48, 66], "reset": [50, 59, 60], "background": 50, "foreground": [50, 52], "reverse_dict": 50, "revers": [50, 107, 141], "alia": [51, 52, 70, 88, 89, 109, 133], "conveni": [59, 60], "style": [59, 60], "ansi": [59, 60], "fn": 62, "attribute_nam": 62, "descriptor": 62, "protocol": 62, "decor": [62, 64, 87, 94, 214, 231, 255], "attributeerror": [62, 64], "falsei": 62, "hasattr": [62, 64], "doc": 62, "org": [62, 218, 220], "howto": 62, "html": 62, "explan": 62, "deleg": 63, "underli": 63, "truthi": 64, "either": [64, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "otherwis": [64, 65], "unavail": 64, "helloifeven": 64, "_x_is_even": 64, "say_hello": 64, "hello": 64, "obj": 64, "msg": [65, 200], "presenc": 65, "trail": 65, "underscor": 65, "except": 65, "messag": [65, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200], "yet": 65, "string": [65, 189, 190], "substitut": 65, "eg": 65, "sparsifi": 65, "fitt": 65, "inspir": 69, "natur": 69, "randomize_per_channel": [70, 87, 88, 94], "field": [70, 73, 79, 88, 89, 109, 133], "tranform": [70, 88, 196, 209], "wise": [70, 88, 122, 138], "randomli": [71, 72, 84, 85], "bootstrap": [71, 84], "measur": [71, 72, 76, 82, 84, 85, 86], "group": [71, 84], "vertex": [71, 72, 73, 74, 79, 80, 84, 85, 122, 138, 224, 225, 231, 247, 248, 249, 255, 256, 257], "hemispher": [71, 72, 84, 85, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "curupt": [71, 72, 84, 85, 86], "cortic": [71, 72, 76, 82, 84, 85, 86, 95, 102, 103, 104, 106, 107, 108, 110, 111, 120, 121, 122, 123, 124, 137, 138, 141, 142, 143, 144, 145, 147, 156], "meta": [71, 84], "regroup": [71, 84], "m": [71, 73, 74, 76, 79, 80, 82, 84, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 189, 190, 203, 210, 216, 217, 221, 222, 224, 229, 237, 242, 247, 253, 257], "pca": [71, 84], "compon": [71, 84, 192, 193, 197, 259], "extern": [71, 84], "distanc": [71, 84, 172, 183], "popul": [71, 84], "bootstap": [71, 84], "arr": [71, 72, 74, 75, 76, 80, 81, 82, 84, 85], "bootsrap": [71, 84], "controlater": [72, 85], "cachedir": [73, 74, 76, 79, 80, 82, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 214], "convolut": [73, 79, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 172, 173, 174, 175, 178, 180, 183, 184, 185, 186], "speed": [73, 79, 109, 133], "recept": [73, 79], "deviat": [73, 75, 79, 81], "kernel": [73, 79, 173, 174, 184, 185, 224, 225, 247, 248], "icosahdron": [73, 74, 76, 79, 80, 82], "neighboor": [73, 74, 79, 80, 189, 190], "sufifi": [73, 74, 79, 80], "ie": [73, 74, 79, 80, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "organ": [73, 74, 79, 80, 215, 224, 247], "ring": [73, 74, 79, 80, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 171, 175, 178, 180, 182, 186, 204, 224, 238, 247], "replacement_valu": [74, 80], "connex": [74, 80], "neighborhood": [74, 80, 134, 139, 167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 207, 223, 225, 241, 246, 248], "ablat": [74, 80], "cutout": [74, 80], "cut": [74, 80], "nois": [75, 81], "barycentr": [76, 82, 205, 229, 231, 239, 253, 255], "angl": [76, 82, 192, 193, 197, 205, 224, 231, 239, 240, 247, 255, 259], "degre": [76, 82, 205, 231, 239, 255], "euler": [76, 82, 205, 231, 239, 255], "smart": [76, 82, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "speedup": [76, 82, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "accordingli": [76, 82], "seri": [78, 91], "n_channel": [78, 91], "_data": [78, 91], "dtype": [83, 89, 92, 195, 208], "uplet": [83, 92, 172, 183, 205, 231, 239, 255], "aplli": 86, "rand_mask": 86, "binari": [86, 103, 104], "corrupt": 86, "multichannel": [87, 94], "multichannelaugment": [87, 94], "applic": [87, 94, 110, 122, 137, 138], "high": 89, "liftifi": 93, "synthet": 95, "gene": [96, 99, 100, 101], "n_max": [97, 98], "target_ico_ord": [97, 98], "regex": [97, 98], "nibabel": [97, 98, 218, 220], "ico": [97, 98, 109, 133, 167, 178], "triangular": [97, 98, 189, 190, 230, 232, 254], "debug": [97, 98, 110, 111, 122, 123, 124, 136, 137, 138, 145, 147, 156, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200], "purpos": [97, 98], "desir": [97, 98, 223, 246], "problem": [100, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "ndarrai": [100, 101, 192, 193, 197, 259], "assocait": [100, 101], "variat": [102, 106, 123, 145], "svae": [102, 123, 145], "beta": [103, 104, 192, 193, 197, 259], "left_mask": [103, 104], "right_mask": [103, 104], "use_ms": [103, 104], "kl": [103, 104], "diverg": [103, 104], "likelihood": [103, 104, 105], "recon": 105, "reconstruct": [105, 107, 123, 141, 145], "w": [105, 146], "relat": [106, 109, 133], "gmvae": 106, "rest": [106, 123, 145], "state": [106, 107, 123, 141, 145], "fmri": [106, 123, 145], "autoencod": [106, 123, 145], "libilab": 106, "rsfmri": 106, "vision": [106, 230, 254], "output_shap": [107, 141, 174, 185], "before_latent_dim": [107, 141], "latent_dim": [107, 108, 120, 121, 123, 141, 142, 143, 144, 145], "conv_flt": [107, 108, 120, 121, 123, 141, 142, 143, 144, 145], "fusion_level": [107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "leakyrelu": [107, 108, 120, 121, 123, 141, 142, 143, 144, 145], "batch_norm": [107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "output_channel": [107, 141], "input_dim": [107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "squar": [107, 141, 146], "convnet": [107, 141, 146], "dens": [107, 141], "pool": [107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 182], "stochast": [107, 123, 141, 145], "left_recon_x": [107, 123, 141, 145], "input_channel": [107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "right_recon_x": [107, 123, 141, 145], "left_x": [108, 111, 120, 121, 123, 124, 142, 143, 144, 145, 147, 156], "right_x": [108, 111, 120, 121, 123, 124, 142, 143, 144, 145, 147, 156], "q": [108, 123, 142, 145], "input_ord": [109, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "n_layer": [109, 133], "repa_s": [109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "repa_zoom": [109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "dynamic_repa_zoom": [109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 143, 144, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "repa": [109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 225, 248], "ico_info": [109, 133], "build_ico_info": [109, 133], "tangent": [109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 183, 207, 224, 240, 241, 247], "factor": [109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 207, 225, 241, 248], "tessal": [109, 133, 210, 230, 242, 254], "tessel": [109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 230, 254], "neighbor_indic": [109, 133, 167, 169, 170, 175, 178, 180, 181, 186], "down_indic": [109, 133, 134, 139, 169, 170, 171, 175, 180, 181, 182, 186, 202, 203, 236, 237], "up_indic": [109, 133, 168, 176, 179, 187, 211, 212, 243, 244], "conv_neighbor_indic": [109, 133], "dictionnari": [109, 133, 214], "icosehedron": [109, 133], "upsampl": [109, 122, 133, 138, 139, 168, 169, 170, 175, 176, 179, 180, 181, 186, 187, 212, 244], "onform": [109, 133], "gride": [110, 111, 135, 137, 140, 147, 195, 208], "net": [110, 122, 136, 137, 138], "built": [110, 122, 137, 138], "upon": [110, 122, 137, 138], "spma": [110, 137], "rectifi": [110, 122, 137, 138], "doubl": [110, 122, 137, 138], "halv": [110, 122, 137, 138], "zhao": [110, 122, 137, 138], "ipmi": [110, 122, 137, 138], "2019": [110, 122, 136, 137, 138], "cfg": [111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "4096": [111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "init_weight": [111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "512": [111, 124, 147, 156], "stand": [111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "wether": [111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "interp": [122, 138, 139], "2x2": [122, 138], "1x1": [122, 138], "maxpad": [122, 138, 139], "shift": [122, 138, 139], "zeropad": [122, 138, 139], "sphericalgva": [123, 145], "2021": [123, 145], "vert": [123, 124, 145, 156], "tri": [123, 124, 145, 156, 232], "reparameter": [123, 145], "reparametr": [123, 145], "trick": [123, 145], "conv_lay": [134, 139], "in_ch": [134, 135, 139, 140], "out_ch": [134, 135, 139, 140], "conv_neigh_indic": [134, 139], "down_neigh_indic": [134, 170, 171, 181, 182], "pool_mod": 134, "bn": [134, 135, 139, 140], "discret": [134, 139, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "hidden_channel": 136, "pool_ratio": 136, "sum_r": 136, "act": 136, "graph": [136, 257], "unpool": 136, "hongyang": 136, "gao": 136, "shuiwang": 136, "ji": 136, "arxiv": 136, "ratio": 136, "connect": [136, 257], "summat": 136, "nonlinear": 136, "edge_index": 136, "overridden": [136, 172, 173, 174, 183, 184, 185], "subclass": [136, 172, 173, 174, 183, 184, 185], "although": [136, 172, 173, 174, 183, 184, 185], "recip": [136, 172, 173, 174, 183, 184, 185], "afterward": [136, 172, 173, 174, 183, 184, 185], "former": [136, 172, 173, 174, 183, 184, 185], "care": [136, 172, 173, 174, 183, 184, 185, 231, 255], "latter": [136, 172, 173, 174, 183, 184, 185], "silent": [136, 172, 173, 174, 183, 184, 185], "neigh_indic": [139, 167, 172, 178, 183], "up_neigh_indic": [139, 168, 169, 170, 175, 176, 179, 180, 181, 186, 187], "upsamp": [139, 140], "upconv": [139, 140], "x1": [139, 140], "x2": [139, 140], "max_pool_indic": [139, 170, 181], "output_dim": 146, "klass_nam": 165, "klass_param": 165, "destination_module_glob": 165, "publicli": 165, "assign": [165, 224, 247], "in_feat": [167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187], "out_feat": [167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187], "formul": [167, 178], "ico2_vertic": [167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187], "ico2_triangl": [167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187], "asarrai": [167, 168, 169, 170, 171, 175, 176, 178, 179, 180, 181, 182, 186, 187, 211, 243], "ico2_x": [167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187], "fix": [168, 179, 189, 190, 249], "ico3_vertic": [168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 186, 187], "ico3_triangl": [168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 186, 187], "ico3_x": [168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 186, 187], "slow": [169, 180], "pooling_typ": [170, 171, 181, 182], "rectagular": [172, 183], "plane": [172, 183, 224, 240, 247], "neigh_weight": [172, 183], "proj_ico_x": [173, 174, 184, 185], "correl": [173, 174, 184, 185], "pad_azimuth": [173, 174, 177, 184, 185], "pad_elev": [173, 174, 177, 184, 185], "zero_pad": [174, 185], "icoconv": [174, 185], "vmin": [189, 190], "vmax": [189, 190], "black": [189, 190], "color_map": [189, 190], "linearsegmentedcolormap": [189, 190], "repres": [189, 190, 256, 257], "opac": [189, 190], "Not": [189, 190], "edg": [189, 190, 256, 257], "line": [189, 190], "cm": [189, 190], "coolwarm": [189, 190], "colormap": [189, 190], "coordin": [191, 192, 193, 195, 196, 197, 198, 208, 209, 233, 249, 259, 260], "system": 191, "tool": [191, 262], "cartesian": [192, 193, 197, 259], "array_lik": [192, 193, 197, 259], "radiant": [192, 193, 197, 259], "pi": [192, 193], "r": [192, 193, 197, 259], "ref_arrai": 194, "atol": [194, 199, 261], "0001": [194, 199, 261], "uniqu": 194, "toler": [194, 199, 261], "along": 194, "new_ord": 194, "resx": [195, 198, 208, 260], "resi": [195, 198, 208, 260], "ico2_vert": [195, 196, 198, 199, 201, 202, 204, 208, 209, 211, 212, 224, 225, 230, 235, 236, 238, 243, 244, 247, 248, 254, 260, 261], "ico2_tri": [195, 196, 198, 199, 201, 202, 204, 208, 209, 211, 212, 224, 225, 230, 235, 236, 238, 243, 244, 247, 248, 254, 260, 261], "y_grid": [195, 198, 208, 260], "ref_vertic": [196, 199, 209, 261], "ico2_std_vert": [196, 199, 209, 261], "ico2_std_tri": [196, 199, 209, 261], "projecte": [198, 260], "y_std": [199, 261], "target_vertic": [201, 211, 235, 243], "n_dim": [201, 211, 235, 243], "n_queri": [201, 211, 235, 243], "nearest_idx": [201, 235], "ico3_vert": [201, 210, 211, 223, 226, 228, 230, 231, 235, 242, 243, 246, 250, 252, 254, 255], "ico3_tri": [201, 210, 211, 223, 226, 228, 230, 231, 235, 242, 243, 246, 250, 252, 254, 255], "down3to2": [201, 235], "ico3_down_vertic": [201, 235], "n_featur": [202, 212, 231, 236, 244, 255], "consecut": [202, 203, 212, 236, 237, 244], "downsampled_data": [202, 236], "new_n_vertic": [202, 212, 236, 244], "ico4_vert": [202, 203, 212, 236, 237, 244], "ico4_tri": [202, 203, 212, 236, 237, 244], "reshap": [202, 204, 211, 212, 231, 236, 238, 243, 244, 255], "y_down": [202, 236], "squeez": [202, 212, 231, 236, 244, 255], "geometri": [203, 211, 216, 217, 221, 222, 237, 243, 245], "new_vertic": [203, 237], "newli": [203, 237], "icosahedorn": [203, 237], "new_triangl": [203, 237], "ico2_down_vert": [203, 237], "ico2_down_tri": [203, 237], "start_nod": [204, 238], "recurs": [204, 238], "node_neigh": [204, 238], "center": [204, 224, 225, 229, 238, 240, 247, 248, 253], "coeffici": [205, 239], "asssoci": [205, 239], "euclidian": [205, 239], "three": [205, 239], "setup": [206, 258], "2d": [207, 241], "grid_in_spher": [207, 225, 241, 248], "grid_in_tplan": [207, 241], "mesh": [210, 211, 224, 242, 243, 247, 257], "target_triangl": [211, 243], "regular": [211, 243], "interp_indic": [211, 243], "n_feat": [211, 243], "y_up": [211, 212, 243, 244], "upper": [212, 244], "upsampled_data": [212, 244], "hide_err": 213, "secur": 213, "redirect": 213, "context": 213, "manag": 213, "On": 213, "complet": [213, 214], "restor": 213, "hide": 213, "func": 214, "wrap": 214, "receiv": 214, "directori": 214, "transpar": 214, "overlap": 214, "cifti_fil": 215, "decompos": 215, "cifti": [215, 218, 220], "vol": 215, "volum": [215, 220, 262], "surf_left": 215, "surf_right": 215, "surf_fil": [216, 217, 221, 222], "read": [216, 217], "gifti": [217, 222], "surf_nam": 218, "nbviewer": [218, 220], "neurohackademi": [218, 220], "nh2020": [218, 220], "curriculum": [218, 220], "blob": [218, 220], "master": [218, 220], "markiewicz": [218, 220], "gnu": 219, "archiv": 219, "open": 219, "gz": 219, "out_path": 219, "extens": 219, "n_neigh": [223, 227, 246, 251], "length": [224, 247], "remain": [224, 247], "accord": [224, 247], "n_vert": [226, 250], "min_order_to_get_n_neighbor": [227, 251], "hi": [228, 252], "clockwise_from_cent": [229, 253], "clockwis": [229, 253], "view": [229, 253], "counter": [229, 253], "reordered_triangl": [229, 253], "reorder": [229, 253], "ico0_vert": [229, 253], "ico0_tri": [229, 253], "clockwise_ico0_tri": [229, 253], "counter_clockwise_ico0_tri": [229, 253], "n_job": [230, 254], "concurr": [230, 254], "job": [230, 254], "euclidean": [231, 255], "rotated_data": [231, 255], "y_rot": [231, 255], "lower_vertic": 232, "ico_fil": 233, "rescal": 233, "topologi": [233, 234], "ref_fil": 234, "fslr": 234, "point_1": 245, "point_2": 245, "middle_point_cach": 245, "middl": 245, "return_index": 256, "triangles_index": 256, "networkx": 257, "nearbi": 257, "potenti": 257, "smooth": 257, "info": 258, "logfil": 258, "unifi": 262, "compat": 262, "analyz": 262, "brain": 262, "product": 262, "advanc": 262, "availbl": 262, "hydra": 262}, "objects": {"nidl.callbacks.check_typing": [[14, 0, 1, "", "BatchTypingCallback"]], "nidl.callbacks.check_typing.BatchTypingCallback": [[14, 1, 1, "", "on_predict_batch_start"], [14, 1, 1, "", "on_test_batch_start"], [14, 1, 1, "", "on_train_batch_start"], [14, 1, 1, "", "on_validation_batch_start"]], "nidl.datasets": [[16, 0, 1, "", "BaseImageDataset"], [17, 0, 1, "", "BaseNumpyDataset"]], "nidl.datasets.BaseImageDataset": [[16, 1, 1, "", "get_checksum"], [16, 1, 1, "", "get_data"]], "nidl.datasets.BaseNumpyDataset": [[17, 1, 1, "", "get_data"]], "nidl.datasets.base": [[18, 0, 1, "", "BaseDataset"], [19, 0, 1, "", "BaseImageDataset"], [20, 0, 1, "", "BaseNumpyDataset"]], "nidl.datasets.base.BaseImageDataset": [[19, 1, 1, "", "get_checksum"], [19, 1, 1, "", "get_data"]], "nidl.datasets.base.BaseNumpyDataset": [[20, 1, 1, "", "get_data"]], "nidl.estimators": [[22, 0, 1, "", "BaseEstimator"], [23, 0, 1, "", "ClassifierMixin"], [24, 0, 1, "", "ClusterMixin"], [25, 0, 1, "", "RegressorMixin"], [26, 0, 1, "", "TransformerMixin"]], "nidl.estimators.base": [[27, 0, 1, "", "BaseEstimator"], [28, 0, 1, "", "ClassifierMixin"], [29, 0, 1, "", "ClusterMixin"], [30, 0, 1, "", "RegressorMixin"], [31, 0, 1, "", "TransformerMixin"]], "nidl.estimators.linear": [[33, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.LogisticRegression": [[33, 1, 1, "", "configure_optimizers"], [33, 1, 1, "", "on_validation_epoch_end"], [33, 1, 1, "", "predict_step"], [33, 1, 1, "", "training_step"], [33, 1, 1, "", "validation_step"]], "nidl.estimators.linear.logistic_regression": [[34, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.logistic_regression.LogisticRegression": [[34, 1, 1, "", "configure_optimizers"], [34, 1, 1, "", "on_validation_epoch_end"], [34, 1, 1, "", "predict_step"], [34, 1, 1, "", "training_step"], [34, 1, 1, "", "validation_step"]], "nidl.estimators.ssl": [[36, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.SimCLR": [[36, 1, 1, "", "configure_optimizers"], [36, 1, 1, "", "on_validation_epoch_end"], [36, 1, 1, "", "predict_step"], [36, 1, 1, "", "training_step"], [36, 1, 1, "", "validation_step"]], "nidl.estimators.ssl.simclr": [[37, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.simclr.SimCLR": [[37, 1, 1, "", "configure_optimizers"], [37, 1, 1, "", "on_validation_epoch_end"], [37, 1, 1, "", "predict_step"], [37, 1, 1, "", "training_step"], [37, 1, 1, "", "validation_step"]], "nidl.experiment": [[38, 2, 1, "", "fetch_experiment"], [39, 2, 1, "", "filter_config"], [40, 2, 1, "", "get_env"], [41, 2, 1, "", "load_interface"], [42, 2, 1, "", "update_params"]], "nidl.transforms": [[44, 0, 1, "", "ContrastiveTransforms"]], "nidl.transforms.ssl": [[45, 0, 1, "", "ContrastiveTransforms"]], "nidl.utils": [[47, 0, 1, "", "Bunch"], [48, 0, 1, "", "Weights"], [61, 2, 1, "", "print_multicolor"]], "nidl.utils.Weights": [[48, 1, 1, "", "hf_download"], [48, 1, 1, "", "hub_split"], [48, 1, 1, "", "load_pretrained"], [48, 1, 1, "", "ns_download"]], "nidl.utils.bunch": [[49, 0, 1, "", "Bunch"]], "nidl.utils.color": [[50, 0, 1, "", "Colored"], [51, 2, 1, "", "attr"], [52, 2, 1, "", "fg"], [53, 2, 1, "", "hex"], [54, 2, 1, "", "print_multicolor"], [55, 2, 1, "", "print_result"], [56, 2, 1, "", "print_subtitle"], [57, 2, 1, "", "print_title"], [58, 2, 1, "", "print_warning"], [59, 2, 1, "", "random_stylize"], [60, 2, 1, "", "stylize"]], "nidl.utils.color.Colored": [[50, 1, 1, "", "attribute"], [50, 1, 1, "", "background"], [50, 1, 1, "", "foreground"], [50, 1, 1, "", "reverse_dict"]], "nidl.utils.validation": [[62, 0, 1, "", "_AvailableIfDescriptor"], [63, 2, 1, "", "_estimator_is"], [64, 2, 1, "", "available_if"], [65, 2, 1, "", "check_is_fitted"]], "nidl.utils.weights": [[66, 0, 1, "", "Weights"]], "nidl.utils.weights.Weights": [[66, 1, 1, "", "hf_download"], [66, 1, 1, "", "hub_split"], [66, 1, 1, "", "load_pretrained"], [66, 1, 1, "", "ns_download"]], "surfify.augmentation": [[70, 0, 1, "", "BaseTransformer"], [71, 0, 1, "", "GroupMixUp"], [72, 0, 1, "", "HemiMixUp"], [73, 0, 1, "", "SurfBlur"], [74, 0, 1, "", "SurfCutOut"], [75, 0, 1, "", "SurfNoise"], [76, 0, 1, "", "SurfRotation"], [77, 0, 1, "", "Transformer"], [78, 2, 1, "", "apply_chained_transforms"], [83, 2, 1, "", "interval"], [87, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.BaseTransformer": [[70, 0, 1, "", "Transform"], [70, 1, 1, "", "register"]], "surfify.augmentation.BaseTransformer.Transform": [[70, 3, 1, "", "probability"], [70, 3, 1, "", "randomize_per_channel"], [70, 3, 1, "", "transform"]], "surfify.augmentation.GroupMixUp": [[71, 1, 1, "", "groupby"], [71, 1, 1, "", "run"]], "surfify.augmentation.HemiMixUp": [[72, 1, 1, "", "run"]], "surfify.augmentation.SurfBlur": [[73, 1, 1, "", "run"]], "surfify.augmentation.SurfCutOut": [[74, 1, 1, "", "run"]], "surfify.augmentation.SurfNoise": [[75, 1, 1, "", "run"]], "surfify.augmentation.SurfRotation": [[76, 1, 1, "", "run"]], "surfify.augmentation.base": [[79, 0, 1, "", "SurfBlur"], [80, 0, 1, "", "SurfCutOut"], [81, 0, 1, "", "SurfNoise"], [82, 0, 1, "", "SurfRotation"]], "surfify.augmentation.base.SurfBlur": [[79, 1, 1, "", "run"]], "surfify.augmentation.base.SurfCutOut": [[80, 1, 1, "", "run"]], "surfify.augmentation.base.SurfNoise": [[81, 1, 1, "", "run"]], "surfify.augmentation.base.SurfRotation": [[82, 1, 1, "", "run"]], "surfify.augmentation.mixup": [[84, 0, 1, "", "GroupMixUp"], [85, 0, 1, "", "HemiMixUp"], [86, 0, 1, "", "MixUpAugmentation"]], "surfify.augmentation.mixup.GroupMixUp": [[84, 1, 1, "", "groupby"], [84, 1, 1, "", "run"]], "surfify.augmentation.mixup.HemiMixUp": [[85, 1, 1, "", "run"]], "surfify.augmentation.mixup.MixUpAugmentation": [[86, 1, 1, "", "rand_mask"]], "surfify.augmentation.utils": [[88, 0, 1, "", "BaseTransformer"], [89, 0, 1, "", "RandomAugmentation"], [90, 0, 1, "", "Transformer"], [91, 2, 1, "", "apply_chained_transforms"], [92, 2, 1, "", "interval"], [93, 2, 1, "", "listify"], [94, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.utils.BaseTransformer": [[88, 0, 1, "", "Transform"], [88, 1, 1, "", "register"]], "surfify.augmentation.utils.BaseTransformer.Transform": [[88, 3, 1, "", "probability"], [88, 3, 1, "", "randomize_per_channel"], [88, 3, 1, "", "transform"]], "surfify.augmentation.utils.RandomAugmentation": [[89, 0, 1, "", "Interval"]], "surfify.augmentation.utils.RandomAugmentation.Interval": [[89, 3, 1, "", "dtype"], [89, 3, 1, "", "high"], [89, 3, 1, "", "low"]], "surfify.datasets": [[96, 0, 1, "", "ClassificationDataset"], [97, 0, 1, "", "GenericSurfDataset"], [101, 2, 1, "", "make_classification"]], "surfify.datasets._generic": [[98, 0, 1, "", "GenericSurfDataset"]], "surfify.datasets._samples_generator": [[99, 0, 1, "", "ClassificationDataset"], [100, 2, 1, "", "make_classification"]], "surfify.losses": [[103, 0, 1, "", "SphericalVAELoss"]], "surfify.losses.vae": [[104, 0, 1, "", "SphericalVAELoss"], [105, 2, 1, "", "log_likelihood"]], "surfify.models": [[107, 0, 1, "", "HemiFusionDecoder"], [108, 0, 1, "", "HemiFusionEncoder"], [109, 0, 1, "", "SphericalBase"], [110, 0, 1, "", "SphericalGUNet"], [111, 0, 1, "", "SphericalGVGG"], [112, 0, 1, "", "SphericalGVGG11"], [113, 0, 1, "", "SphericalGVGG11BN"], [114, 0, 1, "", "SphericalGVGG13"], [115, 0, 1, "", "SphericalGVGG13BN"], [116, 0, 1, "", "SphericalGVGG16"], [117, 0, 1, "", "SphericalGVGG16BN"], [118, 0, 1, "", "SphericalGVGG19"], [119, 0, 1, "", "SphericalGVGG19BN"], [120, 0, 1, "", "SphericalHemiFusionDecoder"], [121, 0, 1, "", "SphericalHemiFusionEncoder"], [122, 0, 1, "", "SphericalUNet"], [123, 0, 1, "", "SphericalVAE"], [124, 0, 1, "", "SphericalVGG"], [125, 0, 1, "", "SphericalVGG11"], [126, 0, 1, "", "SphericalVGG11BN"], [127, 0, 1, "", "SphericalVGG13"], [128, 0, 1, "", "SphericalVGG13BN"], [129, 0, 1, "", "SphericalVGG16"], [130, 0, 1, "", "SphericalVGG16BN"], [131, 0, 1, "", "SphericalVGG19"], [132, 0, 1, "", "SphericalVGG19BN"]], "surfify.models.HemiFusionDecoder": [[107, 1, 1, "", "forward"]], "surfify.models.HemiFusionEncoder": [[108, 1, 1, "", "forward"]], "surfify.models.SphericalBase": [[109, 0, 1, "", "Ico"], [109, 1, 1, "", "build_ico_info"]], "surfify.models.SphericalBase.Ico": [[109, 3, 1, "", "conv_neighbor_indices"], [109, 3, 1, "", "down_indices"], [109, 3, 1, "", "neighbor_indices"], [109, 3, 1, "", "order"], [109, 3, 1, "", "triangles"], [109, 3, 1, "", "up_indices"], [109, 3, 1, "", "vertices"]], "surfify.models.SphericalGUNet": [[110, 1, 1, "", "forward"]], "surfify.models.SphericalGVGG": [[111, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionDecoder": [[120, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionEncoder": [[121, 1, 1, "", "forward"]], "surfify.models.SphericalUNet": [[122, 1, 1, "", "forward"]], "surfify.models.SphericalVAE": [[123, 1, 1, "", "decode"], [123, 1, 1, "", "encode"], [123, 1, 1, "", "forward"], [123, 1, 1, "", "reparameterize"]], "surfify.models.SphericalVGG": [[124, 1, 1, "", "forward"]], "surfify.models.base": [[133, 0, 1, "", "SphericalBase"]], "surfify.models.base.SphericalBase": [[133, 0, 1, "", "Ico"], [133, 1, 1, "", "build_ico_info"]], "surfify.models.base.SphericalBase.Ico": [[133, 3, 1, "", "conv_neighbor_indices"], [133, 3, 1, "", "down_indices"], [133, 3, 1, "", "neighbor_indices"], [133, 3, 1, "", "order"], [133, 3, 1, "", "triangles"], [133, 3, 1, "", "up_indices"], [133, 3, 1, "", "vertices"]], "surfify.models.unet": [[134, 0, 1, "", "DownBlock"], [135, 0, 1, "", "DownGBlock"], [136, 0, 1, "", "GraphicalUNet"], [137, 0, 1, "", "SphericalGUNet"], [138, 0, 1, "", "SphericalUNet"], [139, 0, 1, "", "UpBlock"], [140, 0, 1, "", "UpGBlock"]], "surfify.models.unet.DownBlock": [[134, 1, 1, "", "forward"]], "surfify.models.unet.DownGBlock": [[135, 1, 1, "", "forward"]], "surfify.models.unet.GraphicalUNet": [[136, 1, 1, "", "forward"]], "surfify.models.unet.SphericalGUNet": [[137, 1, 1, "", "forward"]], "surfify.models.unet.SphericalUNet": [[138, 1, 1, "", "forward"]], "surfify.models.unet.UpBlock": [[139, 1, 1, "", "forward"]], "surfify.models.unet.UpGBlock": [[140, 1, 1, "", "forward"]], "surfify.models.vae": [[141, 0, 1, "", "HemiFusionDecoder"], [142, 0, 1, "", "HemiFusionEncoder"], [143, 0, 1, "", "SphericalHemiFusionDecoder"], [144, 0, 1, "", "SphericalHemiFusionEncoder"], [145, 0, 1, "", "SphericalVAE"], [146, 2, 1, "", "compute_output_dim"]], "surfify.models.vae.HemiFusionDecoder": [[141, 1, 1, "", "forward"]], "surfify.models.vae.HemiFusionEncoder": [[142, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionDecoder": [[143, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionEncoder": [[144, 1, 1, "", "forward"]], "surfify.models.vae.SphericalVAE": [[145, 1, 1, "", "decode"], [145, 1, 1, "", "encode"], [145, 1, 1, "", "forward"], [145, 1, 1, "", "reparameterize"]], "surfify.models.vgg": [[147, 0, 1, "", "SphericalGVGG"], [148, 0, 1, "", "SphericalGVGG11"], [149, 0, 1, "", "SphericalGVGG11BN"], [150, 0, 1, "", "SphericalGVGG13"], [151, 0, 1, "", "SphericalGVGG13BN"], [152, 0, 1, "", "SphericalGVGG16"], [153, 0, 1, "", "SphericalGVGG16BN"], [154, 0, 1, "", "SphericalGVGG19"], [155, 0, 1, "", "SphericalGVGG19BN"], [156, 0, 1, "", "SphericalVGG"], [157, 0, 1, "", "SphericalVGG11"], [158, 0, 1, "", "SphericalVGG11BN"], [159, 0, 1, "", "SphericalVGG13"], [160, 0, 1, "", "SphericalVGG13BN"], [161, 0, 1, "", "SphericalVGG16"], [162, 0, 1, "", "SphericalVGG16BN"], [163, 0, 1, "", "SphericalVGG19"], [164, 0, 1, "", "SphericalVGG19BN"], [165, 2, 1, "", "class_factory"]], "surfify.models.vgg.SphericalGVGG": [[147, 1, 1, "", "forward"]], "surfify.models.vgg.SphericalVGG": [[156, 1, 1, "", "forward"]], "surfify.nn": [[167, 0, 1, "", "IcoDiNeConv"], [168, 0, 1, "", "IcoFixIndexUpSample"], [169, 0, 1, "", "IcoGenericUpConv"], [170, 0, 1, "", "IcoMaxIndexUpSample"], [171, 0, 1, "", "IcoPool"], [172, 0, 1, "", "IcoRePaConv"], [173, 0, 1, "", "IcoSpMaConv"], [174, 0, 1, "", "IcoSpMaConvTranspose"], [175, 0, 1, "", "IcoUpConv"], [176, 0, 1, "", "IcoUpSample"]], "surfify.nn.IcoDiNeConv": [[167, 1, 1, "", "forward"]], "surfify.nn.IcoFixIndexUpSample": [[168, 1, 1, "", "forward"]], "surfify.nn.IcoGenericUpConv": [[169, 1, 1, "", "forward"]], "surfify.nn.IcoMaxIndexUpSample": [[170, 1, 1, "", "forward"]], "surfify.nn.IcoPool": [[171, 1, 1, "", "forward"]], "surfify.nn.IcoRePaConv": [[172, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConv": [[173, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConvTranspose": [[174, 1, 1, "", "forward"]], "surfify.nn.IcoUpConv": [[175, 1, 1, "", "forward"]], "surfify.nn.IcoUpSample": [[176, 1, 1, "", "forward"]], "surfify.nn.functional": [[177, 2, 1, "", "circular_pad"]], "surfify.nn.modules": [[178, 0, 1, "", "IcoDiNeConv"], [179, 0, 1, "", "IcoFixIndexUpSample"], [180, 0, 1, "", "IcoGenericUpConv"], [181, 0, 1, "", "IcoMaxIndexUpSample"], [182, 0, 1, "", "IcoPool"], [183, 0, 1, "", "IcoRePaConv"], [184, 0, 1, "", "IcoSpMaConv"], [185, 0, 1, "", "IcoSpMaConvTranspose"], [186, 0, 1, "", "IcoUpConv"], [187, 0, 1, "", "IcoUpSample"]], "surfify.nn.modules.IcoDiNeConv": [[178, 1, 1, "", "forward"]], "surfify.nn.modules.IcoFixIndexUpSample": [[179, 1, 1, "", "forward"]], "surfify.nn.modules.IcoGenericUpConv": [[180, 1, 1, "", "forward"]], "surfify.nn.modules.IcoMaxIndexUpSample": [[181, 1, 1, "", "forward"]], "surfify.nn.modules.IcoPool": [[182, 1, 1, "", "forward"]], "surfify.nn.modules.IcoRePaConv": [[183, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConv": [[184, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConvTranspose": [[185, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpConv": [[186, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpSample": [[187, 1, 1, "", "forward"]], "surfify.plotting": [[189, 2, 1, "", "plot_trisurf"]], "surfify.plotting.surface": [[190, 2, 1, "", "plot_trisurf"]], "surfify.utils": [[192, 2, 1, "", "cart2sph"], [200, 2, 1, "", "debug_msg"], [201, 2, 1, "", "downsample"], [202, 2, 1, "", "downsample_data"], [203, 2, 1, "", "downsample_ico"], [204, 2, 1, "", "find_neighbors"], [205, 2, 1, "", "find_rotation_interpol_coefs"], [206, 2, 1, "", "get_logger"], [207, 2, 1, "", "get_rectangular_projection"], [208, 2, 1, "", "grid2text"], [209, 2, 1, "", "ico2ico"], [210, 2, 1, "", "icosahedron"], [211, 2, 1, "", "interpolate"], [212, 2, 1, "", "interpolate_data"], [223, 2, 1, "", "min_depth_to_get_n_neighbors"], [224, 2, 1, "", "neighbors"], [225, 2, 1, "", "neighbors_rec"], [226, 2, 1, "", "number_of_ico_vertices"], [227, 2, 1, "", "number_of_neighbors"], [228, 2, 1, "", "order_of_ico_from_vertices"], [229, 2, 1, "", "order_triangles"], [230, 2, 1, "", "patch_tri"], [231, 2, 1, "", "rotate_data"], [258, 2, 1, "", "setup_logging"], [259, 2, 1, "", "sph2cart"], [260, 2, 1, "", "text2grid"], [261, 2, 1, "", "text2ico"]], "surfify.utils.coord": [[193, 2, 1, "", "cart2sph"], [194, 2, 1, "", "find_corresponding_order"], [195, 2, 1, "", "grid2text"], [196, 2, 1, "", "ico2ico"], [197, 2, 1, "", "sph2cart"], [198, 2, 1, "", "text2grid"], [199, 2, 1, "", "text2ico"]], "surfify.utils.io": [[213, 0, 1, "", "HidePrints"], [214, 2, 1, "", "compute_and_store"], [215, 2, 1, "", "decompose_cifti"], [216, 2, 1, "", "read_freesurfer"], [217, 2, 1, "", "read_gifti"], [218, 2, 1, "", "surf_data_from_cifti"], [219, 2, 1, "", "ungzip"], [220, 2, 1, "", "volume_from_cifti"], [221, 2, 1, "", "write_freesurfer"], [222, 2, 1, "", "write_gifti"]], "surfify.utils.sampling": [[232, 2, 1, "", "_patch_tri_iter"], [233, 2, 1, "", "build_freesurfer_ico"], [234, 2, 1, "", "build_fslr_ref"], [235, 2, 1, "", "downsample"], [236, 2, 1, "", "downsample_data"], [237, 2, 1, "", "downsample_ico"], [238, 2, 1, "", "find_neighbors"], [239, 2, 1, "", "find_rotation_interpol_coefs"], [240, 2, 1, "", "get_angle_with_xaxis"], [241, 2, 1, "", "get_rectangular_projection"], [242, 2, 1, "", "icosahedron"], [243, 2, 1, "", "interpolate"], [244, 2, 1, "", "interpolate_data"], [245, 2, 1, "", "middle_point"], [246, 2, 1, "", "min_depth_to_get_n_neighbors"], [247, 2, 1, "", "neighbors"], [248, 2, 1, "", "neighbors_rec"], [249, 2, 1, "", "normalize"], [250, 2, 1, "", "number_of_ico_vertices"], [251, 2, 1, "", "number_of_neighbors"], [252, 2, 1, "", "order_of_ico_from_vertices"], [253, 2, 1, "", "order_triangles"], [254, 2, 1, "", "patch_tri"], [255, 2, 1, "", "rotate_data"], [256, 2, 1, "", "triangles_to_edges"], [257, 2, 1, "", "vertex_adjacency_graph"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"us": [0, 3], "case": [0, 3], "spheric": [0, 3, 4, 7], "modul": [0, 3, 166], "comput": [1, 9, 263], "time": [1, 9, 263], "self": 2, "supervis": 2, "contrast": 2, "learn": 2, "simclr": [2, 35], "setup": 2, "data": [2, 6], "augment": [2, 4, 69], "dataset": [2, 8, 15, 95], "train": [2, 8], "logist": 2, "regress": 2, "baselin": 2, "conclus": 2, "surfcutout": 4, "surfnois": 4, "surfblur": 4, "surfrot": 4, "hemimixup": 4, "groupmixup": 4, "group": 4, "transform": [4, 43], "icosahedron": 5, "match": 5, "project": 6, "textur": 6, "load": 6, "3": 6, "d": 6, "surfac": [6, 188], "2": 6, "grid": 6, "uniformli": 6, "distribut": 6, "locat": 6, "integr": 6, "deep": 6, "neural": 6, "network": 6, "neighbor": 7, "direct": 7, "rectagular": 7, "tangent": 7, "plane": 7, "unet": [8, 106], "segment": 8, "inspect": 8, "model": [8, 106], "predict": 8, "label": 8, "api": [10, 12, 13, 15, 21, 32, 35, 43, 46, 67, 68, 69, 95, 102, 106, 166, 188, 191], "document": [10, 12, 13, 15, 21, 32, 35, 43, 46, 67, 68, 69, 95, 102, 106, 166, 188, 191], "nidl": [10, 11, 12, 13, 15, 21, 32, 35, 43, 46, 67], "instal": 11, "stabl": 11, "version": 11, "current": 11, "experi": 12, "callback": 13, "check_typ": 13, "base": [15, 21, 69, 106], "estim": [21, 32, 35], "linear": 32, "logistic_regress": 32, "exampl": [33, 34, 36, 37, 48, 66], "ssl": [35, 43], "util": [46, 69, 191], "bunch": 46, "color": 46, "valid": 46, "weight": 46, "search": 67, "surfifi": [68, 69, 95, 102, 106, 166, 188, 191], "mixup": 69, "_samples_gener": 95, "_gener": 95, "loss": 102, "vae": [102, 106], "vgg": 106, "nn": 166, "function": 166, "plot": 188, "coord": 191, "io": 191, "sampl": 191}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Use Cases": [[0, "use-cases"]], "Spherical Modules Use Cases": [[0, "spherical-modules-use-cases"], [3, "spherical-modules-use-cases"]], "Computation times": [[1, "computation-times"], [9, "computation-times"], [263, "computation-times"]], "Self-Supervised Contrastive Learning with SimCLR": [[2, "self-supervised-contrastive-learning-with-simclr"]], "Setup": [[2, "setup"]], "Data Augmentation for Contrastive Learning": [[2, "data-augmentation-for-contrastive-learning"]], "Dataset": [[2, "dataset"]], "Training": [[2, "training"]], "Logistic Regression": [[2, "logistic-regression"]], "Baseline": [[2, "baseline"]], "Conclusion": [[2, "conclusion"]], "Spherical augmentations": [[4, "spherical-augmentations"]], "SurfCutOut": [[4, "surfcutout"]], "SurfNoise": [[4, "surfnoise"]], "SurfBlur": [[4, "surfblur"]], "SurfRotation": [[4, "surfrotation"]], "HemiMixUp": [[4, "hemimixup"]], "GroupMixUp": [[4, "groupmixup"]], "GroupMixUp group": [[4, "groupmixup-group"]], "Transformer": [[4, "transformer"]], "Icosahedron matching": [[5, "icosahedron-matching"]], "Project texture": [[6, "project-texture"]], "Load data": [[6, "load-data"]], "3-D surface to 2-D grid projection": [[6, "d-surface-to-2-d-grid-projection"]], "2-D grid to 3-D surface projection": [[6, "d-grid-to-3-d-surface-projection"]], "Uniformly distributed locations": [[6, "uniformly-distributed-locations"]], "Integration in deep neural network": [[6, "integration-in-deep-neural-network"]], "Spherical neighbors": [[7, "spherical-neighbors"]], "Direct Neighbor": [[7, "direct-neighbor"]], "Rectagular Tangent Plane Neighbor": [[7, "rectagular-tangent-plane-neighbor"]], "UNet segmentation": [[8, "unet-segmentation"]], "Inspect dataset": [[8, "inspect-dataset"]], "Train the model": [[8, "train-the-model"]], "Inspect the predicted labels": [[8, "inspect-the-predicted-labels"]], "API documentation of NIDL": [[10, "api-documentation-of-nidl"]], "Installing nidl": [[11, "installing-nidl"]], "Installing a stable version": [[11, "installing-a-stable-version"]], "Installing the current version": [[11, "installing-the-current-version"]], "API documentation of nidl": [[12, "api-documentation-of-nidl"]], "nidl": [[12, "nidl"]], "nidl.experiment": [[12, "nidl-experiment"]], "API documentation of nidl.callbacks": [[13, "api-documentation-of-nidl-callbacks"]], "nidl.callbacks": [[13, "nidl-callbacks"]], "nidl.callbacks.check_typing": [[13, "nidl-callbacks-check-typing"]], "API documentation of nidl.datasets": [[15, "api-documentation-of-nidl-datasets"]], "nidl.datasets": [[15, "nidl-datasets"]], "nidl.datasets.base": [[15, "nidl-datasets-base"]], "API documentation of nidl.estimators": [[21, "api-documentation-of-nidl-estimators"]], "nidl.estimators": [[21, "nidl-estimators"]], "nidl.estimators.base": [[21, "nidl-estimators-base"]], "API documentation of nidl.estimators.linear": [[32, "api-documentation-of-nidl-estimators-linear"]], "nidl.estimators.linear": [[32, "nidl-estimators-linear"]], "nidl.estimators.linear.logistic_regression": [[32, "nidl-estimators-linear-logistic-regression"]], "Examples": [[33, "examples"], [34, "examples"], [36, "examples"], [37, "examples"], [48, "examples"], [66, "examples"]], "API documentation of nidl.estimators.ssl": [[35, "api-documentation-of-nidl-estimators-ssl"]], "nidl.estimators.ssl": [[35, "nidl-estimators-ssl"]], "nidl.estimators.ssl.simclr": [[35, "id1"]], "API documentation of nidl.transforms": [[43, "api-documentation-of-nidl-transforms"]], "nidl.transforms": [[43, "nidl-transforms"]], "nidl.transforms.ssl": [[43, "nidl-transforms-ssl"]], "API documentation of nidl.utils": [[46, "api-documentation-of-nidl-utils"]], "nidl.utils": [[46, "nidl-utils"]], "nidl.utils.bunch": [[46, "id1"]], "nidl.utils.color": [[46, "nidl-utils-color"]], "nidl.utils.validation": [[46, "nidl-utils-validation"]], "nidl.utils.weights": [[46, "id2"]], "Search in API documentation of NIDL": [[67, "search-in-api-documentation-of-nidl"]], "API documentation of surfify": [[68, "api-documentation-of-surfify"]], "surfify": [[68, "surfify"]], "API documentation of surfify.augmentation": [[69, "api-documentation-of-surfify-augmentation"]], "surfify.augmentation": [[69, "surfify-augmentation"]], "surfify.augmentation.base": [[69, "surfify-augmentation-base"]], "surfify.augmentation.mixup": [[69, "surfify-augmentation-mixup"]], "surfify.augmentation.utils": [[69, "surfify-augmentation-utils"]], "API documentation of surfify.datasets": [[95, "api-documentation-of-surfify-datasets"]], "surfify.datasets": [[95, "surfify-datasets"]], "surfify.datasets._samples_generator": [[95, "surfify-datasets-samples-generator"]], "surfify.datasets._generic": [[95, "surfify-datasets-generic"]], "API documentation of surfify.losses": [[102, "api-documentation-of-surfify-losses"]], "surfify.losses": [[102, "surfify-losses"]], "surfify.losses.vae": [[102, "surfify-losses-vae"]], "API documentation of surfify.models": [[106, "api-documentation-of-surfify-models"]], "surfify.models": [[106, "surfify-models"]], "surfify.models.base": [[106, "surfify-models-base"]], "surfify.models.vae": [[106, "surfify-models-vae"]], "surfify.models.vgg": [[106, "surfify-models-vgg"]], "surfify.models.unet": [[106, "surfify-models-unet"]], "API documentation of surfify.nn": [[166, "api-documentation-of-surfify-nn"]], "surfify.nn": [[166, "surfify-nn"]], "surfify.nn.functional": [[166, "surfify-nn-functional"]], "surfify.nn.modules": [[166, "surfify-nn-modules"]], "API documentation of surfify.plotting": [[188, "api-documentation-of-surfify-plotting"]], "surfify.plotting": [[188, "surfify-plotting"]], "surfify.plotting.surface": [[188, "surfify-plotting-surface"]], "API documentation of surfify.utils": [[191, "api-documentation-of-surfify-utils"]], "surfify.utils": [[191, "surfify-utils"]], "surfify.utils.coord": [[191, "surfify-utils-coord"]], "surfify.utils.io": [[191, "surfify-utils-io"]], "surfify.utils.sampling": [[191, "surfify-utils-sampling"]]}, "indexentries": {"batchtypingcallback (class in nidl.callbacks.check_typing)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback"]], "on_predict_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_predict_batch_start"]], "on_test_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_test_batch_start"]], "on_train_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_train_batch_start"]], "on_validation_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_validation_batch_start"]], "baseimagedataset (class in nidl.datasets)": [[16, "nidl.datasets.BaseImageDataset"]], "get_checksum() (nidl.datasets.baseimagedataset method)": [[16, "nidl.datasets.BaseImageDataset.get_checksum"]], "get_data() (nidl.datasets.baseimagedataset method)": [[16, "nidl.datasets.BaseImageDataset.get_data"]], "basenumpydataset (class in nidl.datasets)": [[17, "nidl.datasets.BaseNumpyDataset"]], "get_data() (nidl.datasets.basenumpydataset method)": [[17, "nidl.datasets.BaseNumpyDataset.get_data"]], "basedataset (class in nidl.datasets.base)": [[18, "nidl.datasets.base.BaseDataset"]], "baseimagedataset (class in nidl.datasets.base)": [[19, "nidl.datasets.base.BaseImageDataset"]], "get_checksum() (nidl.datasets.base.baseimagedataset method)": [[19, "nidl.datasets.base.BaseImageDataset.get_checksum"]], "get_data() (nidl.datasets.base.baseimagedataset method)": [[19, "nidl.datasets.base.BaseImageDataset.get_data"]], "basenumpydataset (class in nidl.datasets.base)": [[20, "nidl.datasets.base.BaseNumpyDataset"]], "get_data() (nidl.datasets.base.basenumpydataset method)": [[20, "nidl.datasets.base.BaseNumpyDataset.get_data"]], "baseestimator (class in nidl.estimators)": [[22, "nidl.estimators.BaseEstimator"]], "classifiermixin (class in nidl.estimators)": [[23, "nidl.estimators.ClassifierMixin"]], "clustermixin (class in nidl.estimators)": [[24, "nidl.estimators.ClusterMixin"]], "regressormixin (class in nidl.estimators)": [[25, "nidl.estimators.RegressorMixin"]], "transformermixin (class in nidl.estimators)": [[26, "nidl.estimators.TransformerMixin"]], "baseestimator (class in nidl.estimators.base)": [[27, "nidl.estimators.base.BaseEstimator"]], "classifiermixin (class in nidl.estimators.base)": [[28, "nidl.estimators.base.ClassifierMixin"]], "clustermixin (class in nidl.estimators.base)": [[29, "nidl.estimators.base.ClusterMixin"]], "regressormixin (class in nidl.estimators.base)": [[30, "nidl.estimators.base.RegressorMixin"]], "transformermixin (class in nidl.estimators.base)": [[31, "nidl.estimators.base.TransformerMixin"]], "logisticregression (class in nidl.estimators.linear)": [[33, "nidl.estimators.linear.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logisticregression method)": [[33, "nidl.estimators.linear.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logisticregression method)": [[33, "nidl.estimators.linear.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logisticregression method)": [[33, "nidl.estimators.linear.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logisticregression method)": [[33, "nidl.estimators.linear.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logisticregression method)": [[33, "nidl.estimators.linear.LogisticRegression.validation_step"]], "logisticregression (class in nidl.estimators.linear.logistic_regression)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[34, "nidl.estimators.linear.logistic_regression.LogisticRegression.validation_step"]], "simclr (class in nidl.estimators.ssl)": [[36, "nidl.estimators.ssl.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr method)": [[36, "nidl.estimators.ssl.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr method)": [[36, "nidl.estimators.ssl.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr method)": [[36, "nidl.estimators.ssl.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr method)": [[36, "nidl.estimators.ssl.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr method)": [[36, "nidl.estimators.ssl.SimCLR.validation_step"]], "simclr (class in nidl.estimators.ssl.simclr)": [[37, "nidl.estimators.ssl.simclr.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr.simclr method)": [[37, "nidl.estimators.ssl.simclr.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr.simclr method)": [[37, "nidl.estimators.ssl.simclr.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr.simclr method)": [[37, "nidl.estimators.ssl.simclr.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr.simclr method)": [[37, "nidl.estimators.ssl.simclr.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr.simclr method)": [[37, "nidl.estimators.ssl.simclr.SimCLR.validation_step"]], "fetch_experiment() (in module nidl.experiment)": [[38, "nidl.experiment.fetch_experiment"]], "filter_config() (in module nidl.experiment)": [[39, "nidl.experiment.filter_config"]], "get_env() (in module nidl.experiment)": [[40, "nidl.experiment.get_env"]], "load_interface() (in module nidl.experiment)": [[41, "nidl.experiment.load_interface"]], "update_params() (in module nidl.experiment)": [[42, "nidl.experiment.update_params"]], "contrastivetransforms (class in nidl.transforms)": [[44, "nidl.transforms.ContrastiveTransforms"]], "contrastivetransforms (class in nidl.transforms.ssl)": [[45, "nidl.transforms.ssl.ContrastiveTransforms"]], "bunch (class in nidl.utils)": [[47, "nidl.utils.Bunch"]], "weights (class in nidl.utils)": [[48, "nidl.utils.Weights"]], "hf_download() (nidl.utils.weights class method)": [[48, "nidl.utils.Weights.hf_download"]], "hub_split() (nidl.utils.weights class method)": [[48, "nidl.utils.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights method)": [[48, "nidl.utils.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights class method)": [[48, "nidl.utils.Weights.ns_download"]], "bunch (class in nidl.utils.bunch)": [[49, "nidl.utils.bunch.Bunch"]], "colored (class in nidl.utils.color)": [[50, "nidl.utils.color.Colored"]], "attribute() (nidl.utils.color.colored method)": [[50, "nidl.utils.color.Colored.attribute"]], "background() (nidl.utils.color.colored method)": [[50, "nidl.utils.color.Colored.background"]], "foreground() (nidl.utils.color.colored method)": [[50, "nidl.utils.color.Colored.foreground"]], "reverse_dict() (nidl.utils.color.colored method)": [[50, "nidl.utils.color.Colored.reverse_dict"]], "attr() (in module nidl.utils.color)": [[51, "nidl.utils.color.attr"]], "fg() (in module nidl.utils.color)": [[52, "nidl.utils.color.fg"]], "hex() (in module nidl.utils.color)": [[53, "nidl.utils.color.hex"]], "print_multicolor() (in module nidl.utils.color)": [[54, "nidl.utils.color.print_multicolor"]], "print_result() (in module nidl.utils.color)": [[55, "nidl.utils.color.print_result"]], "print_subtitle() (in module nidl.utils.color)": [[56, "nidl.utils.color.print_subtitle"]], "print_title() (in module nidl.utils.color)": [[57, "nidl.utils.color.print_title"]], "print_warning() (in module nidl.utils.color)": [[58, "nidl.utils.color.print_warning"]], "random_stylize() (in module nidl.utils.color)": [[59, "nidl.utils.color.random_stylize"]], "stylize() (in module nidl.utils.color)": [[60, "nidl.utils.color.stylize"]], "print_multicolor() (in module nidl.utils)": [[61, "nidl.utils.print_multicolor"]], "_availableifdescriptor (class in nidl.utils.validation)": [[62, "nidl.utils.validation._AvailableIfDescriptor"]], "_estimator_is() (in module nidl.utils.validation)": [[63, "nidl.utils.validation._estimator_is"]], "available_if() (in module nidl.utils.validation)": [[64, "nidl.utils.validation.available_if"]], "check_is_fitted() (in module nidl.utils.validation)": [[65, "nidl.utils.validation.check_is_fitted"]], "weights (class in nidl.utils.weights)": [[66, "nidl.utils.weights.Weights"]], "hf_download() (nidl.utils.weights.weights class method)": [[66, "nidl.utils.weights.Weights.hf_download"]], "hub_split() (nidl.utils.weights.weights class method)": [[66, "nidl.utils.weights.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights.weights method)": [[66, "nidl.utils.weights.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights.weights class method)": [[66, "nidl.utils.weights.Weights.ns_download"]], "basetransformer (class in surfify.augmentation)": [[70, "surfify.augmentation.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation)": [[70, "surfify.augmentation.BaseTransformer.Transform"]], "probability (surfify.augmentation.basetransformer.transform attribute)": [[70, "surfify.augmentation.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.basetransformer.transform attribute)": [[70, "surfify.augmentation.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.basetransformer method)": [[70, "surfify.augmentation.BaseTransformer.register"]], "transform (surfify.augmentation.basetransformer.transform attribute)": [[70, "surfify.augmentation.BaseTransformer.Transform.transform"]], "groupmixup (class in surfify.augmentation)": [[71, "surfify.augmentation.GroupMixUp"]], "groupby() (surfify.augmentation.groupmixup class method)": [[71, "surfify.augmentation.GroupMixUp.groupby"]], "run() (surfify.augmentation.groupmixup method)": [[71, "surfify.augmentation.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation)": [[72, "surfify.augmentation.HemiMixUp"]], "run() (surfify.augmentation.hemimixup method)": [[72, "surfify.augmentation.HemiMixUp.run"]], "surfblur (class in surfify.augmentation)": [[73, "surfify.augmentation.SurfBlur"]], "run() (surfify.augmentation.surfblur method)": [[73, "surfify.augmentation.SurfBlur.run"]], "surfcutout (class in surfify.augmentation)": [[74, "surfify.augmentation.SurfCutOut"]], "run() (surfify.augmentation.surfcutout method)": [[74, "surfify.augmentation.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation)": [[75, "surfify.augmentation.SurfNoise"]], "run() (surfify.augmentation.surfnoise method)": [[75, "surfify.augmentation.SurfNoise.run"]], "surfrotation (class in surfify.augmentation)": [[76, "surfify.augmentation.SurfRotation"]], "run() (surfify.augmentation.surfrotation method)": [[76, "surfify.augmentation.SurfRotation.run"]], "transformer (class in surfify.augmentation)": [[77, "surfify.augmentation.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation)": [[78, "surfify.augmentation.apply_chained_transforms"]], "surfblur (class in surfify.augmentation.base)": [[79, "surfify.augmentation.base.SurfBlur"]], "run() (surfify.augmentation.base.surfblur method)": [[79, "surfify.augmentation.base.SurfBlur.run"]], "surfcutout (class in surfify.augmentation.base)": [[80, "surfify.augmentation.base.SurfCutOut"]], "run() (surfify.augmentation.base.surfcutout method)": [[80, "surfify.augmentation.base.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation.base)": [[81, "surfify.augmentation.base.SurfNoise"]], "run() (surfify.augmentation.base.surfnoise method)": [[81, "surfify.augmentation.base.SurfNoise.run"]], "surfrotation (class in surfify.augmentation.base)": [[82, "surfify.augmentation.base.SurfRotation"]], "run() (surfify.augmentation.base.surfrotation method)": [[82, "surfify.augmentation.base.SurfRotation.run"]], "interval() (in module surfify.augmentation)": [[83, "surfify.augmentation.interval"]], "groupmixup (class in surfify.augmentation.mixup)": [[84, "surfify.augmentation.mixup.GroupMixUp"]], "groupby() (surfify.augmentation.mixup.groupmixup class method)": [[84, "surfify.augmentation.mixup.GroupMixUp.groupby"]], "run() (surfify.augmentation.mixup.groupmixup method)": [[84, "surfify.augmentation.mixup.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation.mixup)": [[85, "surfify.augmentation.mixup.HemiMixUp"]], "run() (surfify.augmentation.mixup.hemimixup method)": [[85, "surfify.augmentation.mixup.HemiMixUp.run"]], "mixupaugmentation (class in surfify.augmentation.mixup)": [[86, "surfify.augmentation.mixup.MixUpAugmentation"]], "rand_mask() (surfify.augmentation.mixup.mixupaugmentation method)": [[86, "surfify.augmentation.mixup.MixUpAugmentation.rand_mask"]], "multichannel_augmentation() (in module surfify.augmentation)": [[87, "surfify.augmentation.multichannel_augmentation"]], "basetransformer (class in surfify.augmentation.utils)": [[88, "surfify.augmentation.utils.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation.utils)": [[88, "surfify.augmentation.utils.BaseTransformer.Transform"]], "probability (surfify.augmentation.utils.basetransformer.transform attribute)": [[88, "surfify.augmentation.utils.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.utils.basetransformer.transform attribute)": [[88, "surfify.augmentation.utils.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.utils.basetransformer method)": [[88, "surfify.augmentation.utils.BaseTransformer.register"]], "transform (surfify.augmentation.utils.basetransformer.transform attribute)": [[88, "surfify.augmentation.utils.BaseTransformer.Transform.transform"]], "randomaugmentation (class in surfify.augmentation.utils)": [[89, "surfify.augmentation.utils.RandomAugmentation"]], "randomaugmentation.interval (class in surfify.augmentation.utils)": [[89, "surfify.augmentation.utils.RandomAugmentation.Interval"]], "dtype (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[89, "surfify.augmentation.utils.RandomAugmentation.Interval.dtype"]], "high (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[89, "surfify.augmentation.utils.RandomAugmentation.Interval.high"]], "low (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[89, "surfify.augmentation.utils.RandomAugmentation.Interval.low"]], "transformer (class in surfify.augmentation.utils)": [[90, "surfify.augmentation.utils.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation.utils)": [[91, "surfify.augmentation.utils.apply_chained_transforms"]], "interval() (in module surfify.augmentation.utils)": [[92, "surfify.augmentation.utils.interval"]], "listify() (in module surfify.augmentation.utils)": [[93, "surfify.augmentation.utils.listify"]], "multichannel_augmentation() (in module surfify.augmentation.utils)": [[94, "surfify.augmentation.utils.multichannel_augmentation"]], "classificationdataset (class in surfify.datasets)": [[96, "surfify.datasets.ClassificationDataset"]], "genericsurfdataset (class in surfify.datasets)": [[97, "surfify.datasets.GenericSurfDataset"]], "genericsurfdataset (class in surfify.datasets._generic)": [[98, "surfify.datasets._generic.GenericSurfDataset"]], "classificationdataset (class in surfify.datasets._samples_generator)": [[99, "surfify.datasets._samples_generator.ClassificationDataset"]], "make_classification() (in module surfify.datasets._samples_generator)": [[100, "surfify.datasets._samples_generator.make_classification"]], "make_classification() (in module surfify.datasets)": [[101, "surfify.datasets.make_classification"]], "sphericalvaeloss (class in surfify.losses)": [[103, "surfify.losses.SphericalVAELoss"]], "sphericalvaeloss (class in surfify.losses.vae)": [[104, "surfify.losses.vae.SphericalVAELoss"]], "log_likelihood() (in module surfify.losses.vae)": [[105, "surfify.losses.vae.log_likelihood"]], "hemifusiondecoder (class in surfify.models)": [[107, "surfify.models.HemiFusionDecoder"]], "forward() (surfify.models.hemifusiondecoder method)": [[107, "surfify.models.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models)": [[108, "surfify.models.HemiFusionEncoder"]], "forward() (surfify.models.hemifusionencoder method)": [[108, "surfify.models.HemiFusionEncoder.forward"]], "sphericalbase (class in surfify.models)": [[109, "surfify.models.SphericalBase"]], "sphericalbase.ico (class in surfify.models)": [[109, "surfify.models.SphericalBase.Ico"]], "build_ico_info() (surfify.models.sphericalbase class method)": [[109, "surfify.models.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.order"]], "triangles (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.sphericalbase.ico attribute)": [[109, "surfify.models.SphericalBase.Ico.vertices"]], "sphericalgunet (class in surfify.models)": [[110, "surfify.models.SphericalGUNet"]], "forward() (surfify.models.sphericalgunet method)": [[110, "surfify.models.SphericalGUNet.forward"]], "sphericalgvgg (class in surfify.models)": [[111, "surfify.models.SphericalGVGG"]], "forward() (surfify.models.sphericalgvgg method)": [[111, "surfify.models.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models)": [[112, "surfify.models.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models)": [[113, "surfify.models.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models)": [[114, "surfify.models.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models)": [[115, "surfify.models.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models)": [[116, "surfify.models.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models)": [[117, "surfify.models.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models)": [[118, "surfify.models.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models)": [[119, "surfify.models.SphericalGVGG19BN"]], "sphericalhemifusiondecoder (class in surfify.models)": [[120, "surfify.models.SphericalHemiFusionDecoder"]], "forward() (surfify.models.sphericalhemifusiondecoder method)": [[120, "surfify.models.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models)": [[121, "surfify.models.SphericalHemiFusionEncoder"]], "forward() (surfify.models.sphericalhemifusionencoder method)": [[121, "surfify.models.SphericalHemiFusionEncoder.forward"]], "sphericalunet (class in surfify.models)": [[122, "surfify.models.SphericalUNet"]], "forward() (surfify.models.sphericalunet method)": [[122, "surfify.models.SphericalUNet.forward"]], "sphericalvae (class in surfify.models)": [[123, "surfify.models.SphericalVAE"]], "decode() (surfify.models.sphericalvae method)": [[123, "surfify.models.SphericalVAE.decode"]], "encode() (surfify.models.sphericalvae method)": [[123, "surfify.models.SphericalVAE.encode"]], "forward() (surfify.models.sphericalvae method)": [[123, "surfify.models.SphericalVAE.forward"]], "reparameterize() (surfify.models.sphericalvae method)": [[123, "surfify.models.SphericalVAE.reparameterize"]], "sphericalvgg (class in surfify.models)": [[124, "surfify.models.SphericalVGG"]], "forward() (surfify.models.sphericalvgg method)": [[124, "surfify.models.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models)": [[125, "surfify.models.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models)": [[126, "surfify.models.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models)": [[127, "surfify.models.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models)": [[128, "surfify.models.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models)": [[129, "surfify.models.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models)": [[130, "surfify.models.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models)": [[131, "surfify.models.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models)": [[132, "surfify.models.SphericalVGG19BN"]], "sphericalbase (class in surfify.models.base)": [[133, "surfify.models.base.SphericalBase"]], "sphericalbase.ico (class in surfify.models.base)": [[133, "surfify.models.base.SphericalBase.Ico"]], "build_ico_info() (surfify.models.base.sphericalbase class method)": [[133, "surfify.models.base.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.order"]], "triangles (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.base.sphericalbase.ico attribute)": [[133, "surfify.models.base.SphericalBase.Ico.vertices"]], "downblock (class in surfify.models.unet)": [[134, "surfify.models.unet.DownBlock"]], "forward() (surfify.models.unet.downblock method)": [[134, "surfify.models.unet.DownBlock.forward"]], "downgblock (class in surfify.models.unet)": [[135, "surfify.models.unet.DownGBlock"]], "forward() (surfify.models.unet.downgblock method)": [[135, "surfify.models.unet.DownGBlock.forward"]], "graphicalunet (class in surfify.models.unet)": [[136, "surfify.models.unet.GraphicalUNet"]], "forward() (surfify.models.unet.graphicalunet method)": [[136, "surfify.models.unet.GraphicalUNet.forward"]], "sphericalgunet (class in surfify.models.unet)": [[137, "surfify.models.unet.SphericalGUNet"]], "forward() (surfify.models.unet.sphericalgunet method)": [[137, "surfify.models.unet.SphericalGUNet.forward"]], "sphericalunet (class in surfify.models.unet)": [[138, "surfify.models.unet.SphericalUNet"]], "forward() (surfify.models.unet.sphericalunet method)": [[138, "surfify.models.unet.SphericalUNet.forward"]], "upblock (class in surfify.models.unet)": [[139, "surfify.models.unet.UpBlock"]], "forward() (surfify.models.unet.upblock method)": [[139, "surfify.models.unet.UpBlock.forward"]], "upgblock (class in surfify.models.unet)": [[140, "surfify.models.unet.UpGBlock"]], "forward() (surfify.models.unet.upgblock method)": [[140, "surfify.models.unet.UpGBlock.forward"]], "hemifusiondecoder (class in surfify.models.vae)": [[141, "surfify.models.vae.HemiFusionDecoder"]], "forward() (surfify.models.vae.hemifusiondecoder method)": [[141, "surfify.models.vae.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models.vae)": [[142, "surfify.models.vae.HemiFusionEncoder"]], "forward() (surfify.models.vae.hemifusionencoder method)": [[142, "surfify.models.vae.HemiFusionEncoder.forward"]], "sphericalhemifusiondecoder (class in surfify.models.vae)": [[143, "surfify.models.vae.SphericalHemiFusionDecoder"]], "forward() (surfify.models.vae.sphericalhemifusiondecoder method)": [[143, "surfify.models.vae.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models.vae)": [[144, "surfify.models.vae.SphericalHemiFusionEncoder"]], "forward() (surfify.models.vae.sphericalhemifusionencoder method)": [[144, "surfify.models.vae.SphericalHemiFusionEncoder.forward"]], "sphericalvae (class in surfify.models.vae)": [[145, "surfify.models.vae.SphericalVAE"]], "decode() (surfify.models.vae.sphericalvae method)": [[145, "surfify.models.vae.SphericalVAE.decode"]], "encode() (surfify.models.vae.sphericalvae method)": [[145, "surfify.models.vae.SphericalVAE.encode"]], "forward() (surfify.models.vae.sphericalvae method)": [[145, "surfify.models.vae.SphericalVAE.forward"]], "reparameterize() (surfify.models.vae.sphericalvae method)": [[145, "surfify.models.vae.SphericalVAE.reparameterize"]], "compute_output_dim() (in module surfify.models.vae)": [[146, "surfify.models.vae.compute_output_dim"]], "sphericalgvgg (class in surfify.models.vgg)": [[147, "surfify.models.vgg.SphericalGVGG"]], "forward() (surfify.models.vgg.sphericalgvgg method)": [[147, "surfify.models.vgg.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models.vgg)": [[148, "surfify.models.vgg.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models.vgg)": [[149, "surfify.models.vgg.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models.vgg)": [[150, "surfify.models.vgg.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models.vgg)": [[151, "surfify.models.vgg.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models.vgg)": [[152, "surfify.models.vgg.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models.vgg)": [[153, "surfify.models.vgg.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models.vgg)": [[154, "surfify.models.vgg.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models.vgg)": [[155, "surfify.models.vgg.SphericalGVGG19BN"]], "sphericalvgg (class in surfify.models.vgg)": [[156, "surfify.models.vgg.SphericalVGG"]], "forward() (surfify.models.vgg.sphericalvgg method)": [[156, "surfify.models.vgg.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models.vgg)": [[157, "surfify.models.vgg.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models.vgg)": [[158, "surfify.models.vgg.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models.vgg)": [[159, "surfify.models.vgg.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models.vgg)": [[160, "surfify.models.vgg.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models.vgg)": [[161, "surfify.models.vgg.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models.vgg)": [[162, "surfify.models.vgg.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models.vgg)": [[163, "surfify.models.vgg.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models.vgg)": [[164, "surfify.models.vgg.SphericalVGG19BN"]], "class_factory() (in module surfify.models.vgg)": [[165, "surfify.models.vgg.class_factory"]], "icodineconv (class in surfify.nn)": [[167, "surfify.nn.IcoDiNeConv"]], "forward() (surfify.nn.icodineconv method)": [[167, "surfify.nn.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn)": [[168, "surfify.nn.IcoFixIndexUpSample"]], "forward() (surfify.nn.icofixindexupsample method)": [[168, "surfify.nn.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn)": [[169, "surfify.nn.IcoGenericUpConv"]], "forward() (surfify.nn.icogenericupconv method)": [[169, "surfify.nn.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn)": [[170, "surfify.nn.IcoMaxIndexUpSample"]], "forward() (surfify.nn.icomaxindexupsample method)": [[170, "surfify.nn.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn)": [[171, "surfify.nn.IcoPool"]], "forward() (surfify.nn.icopool method)": [[171, "surfify.nn.IcoPool.forward"]], "icorepaconv (class in surfify.nn)": [[172, "surfify.nn.IcoRePaConv"]], "forward() (surfify.nn.icorepaconv method)": [[172, "surfify.nn.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn)": [[173, "surfify.nn.IcoSpMaConv"]], "forward() (surfify.nn.icospmaconv method)": [[173, "surfify.nn.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn)": [[174, "surfify.nn.IcoSpMaConvTranspose"]], "forward() (surfify.nn.icospmaconvtranspose method)": [[174, "surfify.nn.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn)": [[175, "surfify.nn.IcoUpConv"]], "forward() (surfify.nn.icoupconv method)": [[175, "surfify.nn.IcoUpConv.forward"]], "icoupsample (class in surfify.nn)": [[176, "surfify.nn.IcoUpSample"]], "forward() (surfify.nn.icoupsample method)": [[176, "surfify.nn.IcoUpSample.forward"]], "circular_pad() (in module surfify.nn.functional)": [[177, "surfify.nn.functional.circular_pad"]], "icodineconv (class in surfify.nn.modules)": [[178, "surfify.nn.modules.IcoDiNeConv"]], "forward() (surfify.nn.modules.icodineconv method)": [[178, "surfify.nn.modules.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn.modules)": [[179, "surfify.nn.modules.IcoFixIndexUpSample"]], "forward() (surfify.nn.modules.icofixindexupsample method)": [[179, "surfify.nn.modules.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn.modules)": [[180, "surfify.nn.modules.IcoGenericUpConv"]], "forward() (surfify.nn.modules.icogenericupconv method)": [[180, "surfify.nn.modules.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn.modules)": [[181, "surfify.nn.modules.IcoMaxIndexUpSample"]], "forward() (surfify.nn.modules.icomaxindexupsample method)": [[181, "surfify.nn.modules.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn.modules)": [[182, "surfify.nn.modules.IcoPool"]], "forward() (surfify.nn.modules.icopool method)": [[182, "surfify.nn.modules.IcoPool.forward"]], "icorepaconv (class in surfify.nn.modules)": [[183, "surfify.nn.modules.IcoRePaConv"]], "forward() (surfify.nn.modules.icorepaconv method)": [[183, "surfify.nn.modules.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn.modules)": [[184, "surfify.nn.modules.IcoSpMaConv"]], "forward() (surfify.nn.modules.icospmaconv method)": [[184, "surfify.nn.modules.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn.modules)": [[185, "surfify.nn.modules.IcoSpMaConvTranspose"]], "forward() (surfify.nn.modules.icospmaconvtranspose method)": [[185, "surfify.nn.modules.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn.modules)": [[186, "surfify.nn.modules.IcoUpConv"]], "forward() (surfify.nn.modules.icoupconv method)": [[186, "surfify.nn.modules.IcoUpConv.forward"]], "icoupsample (class in surfify.nn.modules)": [[187, "surfify.nn.modules.IcoUpSample"]], "forward() (surfify.nn.modules.icoupsample method)": [[187, "surfify.nn.modules.IcoUpSample.forward"]], "plot_trisurf() (in module surfify.plotting)": [[189, "surfify.plotting.plot_trisurf"]], "plot_trisurf() (in module surfify.plotting.surface)": [[190, "surfify.plotting.surface.plot_trisurf"]], "cart2sph() (in module surfify.utils)": [[192, "surfify.utils.cart2sph"]], "cart2sph() (in module surfify.utils.coord)": [[193, "surfify.utils.coord.cart2sph"]], "find_corresponding_order() (in module surfify.utils.coord)": [[194, "surfify.utils.coord.find_corresponding_order"]], "grid2text() (in module surfify.utils.coord)": [[195, "surfify.utils.coord.grid2text"]], "ico2ico() (in module surfify.utils.coord)": [[196, "surfify.utils.coord.ico2ico"]], "sph2cart() (in module surfify.utils.coord)": [[197, "surfify.utils.coord.sph2cart"]], "text2grid() (in module surfify.utils.coord)": [[198, "surfify.utils.coord.text2grid"]], "text2ico() (in module surfify.utils.coord)": [[199, "surfify.utils.coord.text2ico"]], "debug_msg() (in module surfify.utils)": [[200, "surfify.utils.debug_msg"]], "downsample() (in module surfify.utils)": [[201, "surfify.utils.downsample"]], "downsample_data() (in module surfify.utils)": [[202, "surfify.utils.downsample_data"]], "downsample_ico() (in module surfify.utils)": [[203, "surfify.utils.downsample_ico"]], "find_neighbors() (in module surfify.utils)": [[204, "surfify.utils.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils)": [[205, "surfify.utils.find_rotation_interpol_coefs"]], "get_logger() (in module surfify.utils)": [[206, "surfify.utils.get_logger"]], "get_rectangular_projection() (in module surfify.utils)": [[207, "surfify.utils.get_rectangular_projection"]], "grid2text() (in module surfify.utils)": [[208, "surfify.utils.grid2text"]], "ico2ico() (in module surfify.utils)": [[209, "surfify.utils.ico2ico"]], "icosahedron() (in module surfify.utils)": [[210, "surfify.utils.icosahedron"]], "interpolate() (in module surfify.utils)": [[211, "surfify.utils.interpolate"]], "interpolate_data() (in module surfify.utils)": [[212, "surfify.utils.interpolate_data"]], "hideprints (class in surfify.utils.io)": [[213, "surfify.utils.io.HidePrints"]], "compute_and_store() (in module surfify.utils.io)": [[214, "surfify.utils.io.compute_and_store"]], "decompose_cifti() (in module surfify.utils.io)": [[215, "surfify.utils.io.decompose_cifti"]], "read_freesurfer() (in module surfify.utils.io)": [[216, "surfify.utils.io.read_freesurfer"]], "read_gifti() (in module surfify.utils.io)": [[217, "surfify.utils.io.read_gifti"]], "surf_data_from_cifti() (in module surfify.utils.io)": [[218, "surfify.utils.io.surf_data_from_cifti"]], "ungzip() (in module surfify.utils.io)": [[219, "surfify.utils.io.ungzip"]], "volume_from_cifti() (in module surfify.utils.io)": [[220, "surfify.utils.io.volume_from_cifti"]], "write_freesurfer() (in module surfify.utils.io)": [[221, "surfify.utils.io.write_freesurfer"]], "write_gifti() (in module surfify.utils.io)": [[222, "surfify.utils.io.write_gifti"]], "min_depth_to_get_n_neighbors() (in module surfify.utils)": [[223, "surfify.utils.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils)": [[224, "surfify.utils.neighbors"]], "neighbors_rec() (in module surfify.utils)": [[225, "surfify.utils.neighbors_rec"]], "number_of_ico_vertices() (in module surfify.utils)": [[226, "surfify.utils.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils)": [[227, "surfify.utils.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils)": [[228, "surfify.utils.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils)": [[229, "surfify.utils.order_triangles"]], "patch_tri() (in module surfify.utils)": [[230, "surfify.utils.patch_tri"]], "rotate_data() (in module surfify.utils)": [[231, "surfify.utils.rotate_data"]], "_patch_tri_iter() (in module surfify.utils.sampling)": [[232, "surfify.utils.sampling._patch_tri_iter"]], "build_freesurfer_ico() (in module surfify.utils.sampling)": [[233, "surfify.utils.sampling.build_freesurfer_ico"]], "build_fslr_ref() (in module surfify.utils.sampling)": [[234, "surfify.utils.sampling.build_fslr_ref"]], "downsample() (in module surfify.utils.sampling)": [[235, "surfify.utils.sampling.downsample"]], "downsample_data() (in module surfify.utils.sampling)": [[236, "surfify.utils.sampling.downsample_data"]], "downsample_ico() (in module surfify.utils.sampling)": [[237, "surfify.utils.sampling.downsample_ico"]], "find_neighbors() (in module surfify.utils.sampling)": [[238, "surfify.utils.sampling.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils.sampling)": [[239, "surfify.utils.sampling.find_rotation_interpol_coefs"]], "get_angle_with_xaxis() (in module surfify.utils.sampling)": [[240, "surfify.utils.sampling.get_angle_with_xaxis"]], "get_rectangular_projection() (in module surfify.utils.sampling)": [[241, "surfify.utils.sampling.get_rectangular_projection"]], "icosahedron() (in module surfify.utils.sampling)": [[242, "surfify.utils.sampling.icosahedron"]], "interpolate() (in module surfify.utils.sampling)": [[243, "surfify.utils.sampling.interpolate"]], "interpolate_data() (in module surfify.utils.sampling)": [[244, "surfify.utils.sampling.interpolate_data"]], "middle_point() (in module surfify.utils.sampling)": [[245, "surfify.utils.sampling.middle_point"]], "min_depth_to_get_n_neighbors() (in module surfify.utils.sampling)": [[246, "surfify.utils.sampling.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils.sampling)": [[247, "surfify.utils.sampling.neighbors"]], "neighbors_rec() (in module surfify.utils.sampling)": [[248, "surfify.utils.sampling.neighbors_rec"]], "normalize() (in module surfify.utils.sampling)": [[249, "surfify.utils.sampling.normalize"]], "number_of_ico_vertices() (in module surfify.utils.sampling)": [[250, "surfify.utils.sampling.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils.sampling)": [[251, "surfify.utils.sampling.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils.sampling)": [[252, "surfify.utils.sampling.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils.sampling)": [[253, "surfify.utils.sampling.order_triangles"]], "patch_tri() (in module surfify.utils.sampling)": [[254, "surfify.utils.sampling.patch_tri"]], "rotate_data() (in module surfify.utils.sampling)": [[255, "surfify.utils.sampling.rotate_data"]], "triangles_to_edges() (in module surfify.utils.sampling)": [[256, "surfify.utils.sampling.triangles_to_edges"]], "vertex_adjacency_graph() (in module surfify.utils.sampling)": [[257, "surfify.utils.sampling.vertex_adjacency_graph"]], "setup_logging() (in module surfify.utils)": [[258, "surfify.utils.setup_logging"]], "sph2cart() (in module surfify.utils)": [[259, "surfify.utils.sph2cart"]], "text2grid() (in module surfify.utils)": [[260, "surfify.utils.text2grid"]], "text2ico() (in module surfify.utils)": [[261, "surfify.utils.text2ico"]]}})
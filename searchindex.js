Search.setIndex({"docnames": ["auto_gallery/index", "auto_gallery/sg_execution_times", "auto_gallery/simclr_stl10", "auto_gallery/surfify/index", "auto_gallery/surfify/plot_augmentation", "auto_gallery/surfify/plot_match_icosahedron", "auto_gallery/surfify/plot_project_texture", "auto_gallery/surfify/plot_spherical_neighbors", "auto_gallery/surfify/plot_unet_segmentation", "auto_gallery/surfify/sg_execution_times", "generated/documentation", "generated/installation", "generated/nidl", "generated/nidl.callbacks", "generated/nidl.callbacks.check_typing.BatchTypingCallback", "generated/nidl.datasets", "generated/nidl.estimators", "generated/nidl.estimators.BaseEstimator", "generated/nidl.estimators.ClassifierMixin", "generated/nidl.estimators.ClusterMixin", "generated/nidl.estimators.RegressorMixin", "generated/nidl.estimators.TransformerMixin", "generated/nidl.estimators.base.BaseEstimator", "generated/nidl.estimators.base.ClassifierMixin", "generated/nidl.estimators.base.ClusterMixin", "generated/nidl.estimators.base.RegressorMixin", "generated/nidl.estimators.base.TransformerMixin", "generated/nidl.estimators.linear", "generated/nidl.estimators.linear.LogisticRegression", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression", "generated/nidl.estimators.ssl", "generated/nidl.estimators.ssl.SimCLR", "generated/nidl.estimators.ssl.simclr.SimCLR", "generated/nidl.experiment.fetch_experiment", "generated/nidl.experiment.filter_config", "generated/nidl.experiment.get_env", "generated/nidl.experiment.load_interface", "generated/nidl.experiment.update_params", "generated/nidl.transforms", "generated/nidl.transforms.ssl.ContrastiveTransformations", "generated/nidl.utils", "generated/nidl.utils.Bunch", "generated/nidl.utils.Weights", "generated/nidl.utils.bunch.Bunch", "generated/nidl.utils.color.Colored", "generated/nidl.utils.color.attr", "generated/nidl.utils.color.fg", "generated/nidl.utils.color.hex", "generated/nidl.utils.color.print_multicolor", "generated/nidl.utils.color.print_result", "generated/nidl.utils.color.print_subtitle", "generated/nidl.utils.color.print_title", "generated/nidl.utils.color.print_warning", "generated/nidl.utils.color.random_stylize", "generated/nidl.utils.color.stylize", "generated/nidl.utils.print_multicolor", "generated/nidl.utils.validation._AvailableIfDescriptor", "generated/nidl.utils.validation._estimator_is", "generated/nidl.utils.validation.available_if", "generated/nidl.utils.validation.check_is_fitted", "generated/nidl.utils.weights.Weights", "generated/search", "generated/surfify", "generated/surfify.augmentation", "generated/surfify.augmentation.BaseTransformer", "generated/surfify.augmentation.GroupMixUp", "generated/surfify.augmentation.HemiMixUp", "generated/surfify.augmentation.SurfBlur", "generated/surfify.augmentation.SurfCutOut", "generated/surfify.augmentation.SurfNoise", "generated/surfify.augmentation.SurfRotation", "generated/surfify.augmentation.Transformer", "generated/surfify.augmentation.apply_chained_transforms", "generated/surfify.augmentation.base.SurfBlur", "generated/surfify.augmentation.base.SurfCutOut", "generated/surfify.augmentation.base.SurfNoise", "generated/surfify.augmentation.base.SurfRotation", "generated/surfify.augmentation.interval", "generated/surfify.augmentation.mixup.GroupMixUp", "generated/surfify.augmentation.mixup.HemiMixUp", "generated/surfify.augmentation.mixup.MixUpAugmentation", "generated/surfify.augmentation.multichannel_augmentation", "generated/surfify.augmentation.utils.BaseTransformer", "generated/surfify.augmentation.utils.RandomAugmentation", "generated/surfify.augmentation.utils.Transformer", "generated/surfify.augmentation.utils.apply_chained_transforms", "generated/surfify.augmentation.utils.interval", "generated/surfify.augmentation.utils.listify", "generated/surfify.augmentation.utils.multichannel_augmentation", "generated/surfify.datasets", "generated/surfify.datasets.ClassificationDataset", "generated/surfify.datasets.GenericSurfDataset", "generated/surfify.datasets._generic.GenericSurfDataset", "generated/surfify.datasets._samples_generator.ClassificationDataset", "generated/surfify.datasets._samples_generator.make_classification", "generated/surfify.datasets.make_classification", "generated/surfify.losses", "generated/surfify.losses.SphericalVAELoss", "generated/surfify.losses.vae.SphericalVAELoss", "generated/surfify.losses.vae.log_likelihood", "generated/surfify.models", "generated/surfify.models.HemiFusionDecoder", "generated/surfify.models.HemiFusionEncoder", "generated/surfify.models.SphericalBase", "generated/surfify.models.SphericalGUNet", "generated/surfify.models.SphericalGVGG", "generated/surfify.models.SphericalGVGG11", "generated/surfify.models.SphericalGVGG11BN", "generated/surfify.models.SphericalGVGG13", "generated/surfify.models.SphericalGVGG13BN", "generated/surfify.models.SphericalGVGG16", "generated/surfify.models.SphericalGVGG16BN", "generated/surfify.models.SphericalGVGG19", "generated/surfify.models.SphericalGVGG19BN", "generated/surfify.models.SphericalHemiFusionDecoder", "generated/surfify.models.SphericalHemiFusionEncoder", "generated/surfify.models.SphericalUNet", "generated/surfify.models.SphericalVAE", "generated/surfify.models.SphericalVGG", "generated/surfify.models.SphericalVGG11", "generated/surfify.models.SphericalVGG11BN", "generated/surfify.models.SphericalVGG13", "generated/surfify.models.SphericalVGG13BN", "generated/surfify.models.SphericalVGG16", "generated/surfify.models.SphericalVGG16BN", "generated/surfify.models.SphericalVGG19", "generated/surfify.models.SphericalVGG19BN", "generated/surfify.models.base.SphericalBase", "generated/surfify.models.unet.DownBlock", "generated/surfify.models.unet.DownGBlock", "generated/surfify.models.unet.GraphicalUNet", "generated/surfify.models.unet.SphericalGUNet", "generated/surfify.models.unet.SphericalUNet", "generated/surfify.models.unet.UpBlock", "generated/surfify.models.unet.UpGBlock", "generated/surfify.models.vae.HemiFusionDecoder", "generated/surfify.models.vae.HemiFusionEncoder", "generated/surfify.models.vae.SphericalHemiFusionDecoder", "generated/surfify.models.vae.SphericalHemiFusionEncoder", "generated/surfify.models.vae.SphericalVAE", "generated/surfify.models.vae.compute_output_dim", "generated/surfify.models.vgg.SphericalGVGG", "generated/surfify.models.vgg.SphericalGVGG11", "generated/surfify.models.vgg.SphericalGVGG11BN", "generated/surfify.models.vgg.SphericalGVGG13", "generated/surfify.models.vgg.SphericalGVGG13BN", "generated/surfify.models.vgg.SphericalGVGG16", "generated/surfify.models.vgg.SphericalGVGG16BN", "generated/surfify.models.vgg.SphericalGVGG19", "generated/surfify.models.vgg.SphericalGVGG19BN", "generated/surfify.models.vgg.SphericalVGG", "generated/surfify.models.vgg.SphericalVGG11", "generated/surfify.models.vgg.SphericalVGG11BN", "generated/surfify.models.vgg.SphericalVGG13", "generated/surfify.models.vgg.SphericalVGG13BN", "generated/surfify.models.vgg.SphericalVGG16", "generated/surfify.models.vgg.SphericalVGG16BN", "generated/surfify.models.vgg.SphericalVGG19", "generated/surfify.models.vgg.SphericalVGG19BN", "generated/surfify.models.vgg.class_factory", "generated/surfify.nn", "generated/surfify.nn.IcoDiNeConv", "generated/surfify.nn.IcoFixIndexUpSample", "generated/surfify.nn.IcoGenericUpConv", "generated/surfify.nn.IcoMaxIndexUpSample", "generated/surfify.nn.IcoPool", "generated/surfify.nn.IcoRePaConv", "generated/surfify.nn.IcoSpMaConv", "generated/surfify.nn.IcoSpMaConvTranspose", "generated/surfify.nn.IcoUpConv", "generated/surfify.nn.IcoUpSample", "generated/surfify.nn.functional.circular_pad", "generated/surfify.nn.modules.IcoDiNeConv", "generated/surfify.nn.modules.IcoFixIndexUpSample", "generated/surfify.nn.modules.IcoGenericUpConv", "generated/surfify.nn.modules.IcoMaxIndexUpSample", "generated/surfify.nn.modules.IcoPool", "generated/surfify.nn.modules.IcoRePaConv", "generated/surfify.nn.modules.IcoSpMaConv", "generated/surfify.nn.modules.IcoSpMaConvTranspose", "generated/surfify.nn.modules.IcoUpConv", "generated/surfify.nn.modules.IcoUpSample", "generated/surfify.plotting", "generated/surfify.plotting.plot_trisurf", "generated/surfify.plotting.surface.plot_trisurf", "generated/surfify.utils", "generated/surfify.utils.cart2sph", "generated/surfify.utils.coord.cart2sph", "generated/surfify.utils.coord.find_corresponding_order", "generated/surfify.utils.coord.grid2text", "generated/surfify.utils.coord.ico2ico", "generated/surfify.utils.coord.sph2cart", "generated/surfify.utils.coord.text2grid", "generated/surfify.utils.coord.text2ico", "generated/surfify.utils.debug_msg", "generated/surfify.utils.downsample", "generated/surfify.utils.downsample_data", "generated/surfify.utils.downsample_ico", "generated/surfify.utils.find_neighbors", "generated/surfify.utils.find_rotation_interpol_coefs", "generated/surfify.utils.get_logger", "generated/surfify.utils.get_rectangular_projection", "generated/surfify.utils.grid2text", "generated/surfify.utils.ico2ico", "generated/surfify.utils.icosahedron", "generated/surfify.utils.interpolate", "generated/surfify.utils.interpolate_data", "generated/surfify.utils.io.HidePrints", "generated/surfify.utils.io.compute_and_store", "generated/surfify.utils.io.decompose_cifti", "generated/surfify.utils.io.read_freesurfer", "generated/surfify.utils.io.read_gifti", "generated/surfify.utils.io.surf_data_from_cifti", "generated/surfify.utils.io.ungzip", "generated/surfify.utils.io.volume_from_cifti", "generated/surfify.utils.io.write_freesurfer", "generated/surfify.utils.io.write_gifti", "generated/surfify.utils.min_depth_to_get_n_neighbors", "generated/surfify.utils.neighbors", "generated/surfify.utils.neighbors_rec", "generated/surfify.utils.number_of_ico_vertices", "generated/surfify.utils.number_of_neighbors", "generated/surfify.utils.order_of_ico_from_vertices", "generated/surfify.utils.order_triangles", "generated/surfify.utils.patch_tri", "generated/surfify.utils.rotate_data", "generated/surfify.utils.sampling._patch_tri_iter", "generated/surfify.utils.sampling.build_freesurfer_ico", "generated/surfify.utils.sampling.build_fslr_ref", "generated/surfify.utils.sampling.downsample", "generated/surfify.utils.sampling.downsample_data", "generated/surfify.utils.sampling.downsample_ico", "generated/surfify.utils.sampling.find_neighbors", "generated/surfify.utils.sampling.find_rotation_interpol_coefs", "generated/surfify.utils.sampling.get_angle_with_xaxis", "generated/surfify.utils.sampling.get_rectangular_projection", "generated/surfify.utils.sampling.icosahedron", "generated/surfify.utils.sampling.interpolate", "generated/surfify.utils.sampling.interpolate_data", "generated/surfify.utils.sampling.middle_point", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors", "generated/surfify.utils.sampling.neighbors", "generated/surfify.utils.sampling.neighbors_rec", "generated/surfify.utils.sampling.normalize", "generated/surfify.utils.sampling.number_of_ico_vertices", "generated/surfify.utils.sampling.number_of_neighbors", "generated/surfify.utils.sampling.order_of_ico_from_vertices", "generated/surfify.utils.sampling.order_triangles", "generated/surfify.utils.sampling.patch_tri", "generated/surfify.utils.sampling.rotate_data", "generated/surfify.utils.sampling.triangles_to_edges", "generated/surfify.utils.sampling.vertex_adjacency_graph", "generated/surfify.utils.setup_logging", "generated/surfify.utils.sph2cart", "generated/surfify.utils.text2grid", "generated/surfify.utils.text2ico", "index", "sg_execution_times"], "filenames": ["auto_gallery/index.rst", "auto_gallery/sg_execution_times.rst", "auto_gallery/simclr_stl10.rst", "auto_gallery/surfify/index.rst", "auto_gallery/surfify/plot_augmentation.rst", "auto_gallery/surfify/plot_match_icosahedron.rst", "auto_gallery/surfify/plot_project_texture.rst", "auto_gallery/surfify/plot_spherical_neighbors.rst", "auto_gallery/surfify/plot_unet_segmentation.rst", "auto_gallery/surfify/sg_execution_times.rst", "generated/documentation.rst", "generated/installation.rst", "generated/nidl.rst", "generated/nidl.callbacks.rst", "generated/nidl.callbacks.check_typing.BatchTypingCallback.rst", "generated/nidl.datasets.rst", "generated/nidl.estimators.rst", "generated/nidl.estimators.BaseEstimator.rst", "generated/nidl.estimators.ClassifierMixin.rst", "generated/nidl.estimators.ClusterMixin.rst", "generated/nidl.estimators.RegressorMixin.rst", "generated/nidl.estimators.TransformerMixin.rst", "generated/nidl.estimators.base.BaseEstimator.rst", "generated/nidl.estimators.base.ClassifierMixin.rst", "generated/nidl.estimators.base.ClusterMixin.rst", "generated/nidl.estimators.base.RegressorMixin.rst", "generated/nidl.estimators.base.TransformerMixin.rst", "generated/nidl.estimators.linear.rst", "generated/nidl.estimators.linear.LogisticRegression.rst", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression.rst", "generated/nidl.estimators.ssl.rst", "generated/nidl.estimators.ssl.SimCLR.rst", "generated/nidl.estimators.ssl.simclr.SimCLR.rst", "generated/nidl.experiment.fetch_experiment.rst", "generated/nidl.experiment.filter_config.rst", "generated/nidl.experiment.get_env.rst", "generated/nidl.experiment.load_interface.rst", "generated/nidl.experiment.update_params.rst", "generated/nidl.transforms.rst", "generated/nidl.transforms.ssl.ContrastiveTransformations.rst", "generated/nidl.utils.rst", "generated/nidl.utils.Bunch.rst", "generated/nidl.utils.Weights.rst", "generated/nidl.utils.bunch.Bunch.rst", "generated/nidl.utils.color.Colored.rst", "generated/nidl.utils.color.attr.rst", "generated/nidl.utils.color.fg.rst", "generated/nidl.utils.color.hex.rst", "generated/nidl.utils.color.print_multicolor.rst", "generated/nidl.utils.color.print_result.rst", "generated/nidl.utils.color.print_subtitle.rst", "generated/nidl.utils.color.print_title.rst", "generated/nidl.utils.color.print_warning.rst", "generated/nidl.utils.color.random_stylize.rst", "generated/nidl.utils.color.stylize.rst", "generated/nidl.utils.print_multicolor.rst", "generated/nidl.utils.validation._AvailableIfDescriptor.rst", "generated/nidl.utils.validation._estimator_is.rst", "generated/nidl.utils.validation.available_if.rst", "generated/nidl.utils.validation.check_is_fitted.rst", "generated/nidl.utils.weights.Weights.rst", "generated/search.rst", "generated/surfify.rst", "generated/surfify.augmentation.rst", "generated/surfify.augmentation.BaseTransformer.rst", "generated/surfify.augmentation.GroupMixUp.rst", "generated/surfify.augmentation.HemiMixUp.rst", "generated/surfify.augmentation.SurfBlur.rst", "generated/surfify.augmentation.SurfCutOut.rst", "generated/surfify.augmentation.SurfNoise.rst", "generated/surfify.augmentation.SurfRotation.rst", "generated/surfify.augmentation.Transformer.rst", "generated/surfify.augmentation.apply_chained_transforms.rst", "generated/surfify.augmentation.base.SurfBlur.rst", "generated/surfify.augmentation.base.SurfCutOut.rst", "generated/surfify.augmentation.base.SurfNoise.rst", "generated/surfify.augmentation.base.SurfRotation.rst", "generated/surfify.augmentation.interval.rst", "generated/surfify.augmentation.mixup.GroupMixUp.rst", "generated/surfify.augmentation.mixup.HemiMixUp.rst", "generated/surfify.augmentation.mixup.MixUpAugmentation.rst", "generated/surfify.augmentation.multichannel_augmentation.rst", "generated/surfify.augmentation.utils.BaseTransformer.rst", "generated/surfify.augmentation.utils.RandomAugmentation.rst", "generated/surfify.augmentation.utils.Transformer.rst", "generated/surfify.augmentation.utils.apply_chained_transforms.rst", "generated/surfify.augmentation.utils.interval.rst", "generated/surfify.augmentation.utils.listify.rst", "generated/surfify.augmentation.utils.multichannel_augmentation.rst", "generated/surfify.datasets.rst", "generated/surfify.datasets.ClassificationDataset.rst", "generated/surfify.datasets.GenericSurfDataset.rst", "generated/surfify.datasets._generic.GenericSurfDataset.rst", "generated/surfify.datasets._samples_generator.ClassificationDataset.rst", "generated/surfify.datasets._samples_generator.make_classification.rst", "generated/surfify.datasets.make_classification.rst", "generated/surfify.losses.rst", "generated/surfify.losses.SphericalVAELoss.rst", "generated/surfify.losses.vae.SphericalVAELoss.rst", "generated/surfify.losses.vae.log_likelihood.rst", "generated/surfify.models.rst", "generated/surfify.models.HemiFusionDecoder.rst", "generated/surfify.models.HemiFusionEncoder.rst", "generated/surfify.models.SphericalBase.rst", "generated/surfify.models.SphericalGUNet.rst", "generated/surfify.models.SphericalGVGG.rst", "generated/surfify.models.SphericalGVGG11.rst", "generated/surfify.models.SphericalGVGG11BN.rst", "generated/surfify.models.SphericalGVGG13.rst", "generated/surfify.models.SphericalGVGG13BN.rst", "generated/surfify.models.SphericalGVGG16.rst", "generated/surfify.models.SphericalGVGG16BN.rst", "generated/surfify.models.SphericalGVGG19.rst", "generated/surfify.models.SphericalGVGG19BN.rst", "generated/surfify.models.SphericalHemiFusionDecoder.rst", "generated/surfify.models.SphericalHemiFusionEncoder.rst", "generated/surfify.models.SphericalUNet.rst", "generated/surfify.models.SphericalVAE.rst", "generated/surfify.models.SphericalVGG.rst", "generated/surfify.models.SphericalVGG11.rst", "generated/surfify.models.SphericalVGG11BN.rst", "generated/surfify.models.SphericalVGG13.rst", "generated/surfify.models.SphericalVGG13BN.rst", "generated/surfify.models.SphericalVGG16.rst", "generated/surfify.models.SphericalVGG16BN.rst", "generated/surfify.models.SphericalVGG19.rst", "generated/surfify.models.SphericalVGG19BN.rst", "generated/surfify.models.base.SphericalBase.rst", "generated/surfify.models.unet.DownBlock.rst", "generated/surfify.models.unet.DownGBlock.rst", "generated/surfify.models.unet.GraphicalUNet.rst", "generated/surfify.models.unet.SphericalGUNet.rst", "generated/surfify.models.unet.SphericalUNet.rst", "generated/surfify.models.unet.UpBlock.rst", "generated/surfify.models.unet.UpGBlock.rst", "generated/surfify.models.vae.HemiFusionDecoder.rst", "generated/surfify.models.vae.HemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalHemiFusionDecoder.rst", "generated/surfify.models.vae.SphericalHemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalVAE.rst", "generated/surfify.models.vae.compute_output_dim.rst", "generated/surfify.models.vgg.SphericalGVGG.rst", "generated/surfify.models.vgg.SphericalGVGG11.rst", "generated/surfify.models.vgg.SphericalGVGG11BN.rst", "generated/surfify.models.vgg.SphericalGVGG13.rst", "generated/surfify.models.vgg.SphericalGVGG13BN.rst", "generated/surfify.models.vgg.SphericalGVGG16.rst", "generated/surfify.models.vgg.SphericalGVGG16BN.rst", "generated/surfify.models.vgg.SphericalGVGG19.rst", "generated/surfify.models.vgg.SphericalGVGG19BN.rst", "generated/surfify.models.vgg.SphericalVGG.rst", "generated/surfify.models.vgg.SphericalVGG11.rst", "generated/surfify.models.vgg.SphericalVGG11BN.rst", "generated/surfify.models.vgg.SphericalVGG13.rst", "generated/surfify.models.vgg.SphericalVGG13BN.rst", "generated/surfify.models.vgg.SphericalVGG16.rst", "generated/surfify.models.vgg.SphericalVGG16BN.rst", "generated/surfify.models.vgg.SphericalVGG19.rst", "generated/surfify.models.vgg.SphericalVGG19BN.rst", "generated/surfify.models.vgg.class_factory.rst", "generated/surfify.nn.rst", "generated/surfify.nn.IcoDiNeConv.rst", "generated/surfify.nn.IcoFixIndexUpSample.rst", "generated/surfify.nn.IcoGenericUpConv.rst", "generated/surfify.nn.IcoMaxIndexUpSample.rst", "generated/surfify.nn.IcoPool.rst", "generated/surfify.nn.IcoRePaConv.rst", "generated/surfify.nn.IcoSpMaConv.rst", "generated/surfify.nn.IcoSpMaConvTranspose.rst", "generated/surfify.nn.IcoUpConv.rst", "generated/surfify.nn.IcoUpSample.rst", "generated/surfify.nn.functional.circular_pad.rst", "generated/surfify.nn.modules.IcoDiNeConv.rst", "generated/surfify.nn.modules.IcoFixIndexUpSample.rst", "generated/surfify.nn.modules.IcoGenericUpConv.rst", "generated/surfify.nn.modules.IcoMaxIndexUpSample.rst", "generated/surfify.nn.modules.IcoPool.rst", "generated/surfify.nn.modules.IcoRePaConv.rst", "generated/surfify.nn.modules.IcoSpMaConv.rst", "generated/surfify.nn.modules.IcoSpMaConvTranspose.rst", "generated/surfify.nn.modules.IcoUpConv.rst", "generated/surfify.nn.modules.IcoUpSample.rst", "generated/surfify.plotting.rst", "generated/surfify.plotting.plot_trisurf.rst", "generated/surfify.plotting.surface.plot_trisurf.rst", "generated/surfify.utils.rst", "generated/surfify.utils.cart2sph.rst", "generated/surfify.utils.coord.cart2sph.rst", "generated/surfify.utils.coord.find_corresponding_order.rst", "generated/surfify.utils.coord.grid2text.rst", "generated/surfify.utils.coord.ico2ico.rst", "generated/surfify.utils.coord.sph2cart.rst", "generated/surfify.utils.coord.text2grid.rst", "generated/surfify.utils.coord.text2ico.rst", "generated/surfify.utils.debug_msg.rst", "generated/surfify.utils.downsample.rst", "generated/surfify.utils.downsample_data.rst", "generated/surfify.utils.downsample_ico.rst", "generated/surfify.utils.find_neighbors.rst", "generated/surfify.utils.find_rotation_interpol_coefs.rst", "generated/surfify.utils.get_logger.rst", "generated/surfify.utils.get_rectangular_projection.rst", "generated/surfify.utils.grid2text.rst", "generated/surfify.utils.ico2ico.rst", "generated/surfify.utils.icosahedron.rst", "generated/surfify.utils.interpolate.rst", "generated/surfify.utils.interpolate_data.rst", "generated/surfify.utils.io.HidePrints.rst", "generated/surfify.utils.io.compute_and_store.rst", "generated/surfify.utils.io.decompose_cifti.rst", "generated/surfify.utils.io.read_freesurfer.rst", "generated/surfify.utils.io.read_gifti.rst", "generated/surfify.utils.io.surf_data_from_cifti.rst", "generated/surfify.utils.io.ungzip.rst", "generated/surfify.utils.io.volume_from_cifti.rst", "generated/surfify.utils.io.write_freesurfer.rst", "generated/surfify.utils.io.write_gifti.rst", "generated/surfify.utils.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.neighbors.rst", "generated/surfify.utils.neighbors_rec.rst", "generated/surfify.utils.number_of_ico_vertices.rst", "generated/surfify.utils.number_of_neighbors.rst", "generated/surfify.utils.order_of_ico_from_vertices.rst", "generated/surfify.utils.order_triangles.rst", "generated/surfify.utils.patch_tri.rst", "generated/surfify.utils.rotate_data.rst", "generated/surfify.utils.sampling._patch_tri_iter.rst", "generated/surfify.utils.sampling.build_freesurfer_ico.rst", "generated/surfify.utils.sampling.build_fslr_ref.rst", "generated/surfify.utils.sampling.downsample.rst", "generated/surfify.utils.sampling.downsample_data.rst", "generated/surfify.utils.sampling.downsample_ico.rst", "generated/surfify.utils.sampling.find_neighbors.rst", "generated/surfify.utils.sampling.find_rotation_interpol_coefs.rst", "generated/surfify.utils.sampling.get_angle_with_xaxis.rst", "generated/surfify.utils.sampling.get_rectangular_projection.rst", "generated/surfify.utils.sampling.icosahedron.rst", "generated/surfify.utils.sampling.interpolate.rst", "generated/surfify.utils.sampling.interpolate_data.rst", "generated/surfify.utils.sampling.middle_point.rst", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.sampling.neighbors.rst", "generated/surfify.utils.sampling.neighbors_rec.rst", "generated/surfify.utils.sampling.normalize.rst", "generated/surfify.utils.sampling.number_of_ico_vertices.rst", "generated/surfify.utils.sampling.number_of_neighbors.rst", "generated/surfify.utils.sampling.order_of_ico_from_vertices.rst", "generated/surfify.utils.sampling.order_triangles.rst", "generated/surfify.utils.sampling.patch_tri.rst", "generated/surfify.utils.sampling.rotate_data.rst", "generated/surfify.utils.sampling.triangles_to_edges.rst", "generated/surfify.utils.sampling.vertex_adjacency_graph.rst", "generated/surfify.utils.setup_logging.rst", "generated/surfify.utils.sph2cart.rst", "generated/surfify.utils.text2grid.rst", "generated/surfify.utils.text2ico.rst", "index.rst", "sg_execution_times.rst"], "titles": ["Use Cases", "Computation times", "Self-Supervised Contrastive Learning with SimCLR", "Spherical Modules Use Cases", "Spherical augmentations", "Icosahedron matching", "Project texture", "Spherical neighbors", "UNet segmentation", "Computation times", "API documentation of NIDL", "Installing <cite>nidl</cite>", "API documentation of <em>nidl</em>", "API documentation of <em>nidl.callbacks</em>", "&lt;no title&gt;", "API documentation of <em>nidl.datasets</em>", "API documentation of <em>nidl.estimators</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.estimators.linear</em>", "Examples", "Examples", "API documentation of <em>nidl.estimators.ssl</em>", "Examples", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.transforms</em>", "&lt;no title&gt;", "API documentation of <em>nidl.utils</em>", "&lt;no title&gt;", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Examples", "Search in API documentation of NIDL", "API documentation of <em>surfify</em>", "API documentation of <em>surfify.augmentation</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.losses</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.models</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.nn</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.plotting</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computation times"], "terms": {"self": [0, 1, 10, 28, 29, 30, 31, 32, 38, 39, 42, 56, 58, 60, 257], "supervis": [0, 1, 10, 28, 29, 30, 31, 32, 38, 39, 42, 60, 257], "contrast": [0, 1, 28, 29, 31, 32, 42, 60, 91, 92, 257], "learn": [0, 1, 28, 29, 31, 32, 38, 39, 42, 60, 100, 117, 139, 161, 172, 256, 257], "simclr": [0, 1, 10, 28, 29, 31, 32, 42, 60, 61, 257], "neighbor": [0, 3, 4, 9, 10, 61, 65, 67, 68, 73, 74, 78, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 169, 172, 174, 175, 176, 177, 180, 185, 189, 192, 195, 198, 199, 202, 205, 217, 218, 219, 221, 225, 229, 232, 233, 237, 240, 241, 242, 245, 249, 251, 254, 257], "unet": [0, 3, 9, 10, 61, 104, 116, 128, 129, 130, 131, 132, 133, 134, 257], "segment": [0, 3, 9, 257], "project": [0, 3, 4, 5, 7, 9, 11, 31, 32, 33, 70, 76, 190, 193, 195, 198, 201, 203, 204, 218, 219, 224, 229, 232, 234, 235, 236, 239, 241, 242, 248, 255, 257], "textur": [0, 3, 4, 9, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 101, 102, 105, 114, 115, 117, 118, 135, 136, 137, 138, 139, 141, 150, 183, 184, 189, 192, 193, 196, 202, 205, 206, 225, 230, 237, 238, 249, 254, 255, 257], "icosahedron": [0, 3, 4, 6, 7, 8, 9, 10, 61, 67, 68, 70, 73, 74, 76, 90, 93, 94, 95, 100, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 189, 190, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257], "match": [0, 3, 9, 188, 193, 255, 257], "augment": [0, 3, 9, 10, 31, 32, 33, 39, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 257], "download": [0, 2, 4, 5, 6, 7, 8, 40, 42, 60], "all": [0, 2, 5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 104, 116, 130, 131, 132, 166, 167, 168, 177, 178, 179, 257], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 39, 41, 43, 58, 103, 105, 116, 117, 118, 127, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257], "python": [0, 2, 4, 5, 6, 7, 8, 56], "sourc": [0, 2, 4, 5, 6, 7, 8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "code": [0, 2, 4, 5, 6, 7, 8, 14, 33, 36, 53, 54], "auto_gallery_python": 0, "zip": [0, 2, 4, 5, 6, 7, 8, 213], "jupyt": [0, 2, 4, 5, 6, 7, 8], "notebook": [0, 2, 4, 5, 6, 7, 8], "auto_gallery_jupyt": 0, "galleri": [0, 2, 4, 5, 6, 7, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257], "gener": [0, 2, 4, 5, 6, 7, 8, 10, 15, 28, 29, 31, 32, 80, 89, 90, 93, 94, 95, 100, 192, 198, 213, 215, 216, 227, 228, 232, 254], "sphinx": [0, 2, 4, 5, 6, 7, 8], "00": [1, 9, 257], "000": [1, 2, 257], "total": [1, 4, 5, 6, 7, 8, 9, 257], "execut": [1, 9, 208, 257], "1": [1, 2, 4, 5, 6, 7, 8, 9, 28, 29, 31, 32, 33, 41, 43, 58, 64, 65, 68, 74, 78, 82, 83, 90, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 167, 168, 169, 172, 174, 175, 176, 178, 179, 180, 183, 184, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 227, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 251, 254, 255, 257], "file": [1, 9, 33, 42, 60, 91, 92, 209, 210, 211, 213, 215, 216, 252, 256, 257], "from": [1, 2, 4, 5, 6, 7, 8, 9, 11, 17, 22, 28, 29, 31, 32, 33, 41, 43, 58, 65, 68, 74, 78, 91, 92, 101, 103, 104, 105, 116, 117, 118, 127, 131, 132, 135, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 254, 255, 257], "auto_galleri": [1, 9], "mem": [1, 9, 257], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 257], "simclr_stl10": [1, 2, 257], "py": [1, 2, 4, 5, 6, 7, 8, 9, 257], "0": [1, 2, 4, 5, 6, 7, 8, 14, 28, 29, 31, 32, 33, 58, 64, 68, 70, 74, 76, 82, 83, 103, 117, 127, 130, 139, 162, 167, 168, 173, 178, 179, 183, 184, 188, 190, 193, 195, 198, 203, 218, 219, 223, 224, 225, 229, 232, 241, 242, 247, 248, 249, 251, 255, 257], "go": [2, 4, 5, 6, 7, 8], "end": [2, 4, 5, 6, 7, 8, 28, 29, 31, 32, 53, 54, 59], "full": [2, 4, 5, 6, 7, 8, 10, 197, 231], "http": [2, 11, 56, 100, 212, 214], "uvadlc": 2, "readthedoc": 2, "io": [2, 10, 61, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "In": [2, 28, 29, 31, 32, 37, 39, 104, 116, 131, 132, 159], "thi": [2, 5, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "tutori": [2, 11], "we": [2, 5, 6, 8, 28, 29, 31, 32, 39, 57, 159, 171, 212, 214], "take": [2, 31, 32, 130, 140, 166, 167, 168, 177, 178, 179], "closer": [2, 31, 32], "look": [2, 31, 32, 198, 232], "also": [2, 10, 17, 22, 28, 29, 31, 32, 56, 89, 91, 92, 208, 256], "sometim": [2, 41, 43], "call": [2, 14, 17, 22, 28, 29, 31, 32, 39, 59, 91, 92, 130, 166, 167, 168, 177, 178, 179, 208, 225, 249], "unsupervis": 2, "describ": [2, 31, 32, 33, 256], "scenario": 2, "where": [2, 6, 31, 32, 33, 42, 60, 91, 92, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172, 183, 184, 192, 251, 254], "have": [2, 5, 6, 14, 28, 29, 31, 32, 208, 218, 241], "given": [2, 42, 59, 60, 99, 101, 135, 208, 225, 249, 250, 251], "input": [2, 8, 14, 33, 35, 39, 42, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 85, 87, 91, 92, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 188, 189, 192, 193, 202, 208, 210, 211, 226, 254, 255], "accompani": 2, "label": [2, 6, 28, 29, 94, 95, 183, 184], "classic": [2, 116, 132, 133], "wai": [2, 17, 22, 39, 218, 241, 256], "howev": 2, "still": 2, "contain": [2, 28, 29, 31, 32, 33, 41, 43, 91, 92, 103, 127, 140, 183, 184, 208, 224, 248], "lot": 2, "inform": [2, 33, 91, 92, 100, 103, 127], "which": [2, 17, 22, 28, 29, 31, 32, 59, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 188, 198, 225, 232, 249], "can": [2, 5, 28, 29, 31, 32, 33, 57, 64, 71, 82, 84, 91, 92, 104, 105, 116, 117, 118, 130, 131, 132, 139, 140, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 207, 208], "how": [2, 4, 5, 7, 8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "ar": [2, 5, 6, 8, 14, 28, 29, 31, 32, 33, 34, 41, 43, 63, 91, 92, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 171, 188, 192, 205, 218, 225, 227, 237, 241, 249, 251, 254], "imag": [2, 6, 28, 29, 31, 32, 39, 63, 91, 92, 99, 192, 209, 254], "differ": [2, 5, 31, 32, 33, 39, 68, 74, 91, 92, 103, 104, 116, 127, 131, 132], "each": [2, 5, 17, 22, 28, 29, 31, 32, 33, 39, 65, 67, 68, 73, 74, 78, 81, 88, 90, 93, 94, 95, 99, 101, 102, 103, 104, 114, 115, 116, 127, 130, 131, 132, 135, 136, 137, 138, 198, 199, 218, 219, 225, 232, 233, 241, 242, 249], "other": [2, 5, 31, 32, 33, 193, 255], "what": [2, 28, 29, 31, 32, 33, 36], "pattern": [2, 6, 91, 92, 171], "descript": 2, "certain": [2, 198, 221, 232, 245], "cluster": [2, 19, 24], "To": [2, 5, 28, 29, 31, 32], "get": [2, 31, 32, 217, 220, 221, 222, 240, 244, 245, 246, 251], "an": [2, 6, 7, 8, 11, 17, 22, 28, 29, 31, 32, 33, 35, 36, 39, 41, 42, 43, 56, 58, 59, 60, 67, 68, 73, 74, 77, 80, 81, 83, 86, 88, 103, 104, 116, 127, 131, 132, 161, 172, 189, 192, 193, 197, 202, 204, 206, 217, 220, 221, 222, 225, 231, 236, 238, 239, 240, 244, 245, 246, 249, 254, 255], "insight": 2, "question": 2, "implement": [2, 28, 29, 31, 32, 56, 67, 73, 100, 117, 130, 139], "popular": [2, 10, 89], "simpl": [2, 4, 5, 7, 8, 31, 32, 190, 203, 251], "method": [2, 10, 14, 17, 22, 28, 29, 31, 32, 41, 42, 43, 57, 58, 60, 89, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 225, 249], "appli": [2, 5, 6, 31, 32, 39, 42, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 171, 190, 201, 203, 219, 235, 242], "stl10": 2, "requir": [2, 17, 22, 28, 29, 31, 32], "some": [2, 7, 10, 28, 29, 31, 32, 33, 35, 71, 72, 84, 85, 89, 251], "packag": [2, 5, 11], "besid": 2, "nidl": [2, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 256], "let": [2, 31, 32], "": [2, 5, 7, 17, 22, 28, 29, 31, 32, 59, 66, 67, 68, 70, 73, 74, 76, 79, 90, 93, 94, 95, 101, 102, 104, 114, 115, 116, 128, 131, 132, 133, 135, 136, 137, 138, 161, 172, 195, 198, 208, 218, 219, 223, 224, 229, 232, 241, 242, 247, 248], "first": [2, 5, 6, 8, 28, 29, 31, 32, 101, 104, 116, 128, 129, 131, 132, 135, 225, 249], "start": [2, 68, 74, 198, 232], "import": [2, 4, 5, 6, 7, 8, 31, 32, 33, 35, 36, 41, 43, 58, 89, 103, 105, 116, 117, 118, 127, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 254, 255], "our": [2, 5], "standard": [2, 67, 69, 73, 75, 103, 104, 116, 127, 131, 132, 204, 207, 224, 236, 248], "librari": 2, "below": [2, 28, 29, 31, 32, 33], "o": [2, 5, 7, 185, 195, 198, 218, 219, 224, 229, 232, 241, 242, 248], "matplotlib": [2, 4, 5, 6, 7, 8, 183, 184, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "pyplot": [2, 4, 5, 6, 7, 8, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "plt": [2, 4, 5, 6, 7, 8, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "pytorch_lightn": 2, "pl": 2, "torch": [2, 6, 8, 28, 29, 31, 32, 42, 60, 100, 105, 116, 117, 118, 130, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "nn": [2, 6, 8, 10, 17, 22, 28, 29, 31, 32, 42, 60, 61, 67, 73, 101, 102, 114, 115, 128, 130, 133, 135, 136, 137, 138, 140, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "util": [2, 4, 5, 6, 7, 8, 10, 28, 29, 31, 32, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 73, 74, 76, 82, 83, 84, 85, 86, 87, 88, 89, 116, 117, 118, 132, 139, 150, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "torchvis": [2, 28, 29, 31, 32], "collect": 2, "ordereddict": 2, "copi": 2, "deepcopi": 2, "weight": [2, 10, 28, 29, 31, 32, 33, 42, 60, 61, 65, 78, 97, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 199, 205, 219, 225, 233, 237, 242, 249], "estim": [2, 4, 5, 6, 7, 8, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 57, 59, 61, 190, 203], "ssl": [2, 10, 31, 32, 39, 61], "linear": [2, 10, 28, 29, 61, 104, 116, 131, 132, 133], "logisticregress": [2, 10, 27, 28, 29, 61], "callback": [2, 10, 14, 17, 22, 28, 29, 31, 32, 61], "learningratemonitor": [2, 28, 29, 31, 32], "modelcheckpoint": 2, "transform": [2, 5, 10, 17, 21, 22, 26, 33, 39, 61, 63, 64, 71, 72, 81, 82, 84, 85, 88, 91, 92, 101, 135, 186, 187, 190, 191, 203, 224, 248, 253], "defin": [2, 10, 13, 16, 17, 22, 31, 32, 33, 34, 65, 78, 80, 83, 91, 92, 104, 116, 130, 131, 132, 133, 134, 159, 166, 167, 168, 177, 178, 179, 183, 184, 201, 204, 210, 211, 215, 216, 235, 236], "global": [2, 33, 159], "paramet": [2, 8, 14, 17, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "datadir": 2, "tmp": 2, "checkpointdir": 2, "saved_model": 2, "num_work": 2, "cpu_count": 2, "num_imag": 2, "6": [2, 4, 28, 29, 31, 32, 41, 43, 103, 117, 118, 127, 139, 150, 218, 224, 241, 248, 257], "backend": 2, "cudnn": 2, "determinst": 2, "true": [2, 4, 5, 6, 7, 8, 17, 22, 28, 29, 31, 32, 42, 48, 53, 54, 55, 58, 60, 64, 81, 82, 88, 97, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 169, 172, 174, 175, 176, 180, 183, 184, 189, 190, 193, 196, 198, 202, 203, 218, 223, 230, 232, 241, 247, 255], "benchmark": 2, "fals": [2, 4, 6, 7, 17, 22, 28, 29, 31, 32, 42, 56, 58, 60, 91, 92, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 183, 184, 190, 195, 197, 198, 203, 204, 205, 206, 207, 209, 212, 214, 218, 219, 223, 224, 225, 229, 231, 232, 236, 237, 238, 241, 242, 247, 248, 249, 250], "devic": [2, 28, 29, 31, 32], "gpu": [2, 28, 29, 31, 32], "cuda": 2, "is_avail": 2, "els": 2, "cpu": 2, "As": [2, 8, 31, 32], "mani": [2, 5, 28, 29, 31, 32], "befor": [2, 31, 32, 59, 104, 116, 131, 132, 168, 179], "provid": [2, 17, 22, 70, 76, 91, 92, 160, 199, 225, 233, 249, 256], "pre": 2, "model": [2, 10, 28, 29, 31, 32, 33, 40, 42, 60, 61, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "If": [2, 14, 28, 29, 31, 32, 42, 59, 60, 208, 225, 249], "you": [2, 5, 11, 14, 17, 22, 28, 29, 31, 32, 33, 34, 42, 60], "run": [2, 4, 5, 6, 7, 8, 28, 29, 31, 32, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 130, 166, 167, 168, 177, 178, 179, 224, 248], "local": [2, 33, 37, 42, 60], "make": [2, 58, 159], "sure": 2, "suffici": 2, "disk": [2, 28, 29, 31, 32], "space": [2, 6, 31, 32, 101, 102, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 135, 136, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 201, 235], "avail": [2, 28, 29, 31, 32, 33, 42, 58, 60], "load_pretrain": [2, 42, 60], "makedir": 2, "exist_ok": 2, "name": [2, 28, 29, 31, 32, 33, 36, 42, 59, 60, 101, 102, 114, 115, 135, 136, 137, 138, 159, 183, 184, 194, 208], "hf": [2, 33, 42, 60], "hub": [2, 33, 42, 60], "neurospin": [2, 11, 42, 60], "resnet18": 2, "data_dir": [2, 42, 60], "filepath": [2, 42, 60], "pt": 2, "allow": [2, 5, 14, 17, 22, 31, 32, 33, 34, 39, 208, 225, 249], "effici": [2, 39], "need": [2, 5, 6, 28, 29, 31, 32, 33, 39, 130, 166, 167, 168, 171, 177, 178, 179], "prepar": [2, 39], "load": [2, 8, 10, 33, 36, 37, 39, 42, 60, 89, 91, 92, 212, 214], "sampl": [2, 8, 10, 39, 61, 89, 90, 93, 94, 95, 99, 101, 102, 104, 105, 116, 117, 118, 128, 131, 132, 133, 135, 136, 139, 141, 150, 163, 164, 165, 169, 171, 174, 175, 176, 180, 192, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254], "two": [2, 5, 28, 29, 31, 32, 39, 188, 190, 203, 218, 241], "random": [2, 4, 17, 22, 39, 64, 68, 74, 80, 81, 82, 83, 88, 90, 93, 94, 95], "batch": [2, 8, 14, 17, 22, 28, 29, 31, 32, 39, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "The": [2, 5, 28, 29, 31, 32, 33, 39, 59, 67, 69, 70, 73, 75, 76, 100, 101, 102, 104, 114, 115, 116, 117, 130, 131, 132, 135, 136, 137, 138, 139, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 186, 187, 207, 208], "easiest": [2, 39], "do": [2, 5, 28, 29, 31, 32, 39], "i": [2, 5, 8, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "creat": [2, 39, 56, 64, 77, 82, 83, 86, 89, 91, 92, 103, 127, 159], "when": [2, 14, 17, 22, 28, 29, 31, 32, 39, 42, 58, 60, 183, 184, 188, 193, 208, 223, 247, 255], "being": [2, 39], "set": [2, 5, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 37, 39, 44, 68, 70, 74, 76, 89, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 195, 205, 209, 229, 237], "twice": [2, 39], "class": [2, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 207], "contrastivetransform": [2, 10, 38, 39, 61], "framework": 2, "easili": [2, 5], "extend": [2, 41, 43], "more": [2, 39, 91, 92, 256], "posit": [2, 39], "than": [2, 31, 32], "same": [2, 5, 31, 32, 33, 34, 188, 190, 203, 208, 213, 218, 241], "most": [2, 183, 184], "usual": [2, 31, 32], "obtain": [2, 31, 32], "us": [2, 4, 5, 6, 7, 8, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "onli": [2, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "def": [2, 4, 6, 28, 29, 31, 32, 58], "__init__": [2, 28, 29, 31, 32, 58], "base_transform": 2, "n_view": [2, 39], "2": [2, 4, 5, 7, 8, 28, 29, 31, 32, 33, 39, 41, 43, 58, 64, 77, 82, 83, 86, 90, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 201, 202, 203, 205, 206, 217, 218, 219, 224, 229, 230, 231, 232, 235, 237, 238, 240, 241, 242, 248, 250, 254, 255], "__call__": 2, "x": [2, 6, 7, 8, 28, 29, 31, 32, 58, 94, 95, 99, 102, 104, 105, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 136, 137, 138, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 191, 192, 193, 196, 202, 205, 206, 218, 225, 230, 234, 237, 238, 241, 249, 253, 254, 255], "return": [2, 28, 29, 31, 32, 33, 34, 35, 36, 37, 42, 56, 58, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 87, 88, 91, 92, 94, 95, 99, 101, 102, 103, 105, 114, 115, 117, 118, 127, 135, 136, 137, 138, 139, 140, 141, 150, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255], "rang": [2, 4, 5, 8, 186, 187, 221, 245], "next": [2, 5, 28, 29, 31, 32, 208], "specif": [2, 10, 17, 22, 28, 29, 31, 32, 65, 66, 78, 79, 104, 116, 131, 132, 159, 220, 244], "want": [2, 11, 31, 32, 42, 60], "choic": [2, 33], "crucial": 2, "hyperparamet": [2, 31, 32], "sinc": [2, 5, 6, 31, 32, 130, 166, 167, 168, 171, 177, 178, 179], "directli": [2, 63], "affect": [2, 17, 22], "latent": [2, 31, 32, 101, 102, 114, 115, 117, 135, 136, 137, 138, 139], "structur": [2, 5], "might": [2, 28, 29, 31, 32], "overal": 2, "experi": [2, 10, 28, 29, 31, 32, 33, 34, 35, 36, 37, 61, 256], "5": [2, 4, 6, 7, 8, 9, 70, 76, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 177, 201, 218, 219, 235, 241, 242], "follow": [2, 31, 32, 33], "origin": [2, 6, 31, 32, 63, 99], "horizont": [2, 6], "flip": 2, "crop": 2, "resiz": 2, "color": [2, 7, 10, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 183, 184], "distort": 2, "grayscal": 2, "gaussian": [2, 67, 69, 73, 75, 90, 93, 94, 95], "blur": [2, 67, 73], "comparison": 2, "reduc": [2, 65, 78, 196, 197, 199, 230, 231, 233], "effect": 2, "jitter": 2, "slightli": 2, "instead": [2, 130, 166, 167, 168, 177, 178, 179], "8": [2, 4, 6, 8, 28, 29, 31, 32, 116, 132, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181], "bright": 2, "satur": 2, "hue": 2, "better": 2, "perform": [2, 31, 32, 59, 65, 78, 130, 165, 166, 167, 168, 176, 177, 178, 179], "wa": [2, 31, 32], "faster": [2, 208], "stabl": 2, "instanc": [2, 5, 17, 22, 28, 29, 31, 32, 59, 64, 82, 83, 103, 127, 130, 166, 167, 168, 177, 178, 179], "scale": [2, 6, 8, 28, 29, 31, 32, 90, 93, 94, 95, 192, 193, 196, 201, 205, 206, 219, 225, 230, 235, 237, 238, 242, 249, 254, 255], "highli": 2, "vari": 2, "benefici": 2, "t": [2, 6, 28, 29, 31, 32], "reli": 2, "anymor": 2, "distinguish": 2, "between": [2, 5, 28, 29, 31, 32, 65, 66, 78, 79, 183, 184, 188, 190, 203, 218, 227, 241, 251], "contrast_transform": 2, "compos": [2, 33, 39, 218, 241], "randomhorizontalflip": 2, "randomresizedcrop": 2, "size": [2, 6, 7, 8, 28, 29, 31, 32, 65, 66, 68, 74, 78, 79, 80, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 168, 171, 177, 178, 179, 198, 201, 219, 224, 226, 232, 235, 242, 248], "96": [2, 4, 168, 179, 189, 202], "randomappli": 2, "colorjitt": 2, "p": 2, "randomgrayscal": 2, "gaussianblur": 2, "kernel_s": [2, 6, 167, 168, 178, 179], "9": [2, 4, 5, 97, 98], "totensor": 2, "normal": [2, 10, 28, 29, 31, 32, 61, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 185, 234, 243], "after": [2, 28, 29, 31, 32, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "discuss": 2, "techniqu": [2, 251], "now": [2, 5, 8, 31, 32, 140], "focu": 2, "similarli": 2, "cifar10": 2, "10": [2, 4, 5, 7, 8, 9, 105, 116, 118, 132, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248, 257], "airplan": 2, "bird": 2, "car": 2, "cat": 2, "deer": 2, "dog": 2, "hors": 2, "monkei": 2, "ship": 2, "truck": 2, "higher": 2, "resolut": [2, 91, 92, 104, 116, 131, 132], "pixel": 2, "500": 2, "per": 2, "addition": 2, "much": 2, "larger": [2, 31, 32], "100": [2, 4, 7, 8, 195, 198, 218, 219, 224, 227, 229, 232, 241, 242, 248], "unlabel": 2, "similar": [2, 5, 28, 29, 31, 32], "wider": [2, 31, 32], "anim": 2, "vehicl": 2, "ideal": 2, "showcas": 2, "benefit": 2, "offer": 2, "luckili": 2, "through": [2, 11, 18, 19, 20, 21, 23, 24, 25, 26], "keep": [2, 91, 92], "mind": 2, "rel": 2, "larg": 2, "ha": [2, 5, 28, 29, 31, 32, 104, 116, 131, 132], "consider": [2, 31, 32], "3gb": 2, "bit": [2, 28, 29, 31, 32], "time": [2, 4, 5, 6, 7, 8, 225, 249], "For": [2, 28, 29, 31, 32, 59, 140, 218, 241], "initi": [2, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "loader": [2, 8], "abov": 2, "unlabeled_data": 2, "via": [2, 225, 249], "train_data_contrast": 2, "valid": [2, 10, 14, 17, 22, 28, 29, 31, 32, 33, 37, 56, 57, 58, 59, 61], "root": [2, 11, 91, 92], "split": [2, 31, 32, 91, 92], "pair": [2, 91, 92], "img": 2, "stack": 2, "idx": [2, 4, 7, 198, 218, 224, 232, 241, 248], "dim": [2, 8, 28, 29, 31, 32, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "img_grid": 2, "make_grid": [2, 28, 29, 31, 32], "nrow": 2, "pad_valu": 2, "permut": [2, 5, 66, 79, 188, 190, 203], "figur": [2, 6, 183, 184], "figsiz": [2, 4, 5, 6, 7, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "titl": [2, 6, 50, 51], "imshow": [2, 6, 192, 254], "axi": [2, 6, 8, 183, 184, 188, 199, 205, 212, 214, 218, 225, 233, 234, 237, 241, 249], "off": [2, 6], "And": 2, "associ": [2, 7, 28, 29, 31, 32, 185, 193, 199, 225, 233, 249, 255], "dataload": [2, 8, 17, 22, 28, 29, 31, 32, 33], "batch_siz": [2, 8, 102, 114, 115, 117, 136, 137, 138, 139], "256": [2, 44, 101, 102, 114, 115, 135, 136, 137, 138], "train_load": 2, "shuffl": [2, 8, 17, 22], "drop_last": 2, "pin_memori": 2, "val_load": 2, "common": [2, 10, 13, 15, 16, 38, 63, 96, 100], "resnet": 2, "18": [2, 4], "architectur": [2, 8, 10, 28, 29, 31, 32, 100, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150], "f": [2, 6, 28, 29, 31, 32, 104, 116, 131, 132], "paper": [2, 31, 32], "g": [2, 28, 29, 31, 32], "layer": [2, 31, 32, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181], "mlp": [2, 31, 32, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "relu": [2, 31, 32, 104, 116, 128, 129, 130, 131, 132, 133, 134], "activ": [2, 31, 32, 101, 102, 104, 114, 115, 116, 117, 131, 132, 135, 136, 137, 138, 139], "hidden": [2, 31, 32, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "note": [2, 28, 29, 31, 32, 33, 56, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 208], "up": [2, 31, 32, 103, 104, 116, 127, 131, 132, 188, 190, 198, 203, 221, 232, 245], "simclrv2": [2, 31, 32], "author": [2, 31, 32, 33], "mention": [2, 31, 32], "boost": [2, 31, 32], "why": [2, 5], "four": 2, "dimens": [2, 5, 31, 32, 140], "deeper": 2, "show": [2, 4, 5, 6, 7, 8, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "overfit": 2, "A": [2, 4, 5, 6, 7, 8, 28, 29, 31, 32, 42, 60, 63, 91, 92, 100], "observ": 2, "u": [2, 6, 31, 32, 91, 92, 104, 116, 130, 131, 132], "compar": [2, 31, 32], "neg": 2, "lead": 2, "smoother": 2, "loss": [2, 8, 10, 28, 29, 31, 32, 33, 61, 97, 98, 99], "gradient": [2, 28, 29, 31, 32], "case": [2, 28, 29, 31, 32, 33, 36, 37], "experienc": 2, "good": 2, "result": [2, 49, 56, 159, 207], "hidden_dim": [2, 31, 32, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "128": [2, 101, 102, 114, 115, 135, 136, 137, 138], "encod": [2, 28, 29, 31, 32, 96, 100, 102, 104, 114, 115, 116, 117, 131, 132, 136, 137, 138, 139], "none": [2, 17, 22, 28, 29, 31, 32, 33, 36, 37, 42, 59, 60, 65, 67, 68, 70, 73, 74, 76, 78, 90, 91, 92, 93, 94, 95, 97, 98, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 179, 183, 184, 196, 197, 206, 208, 225, 227, 228, 230, 231, 238, 239, 249, 252], "num_class": [2, 28, 29, 118, 119, 120, 121, 122, 123, 124, 125, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158], "4": [2, 4, 5, 7, 8, 103, 116, 127, 132, 162, 163, 164, 165, 168, 169, 170, 173, 174, 175, 176, 179, 180, 181, 188, 190, 193, 196, 197, 203, 206, 221, 230, 231, 238, 245, 251, 255], "latent_s": [2, 31, 32], "fc": 2, "out_featur": 2, "ident": 2, "save_weights_onli": 2, "mode": [2, 11, 28, 29, 31, 32, 33, 128], "max": [2, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 175, 176], "monitor": [2, 28, 29, 31, 32], "val_acc_top5": 2, "logging_interv": 2, "epoch": [2, 8, 28, 29, 31, 32], "trainer_param": 2, "default_root_dir": 2, "acceler": [2, 28, 29, 31, 32], "max_epoch": [2, 28, 29, 31, 32], "lr": [2, 8, 28, 29, 31, 32], "5e": 2, "temperatur": [2, 28, 29, 31, 32], "07": 2, "weight_decai": [2, 8, 28, 29, 31, 32], "1e": [2, 8, 188, 193, 255], "random_st": [2, 17, 22, 28, 29, 31, 32], "42": [2, 4, 6, 8, 192, 193, 196, 205, 206, 225, 230, 237, 238, 249, 254, 255], "print": [2, 4, 5, 6, 8, 40, 44, 58, 103, 105, 117, 118, 127, 139, 141, 150, 204, 217, 220, 221, 222, 223, 236, 240, 244, 245, 246, 247], "found": [2, 5, 28, 29, 31, 32, 59], "pretrain": [2, 31, 32], "weight_fil": [2, 42, 60], "fitted_": 2, "fit": [2, 17, 22, 28, 29, 31, 32, 59], "deploi": 2, "downstream": [2, 31, 32], "task": [2, 31, 32], "see": [2, 31, 32, 33, 56, 70, 76, 91, 92, 212, 214], "well": [2, 31, 32], "littl": 2, "verifi": [2, 59], "whether": [2, 42, 60], "represent": [2, 31, 32, 70, 76, 100, 114, 115, 117, 137, 138, 139, 199, 225, 233, 249, 251], "featur": [2, 10, 31, 32, 89, 104, 116, 128, 129, 130, 131, 132, 133, 134, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181], "word": 2, "singl": [2, 28, 29, 31, 32, 256], "map": [2, 5, 6, 31, 32, 167, 168, 171, 178, 179, 183, 184, 190, 203, 224, 248], "predict": [2, 14, 17, 22, 28, 29, 31, 32, 105, 118, 141, 150], "base": [2, 10, 14, 17, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 61, 65, 73, 74, 75, 76, 78, 103, 127, 161, 172, 188, 208, 218, 219, 224, 241, 242, 248], "network": [2, 31, 32, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "chang": [2, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "dure": [2, 28, 29, 31, 32, 68, 74], "process": [2, 11, 28, 29, 31, 32, 103, 127], "h": [2, 31, 32, 99, 140], "necessari": 2, "further": [2, 10], "worri": 2, "too": 2, "about": [2, 33, 225, 249], "veri": [2, 5, 28, 29, 31, 32], "few": 2, "henc": 2, "expect": [2, 8, 33, 91, 92], "even": [2, 42, 60], "assum": [2, 65, 66, 78, 79, 188], "alreadi": [2, 42, 60], "been": [2, 28, 29, 31, 32], "vector": [2, 31, 32, 218, 241], "dynam": [2, 33, 35, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "so": [2, 5, 28, 29, 31, 32], "here": [2, 5, 28, 29, 31, 32, 33, 212, 214], "within": [2, 130, 166, 167, 168, 177, 178, 179], "second": [2, 4, 5, 6, 7, 8, 28, 29, 31, 32], "did": [2, 5], "ani": [2, 28, 29, 31, 32, 91, 92, 204, 236], "signific": 2, "gain": 2, "test": [2, 5, 8, 14], "while": [2, 5, 28, 29, 31, 32, 130, 166, 167, 168, 177, 178, 179], "800": 2, "64": [2, 4, 101, 102, 114, 115, 117, 135, 136, 137, 138, 139], "scale_transform": 2, "train_img_data": 2, "test_img_data": 2, "number": [2, 5, 28, 29, 39, 64, 65, 68, 74, 77, 78, 82, 83, 86, 90, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172, 183, 184, 192, 196, 197, 206, 217, 220, 221, 222, 224, 230, 231, 238, 240, 244, 245, 246, 248, 254], "len": [2, 4, 5, 6, 8, 28, 29, 31, 32, 116, 117, 118, 132, 139, 150, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 198, 217, 222, 232, 240, 246], "froozen": 2, "e": [2, 6, 11, 28, 29, 31, 32, 33, 36, 192, 254], "output": [2, 17, 22, 28, 29, 31, 32, 33, 36, 41, 43, 67, 68, 73, 74, 101, 104, 116, 128, 129, 130, 131, 132, 133, 134, 135, 140, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 207, 208], "new_model": 2, "sequenti": [2, 218, 241], "normal_": 2, "mean": [2, 28, 29, 31, 32, 37, 116, 128, 132, 165, 176, 205, 237], "std": 2, "01": [2, 9, 257], "bia": [2, 161, 172], "zero_": 2, "requires_grad_": 2, "final": [2, 8, 116, 132], "evalu": [2, 6, 171], "everi": [2, 28, 29, 31, 32, 130, 166, 167, 168, 177, 178, 179, 195, 229], "earli": 2, "stop": [2, 28, 29, 31, 32, 218, 241], "low": [2, 83], "frequenc": [2, 28, 29, 31, 32], "ensur": [2, 87], "despit": 2, "thei": [2, 5, 8, 41, 43], "smaller": 2, "20": [2, 4, 6, 7, 8, 65, 78], "50": [2, 4], "200": 2, "give": [2, 10], "intuit": 2, "transfer": 2, "recognit": 2, "like": [2, 28, 29, 31, 32, 33, 130], "classif": [2, 6, 8, 90, 93, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "test_load": 2, "val_acc": [2, 28, 29, 31, 32], "check_val_every_n_epoch": [2, 28, 29, 31, 32], "3": [2, 4, 5, 7, 8, 9, 33, 41, 43, 56, 67, 68, 70, 73, 74, 76, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 127, 131, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 189, 190, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 210, 211, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 254, 255, 257], "pred": [2, 8, 28, 29], "shape": [2, 5, 6, 8, 105, 116, 117, 118, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 204, 205, 220, 236, 237, 244], "acc": [2, 28, 29, 31, 32], "argmax": [2, 8, 28, 29, 31, 32], "float": [2, 4, 8, 28, 29, 31, 32, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 97, 98, 130, 183, 184, 186, 187, 188, 191, 193, 253, 255], "accuraci": [2, 8, 28, 29, 31, 32], "2f": 2, "_pretrained_filenam": 2, "path": [2, 33, 42, 60, 67, 68, 73, 74, 104, 116, 131, 132, 208, 209, 213, 215, 216, 218, 227, 228, 241], "join": 2, "isfil": 2, "save": [2, 33, 215, 216], "state_dict": 2, "one": [2, 5, 28, 29, 31, 32, 33, 68, 74, 81, 88, 101, 130, 135, 166, 167, 168, 177, 178, 179, 193, 255], "would": [2, 31, 32], "improv": 2, "classifi": [2, 18, 23], "60": [2, 4], "correctli": 2, "quit": 2, "impress": 2, "consid": [2, 5, 68, 74, 91, 92, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172], "dimension": [2, 31, 32], "With": 2, "achiev": 2, "80": [2, 4], "increas": [2, 206, 238], "suggest": 2, "exponenti": 2, "could": [2, 5, 28, 29, 31, 32], "finetun": [2, 31, 32], "adapt": [2, 68, 74, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "indic": [2, 17, 22, 28, 29, 31, 32, 65, 78, 128, 133, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 188, 196, 197, 198, 199, 205, 206, 218, 224, 230, 231, 232, 233, 237, 238, 241, 248, 250], "advantag": 2, "straightforward": 2, "It": [2, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "clear": 2, "its": [2, 28, 29, 31, 32, 53, 54, 208, 218, 241], "count": 2, "1000": 2, "fair": 2, "ones": 2, "becaus": [2, 5, 31, 32], "distribut": [2, 31, 32, 102, 117, 136, 139], "notic": 2, "ad": [2, 104, 116, 131, 132], "restrict": 2, "oper": [2, 28, 29, 31, 32, 130], "125": 2, "1250": 2, "done": [2, 208], "recogn": 2, "object": [2, 33, 36, 41, 43, 58, 77, 86, 183, 184, 207, 208], "check": [2, 14, 17, 22, 33, 56, 57, 58, 59], "patch": [2, 31, 32, 68, 74, 91, 92, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 219, 224, 226, 242, 248], "belong": 2, "chosen": 2, "weaker": 2, "function": [2, 5, 6, 8, 10, 12, 14, 17, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 67, 68, 70, 72, 73, 74, 76, 77, 81, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 99, 100, 101, 102, 104, 114, 115, 116, 130, 131, 132, 135, 136, 137, 138, 140, 159, 166, 167, 168, 171, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "almost": [2, 6], "strongli": 2, "iter": [2, 28, 29, 31, 32, 140], "train_transform": 2, "sigma": [2, 4, 67, 68, 69, 73, 74, 75], "train_img_aug_data": 2, "2e": 2, "scratch": 2, "73": [2, 4], "7": [2, 4, 9, 218, 241, 257], "less": 2, "leverag": 2, "amount": 2, "generaliz": 2, "sole": 2, "par": 2, "tenth": 2, "experiment": [2, 33], "limit": 2, "recent": 2, "work": [2, 5, 28, 29, 31, 32, 33, 140], "ting": 2, "chen": 2, "et": [2, 31, 32, 104, 116, 131, 132], "al": [2, 31, 32, 104, 116, 131, 132], "trend": 2, "imagenet": 2, "seem": [2, 5], "stronger": 2, "come": [2, 31, 32], "close": [2, 5], "approach": [2, 11], "combin": [2, 65, 78], "beyond": 2, "khosla": 2, "moreov": 2, "last": [2, 101, 135], "year": 2, "great": [2, 31, 32], "includ": [2, 10, 28, 29, 31, 32, 89, 91, 92], "distil": 2, "byol": 2, "redund": 2, "reduct": 2, "barlow": 2, "twin": 2, "There": 2, "explor": 2, "domain": [2, 4], "step": [2, 8, 28, 29, 31, 32, 104, 116, 131, 132], "ahead": 2, "memori": [2, 4, 5, 6, 7, 8, 208], "usag": [2, 4, 5, 6, 7, 8], "ipynb": [2, 4, 5, 6, 7, 8, 212, 214], "credit": [4, 5, 6, 7, 8], "grigi": [4, 6, 7, 8], "c": [4, 5, 7, 41, 43, 99, 195, 198, 218, 219, 229, 232, 241, 242], "ambrois": [4, 5], "numpi": [4, 5, 6, 8, 186, 187, 191, 253], "np": [4, 5, 6, 8, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 189, 202, 205, 237], "surfifi": [4, 5, 6, 7, 8, 9, 10, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257], "min_depth_to_get_n_neighbor": [4, 10, 61, 185, 217, 240], "plot": [4, 5, 6, 7, 8, 10, 61, 183, 184, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "plot_trisurf": [4, 5, 6, 7, 8, 10, 61, 182, 183, 184, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 218, 219, 224, 225, 229, 230, 231, 232, 236, 237, 238, 241, 242, 248, 249, 254, 255], "interv": [4, 10, 28, 29, 31, 32, 61, 63, 77, 80, 83, 86], "vertic": [4, 5, 7, 65, 66, 67, 68, 70, 73, 74, 76, 78, 79, 90, 93, 94, 95, 103, 116, 127, 132, 161, 162, 172, 173, 183, 184, 189, 190, 192, 193, 195, 196, 197, 199, 202, 203, 204, 205, 206, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 254, 255], "triangl": [4, 5, 7, 67, 68, 70, 73, 74, 76, 103, 116, 127, 132, 183, 184, 189, 190, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 210, 211, 215, 216, 218, 219, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 247, 248, 249, 250, 251, 255], "order": [4, 5, 6, 7, 8, 17, 22, 33, 91, 92, 101, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 135, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 188, 189, 190, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 254, 255], "neigh": [4, 7, 67, 68, 73, 74, 166, 177, 198, 199, 218, 219, 225, 226, 232, 233, 241, 242, 249], "direct_neighbor": [4, 7, 161, 163, 164, 165, 169, 172, 174, 175, 176, 180, 198, 218, 224, 226, 232, 241, 248], "max_depth": 4, "ceil": 4, "displai": [4, 6, 7, 8, 10, 33, 48, 55, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194], "aug": 4, "add_axi": 4, "alpha": [4, 5, 183, 184, 186, 187, 190, 191, 203, 253], "arg": [4, 28, 29, 31, 32, 72, 85, 117, 139], "kwarg": [4, 17, 22, 28, 29, 31, 32, 41, 43, 72, 85, 117, 139], "data": [4, 8, 10, 17, 22, 28, 29, 31, 32, 33, 39, 42, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 91, 92, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 189, 192, 195, 196, 202, 205, 206, 208, 209, 212, 214, 225, 227, 228, 229, 230, 237, 238, 249, 254], "fig": [4, 5, 7, 183, 184, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "ax": [4, 5, 6, 7, 168, 179, 183, 184, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "subplot": [4, 5, 7, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "subplot_kw": [4, 5, 7, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "3d": [4, 5, 7, 190, 195, 198, 201, 203, 204, 218, 219, 224, 229, 232, 235, 236, 241, 242, 248], "aspect": [4, 5, 7, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "auto": [4, 5, 7, 33, 37, 96, 100, 190, 195, 198, 203, 204, 218, 219, 224, 229, 232, 236, 241, 242, 248], "flatten": [4, 6, 171], "colorbar": [4, 7, 183, 184, 190, 195, 197, 198, 203, 204, 218, 219, 224, 229, 231, 232, 236, 241, 242, 248], "edgecolor": [4, 5, 183, 184, 190, 203], "white": [4, 69, 75], "linewidth": [4, 7, 183, 184], "red": [4, 7, 195, 198, 218, 219, 229, 232, 241, 242], "blue": [4, 5, 7, 190, 198, 203, 218, 219, 232, 241, 242], "green": [4, 5, 7, 190, 203], "_textur": 4, "tight_layout": 4, "arrai": [4, 5, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 85, 87, 90, 91, 92, 93, 94, 95, 128, 133, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 215, 216, 218, 219, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 241, 242, 247, 248, 249, 250, 251, 254, 255], "patch_siz": [4, 68, 74], "int": [4, 17, 22, 28, 29, 31, 32, 33, 39, 65, 66, 68, 74, 77, 78, 79, 80, 86, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 188, 189, 192, 196, 197, 198, 201, 202, 204, 206, 217, 218, 219, 220, 221, 222, 224, 230, 231, 232, 235, 236, 238, 240, 241, 242, 244, 245, 246, 248, 250, 254], "n_patch": [4, 68, 74], "uniform": 4, "phi": [4, 70, 76], "180": 4, "theta": [4, 70, 76], "psi": [4, 70, 76], "controlateral_textur": 4, "prob": [4, 65, 66, 78, 79, 80], "n_vertic": [4, 6, 8, 65, 66, 78, 79, 80, 94, 95, 114, 115, 117, 137, 138, 139, 196, 206, 217, 220, 221, 222, 225, 230, 238, 240, 244, 245, 246, 249], "controlateral_data": [4, 66, 79], "group_textur": 4, "group_data": [4, 65, 78], "n_sampl": [4, 6, 8, 65, 78, 90, 93, 94, 95, 192, 193, 195, 196, 205, 206, 225, 229, 230, 237, 238, 249, 254, 255], "neigh_ind": [4, 65, 78], "groupbi": [4, 65, 78], "n_neighbor": [4, 65, 78], "n_compon": [4, 65, 78], "30": [4, 8, 65, 78], "58": 4, "74": 4, "49": 4, "62": 4, "47": 4, "15": [4, 8], "99": [4, 8], "92": 4, "54": 4, "65": [4, 6], "31": 4, "14": 4, "78": 4, "90": 4, "76": 4, "93": 4, "21": 4, "70": 4, "22": 4, "46": 4, "89": 4, "25": [4, 8], "82": 4, "11": [4, 5], "59": 4, "56": 4, "12": [4, 5, 218, 241], "19": 4, "13": [4, 7], "23": [4, 9, 257], "28": 4, "51": 4, "79": 4, "16": [4, 28, 29, 31, 32, 167, 168, 178, 179], "17": 4, "77": 4, "88": 4, "52": 4, "95": 4, "48": 4, "72": 4, "66": 4, "24": [4, 5], "69": [4, 5], "86": 4, "26": 4, "27": 4, "29": [4, 5], "83": 4, "63": 4, "36": 4, "32": [4, 104, 116, 117, 130, 131, 132, 139], "33": 4, "34": 4, "39": 4, "35": [4, 8], "37": 4, "38": 4, "45": [4, 225, 249], "71": 4, "40": [4, 6, 7, 8, 90, 93, 94, 95], "41": 4, "81": 4, "43": 4, "44": 4, "87": 4, "98": 4, "97": 4, "53": 4, "68": [4, 9, 257], "55": 4, "57": 4, "61": 4, "94": 4, "67": 4, "75": 4, "84": 4, "85": 4, "91": [4, 6, 9, 257], "aug1": 4, "aug2": 4, "aug3": 4, "tran": 4, "regist": [4, 64, 71, 82, 84, 130, 166, 167, 168, 177, 178, 179], "probabl": [4, 64, 65, 66, 78, 79, 80, 82], "script": [4, 5, 6, 7, 8], "minut": [4, 5, 6, 7, 8], "738": [4, 9, 257], "110": [4, 9, 257], "plot_augment": [4, 9, 257], "math": 5, "warn": [5, 28, 29, 31, 32, 33, 52], "scipi": [5, 190, 203], "spatial": [5, 190, 203], "mpl_toolkit": 5, "mplot3d": 5, "axes3d": [5, 183, 184], "ico2ico": [5, 10, 61, 185, 190, 193, 203, 255], "build": [5, 7, 33, 67, 68, 73, 74, 77, 86, 103, 127, 218, 219, 224, 226, 227, 228, 239, 241, 242, 248, 251], "refer": [5, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "vertices_norm": 5, "triangles_norm": 5, "standard_ico": [5, 6, 8, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 190, 193, 203, 204, 224, 236, 248, 255], "642": [5, 6, 8], "1280": [5, 6, 8], "Then": 5, "fetch": [5, 10, 33, 89, 227, 228], "freesurf": [5, 103, 127, 210, 215, 224, 227, 248], "try": 5, "find": [5, 33, 188, 190, 195, 198, 203, 205, 229, 232, 237, 239], "optim": [5, 8, 28, 29, 31, 32, 33], "rotat": [5, 70, 76, 190, 199, 203, 225, 233, 249], "modul": [5, 10, 13, 16, 17, 22, 28, 29, 31, 32, 33, 35, 42, 60, 61, 62, 63, 67, 73, 101, 102, 104, 114, 115, 116, 128, 130, 131, 132, 133, 135, 136, 137, 138, 140, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "rmse": 5, "align_vector": 5, "54571598073452": 5, "okai": 5, "doe": [5, 31, 32], "suppos": 5, "equal": 5, "zero": [5, 6, 31, 32, 68, 74, 105, 116, 117, 118, 132, 133, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 202], "issu": [5, 36], "matric": 5, "That": 5, "previou": 5, "algorithm": 5, "properli": 5, "correspond": [5, 28, 29, 31, 32, 65, 66, 78, 79, 188, 193, 220, 244, 255], "row": [5, 67, 68, 73, 74, 218, 241], "matrix": [5, 65, 78], "52573111": 5, "85065081": 5, "96386126": 5, "2664047": 5, "91298249": 5, "39960705": 5, "08232358": 5, "8944": 5, "4472": 5, "2764": 5, "8507": 5, "1815": 5, "296": 5, "9378": 5, "0272": 5, "3462": 5, "0692": 5, "213": 5, "9746": 5, "sufac": [5, 10, 160, 185], "togeth": 5, "place": [5, 37], "comput": [5, 28, 29, 31, 32, 99, 130, 140, 166, 167, 168, 177, 178, 179, 199, 208, 225, 233, 234, 249], "small": [5, 31, 32], "subset": [5, 91, 92], "point": [5, 7, 195, 198, 201, 205, 218, 219, 224, 229, 232, 234, 235, 237, 239, 241, 242, 248], "both": [5, 31, 32, 168, 179, 218, 241], "absolut": [5, 33, 36], "valu": [5, 14, 28, 29, 31, 32, 33, 41, 43, 56, 58, 67, 68, 73, 74, 91, 92, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 183, 184, 186, 187, 188, 205, 218, 237, 241], "sign": [5, 190, 203], "vertices_of_interest_norm": 5, "search": [5, 198, 218, 232, 241], "coords_of_interest": 5, "idx_of_interest": 5, "ab": 5, "sum": [5, 8, 28, 29, 31, 32], "vertices_of_interest": 5, "fs_row_idx": 5, "break": 5, "possibl": [5, 28, 29, 31, 32, 42, 60], "depend": 5, "various": 5, "until": 5, "itertool": 5, "n_permut": 5, "factori": 5, "best_rms": 5, "best_rot": 5, "catch_warn": 5, "simplefilt": 5, "ignor": [5, 17, 22, 130, 166, 167, 168, 177, 178, 179], "categori": 5, "userwarn": 5, "format": [5, 8, 14, 194, 210, 211, 215, 216], "as_matrix": 5, "52575203": 5, "85063788": 5, "971395685383565e": 5, "05": [5, 9, 257], "simpli": [5, 28, 29, 31, 32], "solv": 5, "outlin": 5, "proper": 5, "anoth": 5, "half": 5, "clearli": 5, "appear": 5, "opt": 5, "hostedtoolcach": 5, "x64": 5, "lib": 5, "python3": 5, "site": 5, "coord": [5, 10, 61, 187, 188, 189, 190, 191, 192, 193], "246": 5, "closest": [5, 199, 233], "9190925817849288": 5, "856": [5, 9, 257], "plot_match_icosahedron": [5, 9, 257], "convert": [6, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 189, 192, 202, 254], "onto": [6, 192, 193, 254, 255], "spheric": [6, 9, 96, 97, 98, 100, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 167, 168, 171, 178, 179, 185, 186, 187, 189, 191, 192, 201, 202, 218, 235, 241, 253, 254, 257], "evenli": [6, 192, 254], "resampl": [6, 192, 254], "respect": [6, 171, 192, 254], "sin": [6, 192, 254], "elev": [6, 97, 98, 101, 102, 105, 117, 118, 135, 136, 139, 141, 150, 171, 186, 187, 191, 192, 253, 254], "azimuth": [6, 97, 98, 101, 102, 105, 117, 118, 135, 136, 139, 141, 150, 171, 186, 187, 191, 192, 253, 254], "vice": 6, "versa": 6, "dataset": [6, 10, 28, 29, 31, 32, 33, 61, 90, 91, 92, 93, 94, 95, 182, 192, 193, 196, 205, 206, 225, 230, 237, 238, 249, 254, 255], "ico_ord": [6, 8, 91, 92], "n_class": [6, 8, 90, 93, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 192, 193, 196, 205, 206, 225, 230, 237, 238, 249, 254, 255], "ico_vertic": [6, 8, 90, 93, 94, 95], "ico_triangl": [6, 8], "_": [6, 31, 32, 164, 165, 175, 176, 212, 214], "make_classif": [6, 8, 10, 61, 89, 94, 95, 192, 193, 196, 205, 206, 225, 230, 237, 238, 249, 254, 255], "seed": [6, 8, 28, 29, 31, 32, 90, 93, 94, 95, 192, 193, 196, 205, 206, 225, 230, 237, 238, 249, 254, 255], "proj_textur": 6, "text2grid": [6, 10, 61, 185, 186, 187, 189, 191, 192, 202, 253, 254], "proj": [6, 189, 192, 202, 254], "lower": [6, 196, 227, 230], "nearest": [6, 65, 78, 116, 132, 133, 189, 192, 195, 202, 205, 229, 237, 254], "192": [6, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 131, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 189, 192, 202, 254], "text": [6, 7, 28, 29, 31, 32, 40, 48, 53, 54, 55], "grid2text": [6, 10, 61, 185, 186, 187, 189, 191, 192, 202, 253, 254], "is_label": [6, 8, 183, 184, 189, 193, 196, 202, 205, 206, 225, 230, 237, 238, 249, 255], "enabl": [6, 28, 29, 31, 32, 33, 41, 43], "scatter_dens": 6, "y": [6, 8, 28, 29, 31, 32, 94, 95, 186, 187, 189, 191, 192, 193, 196, 202, 205, 206, 225, 230, 237, 238, 249, 253, 254, 255], "labelx": 6, "labe": 6, "scatter": [6, 7, 195, 198, 218, 219, 224, 229, 232, 241, 242, 248], "densiti": [6, 201, 219, 235, 242], "left": [6, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 209], "width": [6, 183, 184], "bottom": 6, "height": [6, 140], "005": 6, "rect_scatt": 6, "rect_histx": 6, "rect_histi": 6, "ax_scatt": 6, "tick_param": 6, "direct": [6, 31, 32, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172, 192, 218, 241, 254], "top": [6, 31, 32], "right": [6, 31, 32, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 209], "set_xlabel": 6, "set_ylabel": 6, "ax_histx": 6, "ax_histi": 6, "bin": 6, "hist": 6, "orient": 6, "set_xlim": 6, "get_xlim": 6, "set_ylim": 6, "get_ylim": 6, "radiu": [6, 186, 187, 191, 253], "cart2sph": [6, 10, 61, 185, 186, 187, 191, 253], "sin_elev": 6, "circularli": [6, 171], "continu": [6, 171], "circular": [6, 167, 168, 171, 178, 179], "pad": [6, 116, 132, 133, 162, 167, 168, 171, 173, 178, 179], "boundari": [6, 171], "expand_dim": 6, "astyp": 6, "float32": 6, "from_numpi": 6, "pad_textur": 6, "circular_pad": [6, 10, 61, 160, 171], "padd": 6, "conv": [6, 104, 116, 128, 129, 130, 131, 132, 133, 134, 161, 172], "conv2d": [6, 140], "in_channel": [6, 8, 104, 116, 130, 131, 132], "out_channel": [6, 8, 104, 116, 130, 131, 132], "stride": [6, 167, 168, 178, 179], "conv_textur": 6, "194": [6, 105, 106, 107, 108, 109, 110, 111, 112, 113, 141, 142, 143, 144, 145, 146, 147, 148, 149, 167, 178], "785": [6, 9, 257], "plot_project_textur": [6, 9, 257], "get_rectangular_project": [7, 10, 61, 185, 201, 235], "depth": [7, 8, 104, 116, 130, 131, 132, 161, 163, 164, 165, 169, 172, 174, 175, 176, 180, 198, 217, 218, 221, 232, 240, 241, 245], "vidx": 7, "cnt": [7, 195, 198, 218, 219, 224, 229, 232, 241, 242, 248], "enumer": [7, 8, 195, 198, 218, 219, 224, 229, 232, 241, 242, 248], "marker": [7, 195, 198, 218, 219, 224, 229, 232, 241, 242, 248], "str": [7, 17, 22, 31, 32, 33, 34, 36, 42, 57, 59, 60, 65, 67, 68, 70, 73, 74, 76, 78, 91, 92, 101, 102, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 176, 194, 199, 208, 209, 210, 211, 213, 215, 216, 225, 227, 228, 233, 249, 252], "3x3": [7, 104, 116, 131, 132], "rectangular": [7, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 201, 219, 235, 242], "sphere": [7, 128, 133, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 201, 219, 223, 234, 235, 239, 242, 243, 247], "zoom": [7, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 177, 198, 201, 219, 232, 235, 242], "orang": 7, "purpl": 7, "brown": 7, "pink": 7, "grai": 7, "oliv": 7, "cyan": 7, "yellow": 7, "tan": 7, "salmon": 7, "violet": 7, "steelblu": 7, "lime": 7, "navi": 7, "node": [7, 68, 74, 161, 172, 198, 201, 232, 235, 251], "node_rec_neigh": 7, "node_tplane_neigh": 7, "289": [7, 9, 257], "197": [7, 9, 257], "plot_spherical_neighbor": [7, 9, 257], "sphericalunet": [8, 10, 61, 100, 104, 116, 130, 131, 132], "genrat": 8, "n_epoch": 8, "surfac": [8, 10, 61, 62, 63, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 131, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 183, 184, 189, 192, 202, 209, 210, 211, 212, 215, 216, 218, 241, 254, 256], "crossentropi": 8, "sgd": [8, 28, 29, 31, 32], "obviou": 8, "classificationdataset": [8, 10, 61, 89, 90, 93], "in_ord": [8, 116, 132], "start_filt": [8, 104, 116, 131, 132], "conv_mod": [8, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dine": [8, 67, 68, 73, 74, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172, 218, 241], "dine_s": [8, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "up_mod": [8, 116, 132, 133], "transpos": [8, 104, 116, 131, 132, 133, 163, 168, 169, 174, 179, 180], "loss_fn": 8, "crossentropyloss": 8, "momentum": 8, "n_batch": 8, "zero_grad": 8, "backward": [8, 28, 29, 31, 32], "current": [8, 34, 35, 37], "item": [8, 28, 29, 31, 32, 208], "7f": 8, "5d": 8, "eval": [8, 28, 29, 31, 32], "test_loss": 8, "correct": 8, "y_pred": 8, "no_grad": 8, "logit": 8, "softmax": [8, 31, 32], "type": [8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 34, 70, 76, 77, 86, 116, 132, 133, 165, 176, 199, 218, 225, 233, 241, 249], "append": 8, "concaten": [8, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "error": [8, 28, 29, 31, 32, 56, 59, 207], "n": [8, 42, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 85, 90, 93, 94, 95, 99, 161, 163, 166, 172, 174, 177, 183, 184, 188, 189, 190, 192, 193, 197, 198, 199, 202, 203, 204, 210, 211, 215, 216, 218, 219, 223, 225, 231, 232, 233, 236, 241, 242, 247, 249, 250, 251, 254, 255], "1f": 8, "avg": 8, "8f": 8, "208612": 8, "970897": 8, "833036": 8, "731564": 8, "626525": 8, "519955": 8, "413179": 8, "313090": 8, "002428": 8, "001435": 8, "000849": 8, "000611": 8, "000578": 8, "000752": 8, "001161": 8, "001719": 8, "000016": 8, "000017": 8, "000020": 8, "000023": 8, "000027": 8, "000034": 8, "000045": 8, "000063": 8, "000046": 8, "000056": 8, "000065": 8, "000060": 8, "000050": 8, "000039": 8, "000028": 8, "000000": 8, "corresspond": 8, "exactli": 8, "ground": 8, "truth": 8, "455": [8, 9, 257], "295": 8, "plot_unet_segment": [8, 9, 257], "123": [9, 257], "294": [9, 257], "02": [9, 257], "pleas": [10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "detail": 10, "raw": [10, 209, 212, 214], "mai": 10, "enough": 10, "guidelin": 10, "variou": [10, 40, 140], "help": [10, 40], "develop": [10, 11, 40], "helper": [10, 62], "integr": [10, 62, 130], "pytorch": [10, 28, 29, 31, 32, 62, 101, 102, 114, 115, 135, 136, 137, 138, 194, 256], "artifici": [10, 89], "dedic": [10, 160], "content": 10, "fetch_experi": [10, 12, 33, 61], "filter_config": [10, 12, 34, 61], "get_env": [10, 12, 35, 61], "load_interfac": [10, 12, 36, 61], "update_param": [10, 12, 37, 61], "check_typ": [10, 14, 61], "batchtypingcallback": [10, 13, 14, 61], "baseestim": [10, 16, 17, 22, 61], "classifiermixin": [10, 16, 18, 23, 61], "clustermixin": [10, 16, 19, 24, 61], "regressormixin": [10, 16, 20, 25, 61], "transformermixin": [10, 16, 21, 26, 61], "logistic_regress": [10, 29, 61], "bunch": [10, 33, 41, 43, 61], "print_multicolor": [10, 40, 48, 55, 61], "attr": [10, 40, 45, 57, 61], "fg": [10, 40, 46, 61], "hex": [10, 40, 47, 61], "print_result": [10, 40, 49, 61], "print_subtitl": [10, 40, 50, 61], "print_titl": [10, 40, 51, 61], "print_warn": [10, 40, 52, 61], "random_styl": [10, 40, 53, 61], "styliz": [10, 40, 54, 61], "_availableifdescriptor": [10, 40, 56, 61], "_estimator_i": [10, 40, 57, 61], "available_if": [10, 40, 58, 61], "check_is_fit": [10, 40, 59, 61], "basetransform": [10, 61, 63, 64, 72, 82, 85], "groupmixup": [10, 61, 63, 65, 78], "hemimixup": [10, 61, 63, 66, 79], "surfblur": [10, 61, 63, 67, 73], "surfcutout": [10, 61, 63, 68, 74], "surfnois": [10, 61, 63, 69, 75], "surfrot": [10, 61, 63, 70, 76], "apply_chained_transform": [10, 61, 63, 72, 85], "multichannel_augment": [10, 61, 63, 81, 88], "mixup": [10, 61, 78, 79, 80], "mixupaugment": [10, 61, 63, 80], "randomaugment": [10, 61, 63, 64, 81, 82, 83, 88], "listifi": [10, 61, 63, 87], "genericsurfdataset": [10, 61, 89, 91, 92], "_samples_gener": [10, 61, 93, 94], "_gener": [10, 61, 92], "sphericalvaeloss": [10, 61, 96, 97, 98], "vae": [10, 61, 97, 98, 99, 117, 135, 136, 137, 138, 139, 140], "log_likelihood": [10, 61, 96, 99], "hemifusiondecod": [10, 61, 100, 101, 135], "hemifusionencod": [10, 61, 100, 102, 136], "sphericalbas": [10, 61, 100, 103, 127], "sphericalgunet": [10, 61, 100, 104, 116, 130, 131, 132], "sphericalgvgg": [10, 61, 100, 105, 118, 141, 150], "sphericalgvgg11": [10, 61, 100, 105, 106, 141, 142], "sphericalgvgg11bn": [10, 61, 100, 107, 143], "sphericalgvgg13": [10, 61, 100, 108, 144], "sphericalgvgg13bn": [10, 61, 100, 109, 145], "sphericalgvgg16": [10, 61, 100, 110, 146], "sphericalgvgg16bn": [10, 61, 100, 111, 147], "sphericalgvgg19": [10, 61, 100, 112, 148], "sphericalgvgg19bn": [10, 61, 100, 113, 149], "sphericalhemifusiondecod": [10, 61, 100, 114, 137], "sphericalhemifusionencod": [10, 61, 100, 115, 138], "sphericalva": [10, 61, 100, 117, 139], "sphericalvgg": [10, 61, 100, 105, 118, 141, 150], "sphericalvgg11": [10, 61, 100, 118, 119, 150, 151], "sphericalvgg11bn": [10, 61, 100, 120, 152], "sphericalvgg13": [10, 61, 100, 121, 153], "sphericalvgg13bn": [10, 61, 100, 122, 154], "sphericalvgg16": [10, 61, 100, 123, 155], "sphericalvgg16bn": [10, 61, 100, 124, 156], "sphericalvgg19": [10, 61, 100, 125, 157], "sphericalvgg19bn": [10, 61, 100, 126, 158], "compute_output_dim": [10, 61, 100, 140], "vgg": [10, 61, 105, 118, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "class_factori": [10, 61, 100, 159], "downblock": [10, 61, 100, 128], "downgblock": [10, 61, 100, 129], "graphicalunet": [10, 61, 100, 130], "upblock": [10, 61, 100, 133], "upgblock": [10, 61, 100, 134], "icodineconv": [10, 61, 67, 73, 160, 161, 166, 167, 172, 177, 178], "icofixindexupsampl": [10, 61, 160, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 180, 181], "icogenericupconv": [10, 61, 160, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 180, 181], "icomaxindexupsampl": [10, 61, 160, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 180, 181], "icopool": [10, 61, 160, 164, 165, 175, 176], "icorepaconv": [10, 61, 160, 161, 166, 167, 172, 177, 178], "icospmaconv": [10, 61, 140, 160, 161, 166, 167, 172, 177, 178], "icospmaconvtranspos": [10, 61, 160, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 180, 181], "icoupconv": [10, 61, 160, 162, 163, 164, 169, 170, 173, 174, 175, 180, 181], "icoupsampl": [10, 61, 160, 162, 163, 164, 168, 169, 170, 173, 174, 175, 179, 180, 181], "debug_msg": [10, 61, 185, 194], "downsampl": [10, 61, 91, 92, 103, 127, 128, 129, 133, 163, 164, 165, 169, 174, 175, 176, 180, 185, 195, 196, 197, 205, 206, 227, 229, 230, 231, 237, 238], "downsample_data": [10, 61, 185, 195, 196, 197, 205, 206, 229, 230, 231, 237, 238], "downsample_ico": [10, 61, 185, 195, 196, 197, 205, 206, 229, 230, 231, 237, 238], "find_neighbor": [10, 61, 185, 198, 232], "find_rotation_interpol_coef": [10, 61, 185, 199, 223, 233, 247], "get_logg": [10, 61, 185, 200], "interpol": [10, 61, 70, 76, 116, 132, 133, 162, 170, 173, 181, 183, 184, 185, 189, 192, 195, 196, 197, 199, 202, 205, 206, 223, 225, 229, 230, 231, 233, 237, 238, 247, 249, 254], "interpolate_data": [10, 61, 185, 195, 196, 197, 205, 206, 229, 230, 231, 237, 238], "neighbors_rec": [10, 61, 166, 177, 185, 198, 218, 219, 232, 241, 242], "number_of_ico_vertic": [10, 61, 185, 220, 222, 244, 246], "number_of_neighbor": [10, 61, 185, 217, 221, 240, 245], "order_of_ico_from_vertic": [10, 61, 185, 220, 222, 244, 246], "order_triangl": [10, 61, 185, 223, 247], "patch_tri": [10, 61, 185, 224, 226, 248], "rotate_data": [10, 61, 70, 76, 185, 199, 225, 233, 249], "setup_log": [10, 61, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 252], "sph2cart": [10, 61, 185, 186, 187, 191, 253], "text2ico": [10, 61, 185, 190, 193, 203, 255], "find_corresponding_ord": [10, 61, 185, 188], "hideprint": [10, 61, 185, 207], "compute_and_stor": [10, 61, 185, 208], "decompose_cifti": [10, 61, 185, 209], "read_freesurf": [10, 61, 185, 210], "read_gifti": [10, 61, 185, 211], "surf_data_from_cifti": [10, 61, 185, 212], "ungzip": [10, 61, 185, 213], "volume_from_cifti": [10, 61, 185, 214], "write_freesurf": [10, 61, 185, 215], "write_gifti": [10, 61, 185, 216], "_patch_tri_it": [10, 61, 185, 226], "build_freesurfer_ico": [10, 61, 185, 227], "build_fslr_ref": [10, 61, 185, 228], "get_angle_with_xaxi": [10, 61, 185, 234], "middle_point": [10, 61, 185, 239], "triangles_to_edg": [10, 61, 185, 250], "vertex_adjacency_graph": [10, 61, 185, 251], "walk": 11, "intal": 11, "offici": 11, "releas": 11, "best": [11, 33, 190, 203], "user": [11, 34, 104, 116, 131, 132, 225, 249], "who": 11, "latest": 11, "contribut": 11, "without": [11, 28, 29, 31, 32, 213], "privileg": 11, "pip": 11, "sudo": 11, "git": 11, "repositori": [11, 42, 60], "github": [11, 100, 212, 214], "com": [11, 100], "deepinsight": 11, "page": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "document": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "explain": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "signatur": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "big": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "pictur": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "rais": [14, 56, 58, 59], "typeerror": [14, 59], "annot": 14, "traiterror": 14, "incorrect": 14, "notimplementederror": 14, "handl": [14, 28, 29, 31, 32, 42, 60], "on_predict_batch_start": 14, "trainer": [14, 17, 22, 28, 29, 31, 32], "pl_modul": 14, "batch_idx": [14, 28, 29, 31, 32], "dataloader_idx": [14, 28, 29, 31, 32], "begin": 14, "on_test_batch_start": 14, "on_train_batch_start": 14, "train": [14, 28, 29, 31, 32, 33, 39, 63, 91, 92], "on_validation_batch_start": 14, "sequenc": [17, 22, 28, 29, 31, 32, 64, 71, 82, 84], "hints_batch": [17, 22], "bool": [17, 22, 42, 57, 60, 64, 81, 82, 88, 91, 92, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 172, 183, 184, 204, 207, 209, 218, 223, 224, 236, 241, 247, 248], "basicali": [17, 22], "lightningmodul": [17, 22, 28, 29, 31, 32], "embed": [17, 22], "child": [17, 22, 33, 81, 88], "inherit": [17, 22, 33], "mixin": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "connect": [17, 22, 130, 251], "custom": [17, 22, 28, 29, 31, 32, 59], "predefin": [17, 22], "set_batch_connector": [17, 22], "pass": [17, 22, 28, 29, 31, 32, 58, 130, 166, 167, 168, 177, 178, 179], "reorgan": [17, 22], "your": [17, 22, 28, 29, 31, 32, 33, 42, 53, 54, 60, 256], "accord": [17, 22, 218, 241], "init": [17, 22, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 90, 93, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 207], "default": [17, 22, 28, 29, 31, 32, 33, 36, 39, 42, 59, 60, 64, 65, 67, 68, 70, 73, 74, 76, 77, 78, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 165, 167, 168, 172, 176, 178, 179, 183, 184, 188, 192, 193, 196, 197, 199, 201, 204, 206, 207, 208, 209, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 233, 235, 236, 238, 241, 242, 244, 247, 248, 249, 252, 254, 255], "control": [17, 22, 28, 29, 31, 32, 64, 67, 73, 82, 90, 93, 94, 95, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 168, 178, 179, 201, 219, 235, 242], "reproduc": [17, 22, 28, 29, 31, 32], "across": [17, 22, 65, 66, 78, 79], "multipl": [17, 22, 28, 29, 31, 32, 33, 34, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "list": [17, 22, 28, 29, 31, 32, 33, 37, 65, 72, 78, 85, 87, 90, 91, 92, 93, 94, 95, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 196, 197, 198, 205, 206, 230, 231, 232, 237, 238, 250], "attribut": [17, 22, 28, 29, 31, 32, 37, 41, 43, 44, 45, 58, 59], "hint": [17, 22], "specifi": [17, 22, 28, 29, 31, 32, 33, 36, 42, 60, 64, 67, 68, 73, 74, 82, 91, 92, 183, 184, 196, 197, 206, 230, 231, 238], "runtim": [17, 22], "mechan": [17, 22], "dict": [17, 22, 28, 29, 31, 32, 34, 35, 36, 37, 67, 68, 73, 74, 91, 92, 103, 127, 159, 198, 199, 218, 232, 233, 241], "estimator_typ": [18, 19, 20, 21, 23, 24, 25, 26], "tag": [18, 19, 20, 21, 23, 24, 25, 26, 42, 60], "regress": [20, 25], "regressor": [20, 25], "rate": [28, 29, 31, 32, 90, 93, 94, 95], "adam": [28, 29, 31, 32], "decai": [28, 29, 31, 32], "optionali": [28, 29, 31, 32, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "multisteplr": [28, 29], "schedul": [28, 29, 31, 32, 33], "must": [28, 29, 31, 32, 33, 59, 64, 82, 208, 213], "element": [28, 29, 31, 32], "tensor": [28, 29, 31, 32, 97, 98, 99, 101, 102, 105, 114, 115, 117, 118, 133, 135, 136, 137, 138, 139, 141, 150, 171, 194], "variabl": [28, 29, 31, 32, 33, 159], "validation_step_output": [28, 29, 31, 32], "kei": [28, 29, 31, 32, 33, 41, 43, 67, 68, 73, 74, 103, 127, 218, 241], "respectivelli": [28, 29, 31, 32], "configure_optim": [28, 29, 31, 32], "choos": [28, 29, 31, 32], "d": [28, 29, 31, 32, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 167, 168, 171, 178, 179, 189, 192, 202, 254], "But": [28, 29, 31, 32], "gan": [28, 29, 31, 32], "manual": [28, 29, 31, 32], "option": [28, 29, 31, 32, 67, 68, 73, 74, 97, 98, 101, 102, 103, 114, 115, 127, 135, 136, 137, 138, 183, 184, 196, 197, 204, 206, 207, 223, 224, 230, 231, 236, 238, 247, 248], "tupl": [28, 29, 31, 32, 33, 34, 42, 60, 87, 167, 168, 171, 178, 179], "lr_scheduler_config": [28, 29, 31, 32], "dictionari": [28, 29, 31, 32, 41, 43, 44, 67, 68, 73, 74, 91, 92, 218, 241], "lr_schedul": [28, 29, 31, 32], "whose": [28, 29, 31, 32], "configur": [28, 29, 31, 32, 33, 34, 256], "shown": [28, 29, 31, 32], "unit": [28, 29, 31, 32, 104, 116, 131, 132, 201, 219, 235, 239, 242, 243], "updat": [28, 29, 31, 32, 35], "wherea": [28, 29, 31, 32], "should": [28, 29, 31, 32, 42, 58, 60, 130, 166, 167, 168, 177, 178, 179], "metric": [28, 29, 31, 32, 65, 78], "reducelronplateau": [28, 29, 31, 32], "val_loss": [28, 29, 31, 32], "enforc": [28, 29, 31, 32], "thu": [28, 29, 31, 32], "produc": [28, 29, 31, 32], "strict": [28, 29, 31, 32], "progress": [28, 29, 31, 32], "keyword": [28, 29, 31, 32], "log": [28, 29, 31, 32, 97, 98, 99, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 200, 252], "condit": [28, 29, 31, 32, 56], "lightn": [28, 29, 31, 32, 256], "metric_to_track": [28, 29, 31, 32], "often": [28, 29, 31, 32], "optimizer1": [28, 29, 31, 32], "optimizer2": [28, 29, 31, 32], "scheduler1": [28, 29, 31, 32], "scheduler2": [28, 29, 31, 32], "lambdalr": [28, 29, 31, 32], "made": [28, 29, 31, 32], "metric_v": [28, 29, 31, 32], "thing": [28, 29, 31, 32], "know": [28, 29, 31, 32], "automat": [28, 29, 31, 32, 33, 225, 249], "precis": [28, 29, 31, 32], "lbfg": [28, 29, 31, 32], "closur": [28, 29, 31, 32], "switch": [28, 29, 31, 32], "them": [28, 29, 31, 32, 71, 84, 130, 166, 167, 168, 177, 178, 179, 208, 251], "yourself": [28, 29, 31, 32], "overrid": [28, 29, 31, 32], "optimizer_step": [28, 29, 31, 32], "hook": [28, 29, 31, 32, 130, 166, 167, 168, 177, 178, 179], "on_validation_epoch_end": [28, 29, 31, 32], "loop": [28, 29, 31, 32], "predict_step": [28, 29, 31, 32], "By": [28, 29, 31, 32], "forward": [28, 29, 31, 32, 101, 102, 104, 105, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "add": [28, 29, 31, 32, 35, 69, 75, 168, 179], "logic": [28, 29, 31, 32], "infer": [28, 29, 31, 32], "multi": [28, 29, 31, 32, 81, 88], "prevent": [28, 29, 31, 32], "oom": [28, 29, 31, 32], "basepredictionwrit": [28, 29, 31, 32], "write": [28, 29, 31, 32, 215, 216], "databas": [28, 29, 31, 32], "spawn": [28, 29, 31, 32], "happen": [28, 29, 31, 32], "strategi": [28, 29, 31, 32], "ddp_spawn": [28, 29, 31, 32], "tpu": [28, 29, 31, 32], "core": [28, 29, 31, 32], "won": [28, 29, 31, 32], "index": [28, 29, 31, 32, 67, 68, 73, 74, 195, 198, 218, 229, 232, 241, 250], "mymodel": [28, 29, 31, 32], "dm": [28, 29, 31, 32], "training_step": [28, 29, 31, 32], "addit": [28, 29, 31, 32, 104, 116, 131, 132, 161, 172], "bar": [28, 29, 31, 32], "logger": [28, 29, 31, 32, 200], "skip": [28, 29, 31, 32, 128, 129, 130], "support": [28, 29, 31, 32], "deepspe": [28, 29, 31, 32], "special": [28, 29, 31, 32, 33], "calcul": [28, 29, 31, 32], "fancier": [28, 29, 31, 32], "someth": [28, 29, 31, 32], "z": [28, 29, 31, 32, 101, 102, 117, 135, 136, 139, 186, 187, 189, 191, 192, 202, 253, 254], "out": [28, 29, 31, 32, 68, 74, 87, 105, 116, 117, 118, 132, 139, 141, 150], "super": [28, 29, 31, 32], "automatic_optim": [28, 29, 31, 32], "opt1": [28, 29, 31, 32], "opt2": [28, 29, 31, 32], "decod": [28, 29, 31, 32, 101, 104, 114, 116, 117, 131, 132, 135, 137, 139], "accumulate_grad_batch": [28, 29, 31, 32], "intern": [28, 29, 31, 32], "validation_step": [28, 29, 31, 32], "anyth": [28, 29, 31, 32], "interest": [28, 29, 31, 32, 91, 92, 103, 127], "val": [28, 29, 31, 32], "own": [28, 29, 31, 32], "whatev": [28, 29, 31, 32], "sample_img": [28, 29, 31, 32], "grid": [28, 29, 31, 32, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 189, 192, 201, 202, 219, 235, 242, 254], "add_imag": [28, 29, 31, 32], "example_imag": [28, 29, 31, 32], "labels_hat": [28, 29, 31, 32], "log_dict": [28, 29, 31, 32], "argument": [28, 29, 31, 32, 36, 59, 208, 225, 249], "recommend": [28, 29, 31, 32], "quickli": [28, 29, 31, 32], "tell": [28, 29, 31, 32], "don": [28, 29, 31, 32], "put": [28, 29, 31, 32], "disabl": [28, 29, 31, 32], "At": [28, 29, 31, 32, 116, 132], "goe": [28, 29, 31, 32], "back": [28, 29, 31, 32], "version": [31, 32, 33, 36], "x_i": [31, 32], "x_j": [31, 32], "maxim": [31, 32], "minim": [31, 32, 217, 240], "part": [31, 32], "head": [31, 32], "deep": [31, 32, 256], "cnn": [31, 32, 63], "scnn": [31, 32], "respons": [31, 32], "extract": [31, 32, 213], "denot": [31, 32], "finish": [31, 32], "remov": [31, 32, 91, 92], "extractor": [31, 32], "wors": [31, 32], "those": [31, 32, 218, 241], "new": [31, 32, 42, 60, 64, 82, 83, 103, 127, 162, 173], "becom": [31, 32], "invari": [31, 32], "stage": [31, 32], "z_i": [31, 32], "z_j": [31, 32], "therebi": [31, 32], "infonc": [31, 32], "propos": [31, 32], "aaron": [31, 32], "van": [31, 32], "den": [31, 32], "oord": [31, 32], "short": [31, 32], "over": [31, 32], "formal": [31, 32], "written": [31, 32], "ell_": [31, 32], "j": [31, 32], "frac": [31, 32], "exp": [31, 32], "sim": [31, 32], "tau": [31, 32], "sum_": [31, 32], "k": [31, 32, 65, 78, 161, 166, 172, 177, 193, 255], "2n": [31, 32], "mathbb": [31, 32], "kneq": [31, 32], "z_k": [31, 32], "logleft": [31, 32], "determin": [31, 32, 65, 78], "peak": [31, 32], "bound": [31, 32, 77, 86], "balanc": [31, 32], "influenc": [31, 32], "dissimilar": [31, 32], "versu": [31, 32], "cosin": [31, 32], "cdot": [31, 32], "maximum": [31, 32, 183, 184, 224, 248], "minimum": [31, 32, 183, 184], "converg": [31, 32], "around": [31, 32], "exact": [31, 32], "opposit": [31, 32], "flexibl": [31, 32], "altern": [31, 32], "track": [31, 32], "store": [31, 32, 91, 92, 208, 209, 210, 211, 225, 249], "projector": [31, 32], "cosineannealinglr": [31, 32], "auxiliari": [31, 32], "aux": [31, 32], "expfil": 33, "selector": [33, 34], "cv": [33, 37], "logdir": 33, "verbos": 33, "useful": 33, "date": 33, "reus": [33, 225, 249], "section": 33, "descipt": 33, "scaler": 33, "dl": 33, "interfac": [33, 34, 36, 37, 256], "probe": 33, "environ": [33, 34, 35, 37], "fullfil": 33, "constraint": 33, "impos": 33, "interface_occurr": 33, "definit": [33, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 205, 237], "term": [33, 36, 40], "interface_vers": 33, "__version__": 33, "mismatch": 33, "detect": 33, "connot": 33, "previous": 33, "param": [33, 36, 37], "cross": [33, 37, 167, 168, 178, 179], "instanci": 33, "prefix": 33, "filter": [33, 34, 67, 73, 101, 102, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 165, 166, 169, 172, 174, 176, 177, 180], "block": [33, 128, 129, 133, 134], "construct": 33, "hierarch": 33, "properti": [33, 56], "parent": 33, "separ": 33, "form": [33, 42, 60, 65, 78], "architecture_nam": [33, 42, 60], "revis": [33, 42, 60], "hug": [33, 42, 60], "face": [33, 42, 60, 183, 184], "specifid": 33, "machin": [33, 42, 60], "design": 33, "select": [33, 34], "appropri": [33, 34, 59], "scheme": 33, "hyperparapet": 33, "defautl": 33, "coupl": 33, "moment": 33, "dictionarai": 33, "config": 34, "env": [34, 35, 37], "declar": 34, "filter_conf": 34, "updated_env": 35, "environemt": 35, "my_modul": 36, "my_class": 36, "exppect": 36, "module": 36, "cl": 36, "replac": [37, 68, 74, 91, 92, 104, 116, 131, 132], "updated_param": 37, "param_set": 37, "equival": 39, "termin": 40, "expos": [41, 43], "access": [41, 43, 159, 208], "value_kei": [41, 43], "b": [41, 43], "retriev": [42, 60, 91, 92], "locat": [42, 60, 91, 92, 213], "avaiabl": [42, 60], "pathlib": [42, 60], "repo": [42, 60], "classmethod": [42, 60, 65, 78, 103, 127], "hf_download": [42, 60], "hf_id": [42, 60], "hf_revis": [42, 60], "force_download": [42, 60], "present": [42, 59, 60], "alwai": [42, 60], "resum": [42, 60], "forc": [42, 60], "id": [42, 60], "commit": [42, 60], "hash": [42, 60], "exist": [42, 60, 91, 92, 227, 228], "cach": [42, 60, 67, 68, 70, 73, 74, 76, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 208], "hub_split": [42, 60], "hub_nam": [42, 60], "interpret": [42, 60], "hub_id": [42, 60], "hub_revis": [42, 60], "decalr": [42, 60], "ns_download": [42, 60], "ns_id": [42, 60], "reset": [44, 53, 54], "background": 44, "foreground": [44, 46], "reverse_dict": 44, "revers": [44, 101, 135], "alia": [45, 46, 64, 82, 83, 103, 127], "conveni": [53, 54], "style": [53, 54], "ansi": [53, 54], "fn": 56, "attribute_nam": 56, "descriptor": 56, "protocol": 56, "decor": [56, 58, 81, 88, 208, 225, 249], "attributeerror": [56, 58], "falsei": 56, "hasattr": [56, 58], "doc": 56, "org": [56, 212, 214], "howto": 56, "html": 56, "explan": 56, "deleg": 57, "underli": 57, "truthi": 58, "callabl": [58, 91, 92, 208], "either": [58, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "otherwis": [58, 59], "unavail": 58, "helloifeven": 58, "_x_is_even": 58, "say_hello": 58, "hello": 58, "obj": 58, "msg": [59, 194], "presenc": 59, "trail": 59, "underscor": 59, "except": 59, "messag": [59, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194], "yet": 59, "string": [59, 183, 184], "substitut": 59, "eg": 59, "sparsifi": 59, "fitt": 59, "inspir": 63, "natur": 63, "randomize_per_channel": [64, 81, 82, 88], "field": [64, 67, 73, 82, 83, 103, 127], "tranform": [64, 82, 190, 203], "channel": [64, 81, 82, 88, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181], "wise": [64, 82, 116, 132], "randomli": [65, 66, 78, 79], "bootstrap": [65, 78], "measur": [65, 66, 70, 76, 78, 79, 80], "group": [65, 78], "subject": [65, 66, 78, 79, 91, 92], "vertex": [65, 66, 67, 68, 73, 74, 78, 79, 116, 132, 218, 219, 225, 241, 242, 243, 249, 250, 251], "hemispher": [65, 66, 78, 79, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "curupt": [65, 66, 78, 79, 80], "cortic": [65, 66, 70, 76, 78, 79, 80, 89, 96, 97, 98, 100, 101, 102, 104, 105, 114, 115, 116, 117, 118, 131, 132, 135, 136, 137, 138, 139, 141, 150], "meta": [65, 78], "regroup": [65, 78], "m": [65, 67, 68, 70, 73, 74, 76, 78, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 183, 184, 197, 204, 210, 211, 215, 216, 218, 223, 231, 236, 241, 247, 251], "pca": [65, 78], "compon": [65, 78, 186, 187, 191, 253], "panda": [65, 78, 91, 92], "datafram": [65, 78, 91, 92], "extern": [65, 78], "distanc": [65, 78, 166, 177], "popul": [65, 78], "bootstap": [65, 78], "arr": [65, 66, 68, 69, 70, 74, 75, 76, 78, 79], "bootsrap": [65, 78], "controlater": [66, 79], "cachedir": [67, 68, 70, 73, 74, 76, 103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 208], "convolut": [67, 73, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 166, 167, 168, 169, 172, 174, 177, 178, 179, 180], "speed": [67, 73, 103, 127], "recept": [67, 73], "deviat": [67, 69, 73, 75], "kernel": [67, 73, 167, 168, 178, 179, 218, 219, 241, 242], "icosahdron": [67, 68, 70, 73, 74, 76], "optionnali": [67, 68, 73, 74, 81, 88, 91, 92], "neighboor": [67, 68, 73, 74, 183, 184], "sufifi": [67, 68, 73, 74], "ie": [67, 68, 73, 74, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "organ": [67, 68, 73, 74, 209, 218, 241], "ring": [67, 68, 73, 74, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 165, 169, 172, 174, 176, 180, 198, 218, 232, 241], "replacement_valu": [68, 74], "connex": [68, 74], "neighborhood": [68, 74, 128, 133, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 201, 217, 219, 235, 240, 242], "ablat": [68, 74], "cutout": [68, 74], "cut": [68, 74], "nois": [69, 75], "barycentr": [70, 76, 199, 223, 225, 233, 247, 249], "angl": [70, 76, 186, 187, 191, 199, 218, 225, 233, 234, 241, 249, 253], "degre": [70, 76, 199, 225, 233, 249], "euler": [70, 76, 199, 225, 233, 249], "folder": [70, 76, 91, 92, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "smart": [70, 76, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "speedup": [70, 76, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "accordingli": [70, 76], "seri": [72, 85], "n_channel": [72, 85], "_data": [72, 85], "dtype": [77, 83, 86, 189, 202], "uplet": [77, 86, 166, 177, 199, 225, 233, 249], "aplli": 80, "rand_mask": 80, "binari": [80, 97, 98], "corrupt": 80, "mask": [80, 91, 92, 97, 98], "multichannel": [81, 88], "multichannelaugment": [81, 88], "applic": [81, 88, 104, 116, 131, 132], "high": 83, "liftifi": 87, "synthet": 89, "gene": [90, 93, 94, 95], "subject_in_pattern": [91, 92], "target": [91, 92, 190, 193, 203, 255], "target_map": [91, 92], "n_max": [91, 92], "withdraw_subject": [91, 92], "target_ico_ord": [91, 92], "scalabl": [91, 92], "neuroimag": [91, 92, 117, 139], "regex": [91, 92], "nibabel": [91, 92, 212, 214], "level": [91, 92, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 252], "identifi": [91, 92, 190, 203], "ico": [91, 92, 103, 127, 161, 172], "tabular": [91, 92], "particip": [91, 92], "tsv": [91, 92], "request": [91, 92, 100], "conta": [91, 92], "triangular": [91, 92, 183, 184, 224, 226, 248], "debug": [91, 92, 104, 105, 116, 117, 118, 130, 131, 132, 139, 141, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194], "purpos": [91, 92], "desir": [91, 92, 217, 240], "problem": [94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "ndarrai": [94, 95, 186, 187, 191, 253], "assocait": [94, 95], "variat": [96, 100, 117, 139], "svae": [96, 117, 139], "beta": [97, 98, 186, 187, 191, 253], "left_mask": [97, 98], "right_mask": [97, 98], "use_ms": [97, 98], "kl": [97, 98], "diverg": [97, 98], "likelihood": [97, 98, 99], "recon": 99, "reconstruct": [99, 101, 117, 135, 139], "w": [99, 140], "relat": [100, 103, 127], "gmvae": 100, "rest": [100, 117, 139], "state": [100, 101, 117, 135, 139], "fmri": [100, 117, 139], "autoencod": [100, 117, 139], "libilab": 100, "rsfmri": 100, "vision": [100, 224, 248], "output_shap": [101, 135, 168, 179], "before_latent_dim": [101, 135], "latent_dim": [101, 102, 114, 115, 117, 135, 136, 137, 138, 139], "conv_flt": [101, 102, 114, 115, 117, 135, 136, 137, 138, 139], "fusion_level": [101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "leakyrelu": [101, 102, 114, 115, 117, 135, 136, 137, 138, 139], "batch_norm": [101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "output_channel": [101, 135], "input_dim": [101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "squar": [101, 135, 140], "convnet": [101, 135, 140], "dens": [101, 135], "pool": [101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 176], "stochast": [101, 117, 135, 139], "left_recon_x": [101, 117, 135, 139], "input_channel": [101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "right_recon_x": [101, 117, 135, 139], "left_x": [102, 105, 114, 115, 117, 118, 136, 137, 138, 139, 141, 150], "right_x": [102, 105, 114, 115, 117, 118, 136, 137, 138, 139, 141, 150], "q": [102, 117, 136, 139], "input_ord": [103, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "n_layer": [103, 127], "repa_s": [103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "repa_zoom": [103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dynamic_repa_zoom": [103, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 137, 138, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158], "repa": [103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 219, 242], "ico_info": [103, 127], "build_ico_info": [103, 127], "tangent": [103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 177, 201, 218, 234, 235, 241], "factor": [103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 201, 219, 235, 242], "tessal": [103, 127, 204, 224, 236, 248], "tessel": [103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 224, 248], "neighbor_indic": [103, 127, 161, 163, 164, 169, 172, 174, 175, 180], "down_indic": [103, 127, 128, 133, 163, 164, 165, 169, 174, 175, 176, 180, 196, 197, 230, 231], "up_indic": [103, 127, 162, 170, 173, 181, 205, 206, 237, 238], "conv_neighbor_indic": [103, 127], "dictionnari": [103, 127, 208], "icosehedron": [103, 127], "upsampl": [103, 116, 127, 132, 133, 162, 163, 164, 169, 170, 173, 174, 175, 180, 181, 206, 238], "onform": [103, 127], "gride": [104, 105, 129, 131, 134, 141, 189, 202], "net": [104, 116, 130, 131, 132], "built": [104, 116, 131, 132], "upon": [104, 116, 131, 132], "spma": [104, 131], "rectifi": [104, 116, 131, 132], "doubl": [104, 116, 131, 132], "halv": [104, 116, 131, 132], "zhao": [104, 116, 131, 132], "ipmi": [104, 116, 131, 132], "2019": [104, 116, 130, 131, 132], "cfg": [105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "4096": [105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "init_weight": [105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "512": [105, 118, 141, 150], "stand": [105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "wether": [105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "interp": [116, 132, 133], "2x2": [116, 132], "1x1": [116, 132], "maxpad": [116, 132, 133], "shift": [116, 132, 133], "zeropad": [116, 132, 133], "sphericalgva": [117, 139], "2021": [117, 139], "vert": [117, 118, 139, 150], "tri": [117, 118, 139, 150, 226], "reparameter": [117, 139], "reparametr": [117, 139], "trick": [117, 139], "conv_lay": [128, 133], "in_ch": [128, 129, 133, 134], "out_ch": [128, 129, 133, 134], "conv_neigh_indic": [128, 133], "down_neigh_indic": [128, 164, 165, 175, 176], "pool_mod": 128, "bn": [128, 129, 133, 134], "discret": [128, 133, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "hidden_channel": 130, "pool_ratio": 130, "sum_r": 130, "act": 130, "graph": [130, 251], "unpool": 130, "hongyang": 130, "gao": 130, "shuiwang": 130, "ji": 130, "arxiv": 130, "ratio": 130, "summat": 130, "nonlinear": 130, "edge_index": 130, "overridden": [130, 166, 167, 168, 177, 178, 179], "subclass": [130, 166, 167, 168, 177, 178, 179], "although": [130, 166, 167, 168, 177, 178, 179], "recip": [130, 166, 167, 168, 177, 178, 179], "afterward": [130, 166, 167, 168, 177, 178, 179], "former": [130, 166, 167, 168, 177, 178, 179], "care": [130, 166, 167, 168, 177, 178, 179, 225, 249], "latter": [130, 166, 167, 168, 177, 178, 179], "silent": [130, 166, 167, 168, 177, 178, 179], "neigh_indic": [133, 161, 166, 172, 177], "up_neigh_indic": [133, 162, 163, 164, 169, 170, 173, 174, 175, 180, 181], "upsamp": [133, 134], "upconv": [133, 134], "x1": [133, 134], "x2": [133, 134], "max_pool_indic": [133, 164, 175], "output_dim": 140, "klass_nam": 159, "klass_param": 159, "destination_module_glob": 159, "publicli": 159, "assign": [159, 218, 241], "in_feat": [161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181], "out_feat": [161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181], "formul": [161, 172], "ico2_vertic": [161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181], "ico2_triangl": [161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181], "asarrai": [161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 180, 181, 205, 237], "ico2_x": [161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181], "fix": [162, 173, 183, 184, 243], "ico3_vertic": [162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 180, 181], "ico3_triangl": [162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 180, 181], "ico3_x": [162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 180, 181], "slow": [163, 174], "pooling_typ": [164, 165, 175, 176], "rectagular": [166, 177], "plane": [166, 177, 218, 234, 241], "neigh_weight": [166, 177], "proj_ico_x": [167, 168, 178, 179], "correl": [167, 168, 178, 179], "pad_azimuth": [167, 168, 171, 178, 179], "pad_elev": [167, 168, 171, 178, 179], "zero_pad": [168, 179], "icoconv": [168, 179], "vmin": [183, 184], "vmax": [183, 184], "black": [183, 184], "color_map": [183, 184], "linearsegmentedcolormap": [183, 184], "repres": [183, 184, 250, 251], "opac": [183, 184], "Not": [183, 184], "edg": [183, 184, 250, 251], "line": [183, 184], "cm": [183, 184], "coolwarm": [183, 184], "colormap": [183, 184], "coordin": [185, 186, 187, 189, 190, 191, 192, 202, 203, 227, 243, 253, 254], "system": 185, "tool": [185, 256], "cartesian": [186, 187, 191, 253], "array_lik": [186, 187, 191, 253], "radiant": [186, 187, 191, 253], "pi": [186, 187], "r": [186, 187, 191, 253], "ref_arrai": 188, "atol": [188, 193, 255], "0001": [188, 193, 255], "uniqu": 188, "toler": [188, 193, 255], "along": 188, "new_ord": 188, "resx": [189, 192, 202, 254], "resi": [189, 192, 202, 254], "ico2_vert": [189, 190, 192, 193, 195, 196, 198, 202, 203, 205, 206, 218, 219, 224, 229, 230, 232, 237, 238, 241, 242, 248, 254, 255], "ico2_tri": [189, 190, 192, 193, 195, 196, 198, 202, 203, 205, 206, 218, 219, 224, 229, 230, 232, 237, 238, 241, 242, 248, 254, 255], "y_grid": [189, 192, 202, 254], "ref_vertic": [190, 193, 203, 255], "ico2_std_vert": [190, 193, 203, 255], "ico2_std_tri": [190, 193, 203, 255], "projecte": [192, 254], "y_std": [193, 255], "target_vertic": [195, 205, 229, 237], "n_dim": [195, 205, 229, 237], "n_queri": [195, 205, 229, 237], "nearest_idx": [195, 229], "ico3_vert": [195, 204, 205, 217, 220, 222, 224, 225, 229, 236, 237, 240, 244, 246, 248, 249], "ico3_tri": [195, 204, 205, 217, 220, 222, 224, 225, 229, 236, 237, 240, 244, 246, 248, 249], "down3to2": [195, 229], "ico3_down_vertic": [195, 229], "n_featur": [196, 206, 225, 230, 238, 249], "consecut": [196, 197, 206, 230, 231, 238], "downsampled_data": [196, 230], "new_n_vertic": [196, 206, 230, 238], "ico4_vert": [196, 197, 206, 230, 231, 238], "ico4_tri": [196, 197, 206, 230, 231, 238], "reshap": [196, 198, 205, 206, 225, 230, 232, 237, 238, 249], "y_down": [196, 230], "squeez": [196, 206, 225, 230, 238, 249], "geometri": [197, 205, 210, 211, 215, 216, 231, 237, 239], "new_vertic": [197, 231], "newli": [197, 231], "icosahedorn": [197, 231], "new_triangl": [197, 231], "ico2_down_vert": [197, 231], "ico2_down_tri": [197, 231], "start_nod": [198, 232], "recurs": [198, 232], "node_neigh": [198, 232], "center": [198, 218, 219, 223, 232, 234, 241, 242, 247], "coeffici": [199, 233], "asssoci": [199, 233], "euclidian": [199, 233], "three": [199, 233], "setup": [200, 252], "2d": [201, 235], "grid_in_spher": [201, 219, 235, 242], "grid_in_tplan": [201, 235], "mesh": [204, 205, 218, 236, 237, 241, 251], "target_triangl": [205, 237], "miss": [205, 237], "regular": [205, 237], "interp_indic": [205, 237], "n_feat": [205, 237], "y_up": [205, 206, 237, 238], "upper": [206, 238], "upsampled_data": [206, 238], "hide_err": 207, "secur": 207, "redirect": 207, "context": 207, "manag": 207, "On": 207, "complet": [207, 208], "restor": 207, "hide": 207, "func": 208, "wrap": 208, "receiv": 208, "directori": 208, "transpar": 208, "overlap": 208, "cifti_fil": 209, "decompos": 209, "cifti": [209, 212, 214], "vol": 209, "volum": [209, 214, 256], "surf_left": 209, "surf_right": 209, "surf_fil": [210, 211, 215, 216], "read": [210, 211], "gifti": [211, 216], "surf_nam": 212, "nbviewer": [212, 214], "neurohackademi": [212, 214], "nh2020": [212, 214], "curriculum": [212, 214], "blob": [212, 214], "master": [212, 214], "markiewicz": [212, 214], "gnu": 213, "archiv": 213, "open": 213, "gz": 213, "out_path": 213, "extens": 213, "n_neigh": [217, 221, 240, 245], "length": [218, 241], "remain": [218, 241], "n_vert": [220, 244], "min_order_to_get_n_neighbor": [221, 245], "hi": [222, 246], "clockwise_from_cent": [223, 247], "clockwis": [223, 247], "view": [223, 247], "counter": [223, 247], "reordered_triangl": [223, 247], "reorder": [223, 247], "ico0_vert": [223, 247], "ico0_tri": [223, 247], "clockwise_ico0_tri": [223, 247], "counter_clockwise_ico0_tri": [223, 247], "n_job": [224, 248], "concurr": [224, 248], "job": [224, 248], "euclidean": [225, 249], "rotated_data": [225, 249], "y_rot": [225, 249], "lower_vertic": 226, "ico_fil": 227, "rescal": 227, "topologi": [227, 228], "ref_fil": 228, "fslr": 228, "point_1": 239, "point_2": 239, "middle_point_cach": 239, "middl": 239, "return_index": 250, "triangles_index": 250, "networkx": 251, "nearbi": 251, "potenti": 251, "smooth": 251, "info": 252, "logfil": 252, "unifi": 256, "compat": 256, "analyz": 256, "brain": 256, "product": 256, "advanc": 256, "availbl": 256, "hydra": 256}, "objects": {"nidl.callbacks.check_typing": [[14, 0, 1, "", "BatchTypingCallback"]], "nidl.callbacks.check_typing.BatchTypingCallback": [[14, 1, 1, "", "on_predict_batch_start"], [14, 1, 1, "", "on_test_batch_start"], [14, 1, 1, "", "on_train_batch_start"], [14, 1, 1, "", "on_validation_batch_start"]], "nidl.estimators": [[17, 0, 1, "", "BaseEstimator"], [18, 0, 1, "", "ClassifierMixin"], [19, 0, 1, "", "ClusterMixin"], [20, 0, 1, "", "RegressorMixin"], [21, 0, 1, "", "TransformerMixin"]], "nidl.estimators.base": [[22, 0, 1, "", "BaseEstimator"], [23, 0, 1, "", "ClassifierMixin"], [24, 0, 1, "", "ClusterMixin"], [25, 0, 1, "", "RegressorMixin"], [26, 0, 1, "", "TransformerMixin"]], "nidl.estimators.linear": [[28, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.LogisticRegression": [[28, 1, 1, "", "configure_optimizers"], [28, 1, 1, "", "on_validation_epoch_end"], [28, 1, 1, "", "predict_step"], [28, 1, 1, "", "training_step"], [28, 1, 1, "", "validation_step"]], "nidl.estimators.linear.logistic_regression": [[29, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.logistic_regression.LogisticRegression": [[29, 1, 1, "", "configure_optimizers"], [29, 1, 1, "", "on_validation_epoch_end"], [29, 1, 1, "", "predict_step"], [29, 1, 1, "", "training_step"], [29, 1, 1, "", "validation_step"]], "nidl.estimators.ssl": [[31, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.SimCLR": [[31, 1, 1, "", "configure_optimizers"], [31, 1, 1, "", "on_validation_epoch_end"], [31, 1, 1, "", "predict_step"], [31, 1, 1, "", "training_step"], [31, 1, 1, "", "validation_step"]], "nidl.estimators.ssl.simclr": [[32, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.simclr.SimCLR": [[32, 1, 1, "", "configure_optimizers"], [32, 1, 1, "", "on_validation_epoch_end"], [32, 1, 1, "", "predict_step"], [32, 1, 1, "", "training_step"], [32, 1, 1, "", "validation_step"]], "nidl.experiment": [[33, 2, 1, "", "fetch_experiment"], [34, 2, 1, "", "filter_config"], [35, 2, 1, "", "get_env"], [36, 2, 1, "", "load_interface"], [37, 2, 1, "", "update_params"]], "nidl.transforms.ssl": [[39, 0, 1, "", "ContrastiveTransformations"]], "nidl.utils": [[41, 0, 1, "", "Bunch"], [42, 0, 1, "", "Weights"], [55, 2, 1, "", "print_multicolor"]], "nidl.utils.Weights": [[42, 1, 1, "", "hf_download"], [42, 1, 1, "", "hub_split"], [42, 1, 1, "", "load_pretrained"], [42, 1, 1, "", "ns_download"]], "nidl.utils.bunch": [[43, 0, 1, "", "Bunch"]], "nidl.utils.color": [[44, 0, 1, "", "Colored"], [45, 2, 1, "", "attr"], [46, 2, 1, "", "fg"], [47, 2, 1, "", "hex"], [48, 2, 1, "", "print_multicolor"], [49, 2, 1, "", "print_result"], [50, 2, 1, "", "print_subtitle"], [51, 2, 1, "", "print_title"], [52, 2, 1, "", "print_warning"], [53, 2, 1, "", "random_stylize"], [54, 2, 1, "", "stylize"]], "nidl.utils.color.Colored": [[44, 1, 1, "", "attribute"], [44, 1, 1, "", "background"], [44, 1, 1, "", "foreground"], [44, 1, 1, "", "reverse_dict"]], "nidl.utils.validation": [[56, 0, 1, "", "_AvailableIfDescriptor"], [57, 2, 1, "", "_estimator_is"], [58, 2, 1, "", "available_if"], [59, 2, 1, "", "check_is_fitted"]], "nidl.utils.weights": [[60, 0, 1, "", "Weights"]], "nidl.utils.weights.Weights": [[60, 1, 1, "", "hf_download"], [60, 1, 1, "", "hub_split"], [60, 1, 1, "", "load_pretrained"], [60, 1, 1, "", "ns_download"]], "surfify.augmentation": [[64, 0, 1, "", "BaseTransformer"], [65, 0, 1, "", "GroupMixUp"], [66, 0, 1, "", "HemiMixUp"], [67, 0, 1, "", "SurfBlur"], [68, 0, 1, "", "SurfCutOut"], [69, 0, 1, "", "SurfNoise"], [70, 0, 1, "", "SurfRotation"], [71, 0, 1, "", "Transformer"], [72, 2, 1, "", "apply_chained_transforms"], [77, 2, 1, "", "interval"], [81, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.BaseTransformer": [[64, 0, 1, "", "Transform"], [64, 1, 1, "", "register"]], "surfify.augmentation.BaseTransformer.Transform": [[64, 3, 1, "", "probability"], [64, 3, 1, "", "randomize_per_channel"], [64, 3, 1, "", "transform"]], "surfify.augmentation.GroupMixUp": [[65, 1, 1, "", "groupby"], [65, 1, 1, "", "run"]], "surfify.augmentation.HemiMixUp": [[66, 1, 1, "", "run"]], "surfify.augmentation.SurfBlur": [[67, 1, 1, "", "run"]], "surfify.augmentation.SurfCutOut": [[68, 1, 1, "", "run"]], "surfify.augmentation.SurfNoise": [[69, 1, 1, "", "run"]], "surfify.augmentation.SurfRotation": [[70, 1, 1, "", "run"]], "surfify.augmentation.base": [[73, 0, 1, "", "SurfBlur"], [74, 0, 1, "", "SurfCutOut"], [75, 0, 1, "", "SurfNoise"], [76, 0, 1, "", "SurfRotation"]], "surfify.augmentation.base.SurfBlur": [[73, 1, 1, "", "run"]], "surfify.augmentation.base.SurfCutOut": [[74, 1, 1, "", "run"]], "surfify.augmentation.base.SurfNoise": [[75, 1, 1, "", "run"]], "surfify.augmentation.base.SurfRotation": [[76, 1, 1, "", "run"]], "surfify.augmentation.mixup": [[78, 0, 1, "", "GroupMixUp"], [79, 0, 1, "", "HemiMixUp"], [80, 0, 1, "", "MixUpAugmentation"]], "surfify.augmentation.mixup.GroupMixUp": [[78, 1, 1, "", "groupby"], [78, 1, 1, "", "run"]], "surfify.augmentation.mixup.HemiMixUp": [[79, 1, 1, "", "run"]], "surfify.augmentation.mixup.MixUpAugmentation": [[80, 1, 1, "", "rand_mask"]], "surfify.augmentation.utils": [[82, 0, 1, "", "BaseTransformer"], [83, 0, 1, "", "RandomAugmentation"], [84, 0, 1, "", "Transformer"], [85, 2, 1, "", "apply_chained_transforms"], [86, 2, 1, "", "interval"], [87, 2, 1, "", "listify"], [88, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.utils.BaseTransformer": [[82, 0, 1, "", "Transform"], [82, 1, 1, "", "register"]], "surfify.augmentation.utils.BaseTransformer.Transform": [[82, 3, 1, "", "probability"], [82, 3, 1, "", "randomize_per_channel"], [82, 3, 1, "", "transform"]], "surfify.augmentation.utils.RandomAugmentation": [[83, 0, 1, "", "Interval"]], "surfify.augmentation.utils.RandomAugmentation.Interval": [[83, 3, 1, "", "dtype"], [83, 3, 1, "", "high"], [83, 3, 1, "", "low"]], "surfify.datasets": [[90, 0, 1, "", "ClassificationDataset"], [91, 0, 1, "", "GenericSurfDataset"], [95, 2, 1, "", "make_classification"]], "surfify.datasets._generic": [[92, 0, 1, "", "GenericSurfDataset"]], "surfify.datasets._samples_generator": [[93, 0, 1, "", "ClassificationDataset"], [94, 2, 1, "", "make_classification"]], "surfify.losses": [[97, 0, 1, "", "SphericalVAELoss"]], "surfify.losses.vae": [[98, 0, 1, "", "SphericalVAELoss"], [99, 2, 1, "", "log_likelihood"]], "surfify.models": [[101, 0, 1, "", "HemiFusionDecoder"], [102, 0, 1, "", "HemiFusionEncoder"], [103, 0, 1, "", "SphericalBase"], [104, 0, 1, "", "SphericalGUNet"], [105, 0, 1, "", "SphericalGVGG"], [106, 0, 1, "", "SphericalGVGG11"], [107, 0, 1, "", "SphericalGVGG11BN"], [108, 0, 1, "", "SphericalGVGG13"], [109, 0, 1, "", "SphericalGVGG13BN"], [110, 0, 1, "", "SphericalGVGG16"], [111, 0, 1, "", "SphericalGVGG16BN"], [112, 0, 1, "", "SphericalGVGG19"], [113, 0, 1, "", "SphericalGVGG19BN"], [114, 0, 1, "", "SphericalHemiFusionDecoder"], [115, 0, 1, "", "SphericalHemiFusionEncoder"], [116, 0, 1, "", "SphericalUNet"], [117, 0, 1, "", "SphericalVAE"], [118, 0, 1, "", "SphericalVGG"], [119, 0, 1, "", "SphericalVGG11"], [120, 0, 1, "", "SphericalVGG11BN"], [121, 0, 1, "", "SphericalVGG13"], [122, 0, 1, "", "SphericalVGG13BN"], [123, 0, 1, "", "SphericalVGG16"], [124, 0, 1, "", "SphericalVGG16BN"], [125, 0, 1, "", "SphericalVGG19"], [126, 0, 1, "", "SphericalVGG19BN"]], "surfify.models.HemiFusionDecoder": [[101, 1, 1, "", "forward"]], "surfify.models.HemiFusionEncoder": [[102, 1, 1, "", "forward"]], "surfify.models.SphericalBase": [[103, 0, 1, "", "Ico"], [103, 1, 1, "", "build_ico_info"]], "surfify.models.SphericalBase.Ico": [[103, 3, 1, "", "conv_neighbor_indices"], [103, 3, 1, "", "down_indices"], [103, 3, 1, "", "neighbor_indices"], [103, 3, 1, "", "order"], [103, 3, 1, "", "triangles"], [103, 3, 1, "", "up_indices"], [103, 3, 1, "", "vertices"]], "surfify.models.SphericalGUNet": [[104, 1, 1, "", "forward"]], "surfify.models.SphericalGVGG": [[105, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionDecoder": [[114, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionEncoder": [[115, 1, 1, "", "forward"]], "surfify.models.SphericalUNet": [[116, 1, 1, "", "forward"]], "surfify.models.SphericalVAE": [[117, 1, 1, "", "decode"], [117, 1, 1, "", "encode"], [117, 1, 1, "", "forward"], [117, 1, 1, "", "reparameterize"]], "surfify.models.SphericalVGG": [[118, 1, 1, "", "forward"]], "surfify.models.base": [[127, 0, 1, "", "SphericalBase"]], "surfify.models.base.SphericalBase": [[127, 0, 1, "", "Ico"], [127, 1, 1, "", "build_ico_info"]], "surfify.models.base.SphericalBase.Ico": [[127, 3, 1, "", "conv_neighbor_indices"], [127, 3, 1, "", "down_indices"], [127, 3, 1, "", "neighbor_indices"], [127, 3, 1, "", "order"], [127, 3, 1, "", "triangles"], [127, 3, 1, "", "up_indices"], [127, 3, 1, "", "vertices"]], "surfify.models.unet": [[128, 0, 1, "", "DownBlock"], [129, 0, 1, "", "DownGBlock"], [130, 0, 1, "", "GraphicalUNet"], [131, 0, 1, "", "SphericalGUNet"], [132, 0, 1, "", "SphericalUNet"], [133, 0, 1, "", "UpBlock"], [134, 0, 1, "", "UpGBlock"]], "surfify.models.unet.DownBlock": [[128, 1, 1, "", "forward"]], "surfify.models.unet.DownGBlock": [[129, 1, 1, "", "forward"]], "surfify.models.unet.GraphicalUNet": [[130, 1, 1, "", "forward"]], "surfify.models.unet.SphericalGUNet": [[131, 1, 1, "", "forward"]], "surfify.models.unet.SphericalUNet": [[132, 1, 1, "", "forward"]], "surfify.models.unet.UpBlock": [[133, 1, 1, "", "forward"]], "surfify.models.unet.UpGBlock": [[134, 1, 1, "", "forward"]], "surfify.models.vae": [[135, 0, 1, "", "HemiFusionDecoder"], [136, 0, 1, "", "HemiFusionEncoder"], [137, 0, 1, "", "SphericalHemiFusionDecoder"], [138, 0, 1, "", "SphericalHemiFusionEncoder"], [139, 0, 1, "", "SphericalVAE"], [140, 2, 1, "", "compute_output_dim"]], "surfify.models.vae.HemiFusionDecoder": [[135, 1, 1, "", "forward"]], "surfify.models.vae.HemiFusionEncoder": [[136, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionDecoder": [[137, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionEncoder": [[138, 1, 1, "", "forward"]], "surfify.models.vae.SphericalVAE": [[139, 1, 1, "", "decode"], [139, 1, 1, "", "encode"], [139, 1, 1, "", "forward"], [139, 1, 1, "", "reparameterize"]], "surfify.models.vgg": [[141, 0, 1, "", "SphericalGVGG"], [142, 0, 1, "", "SphericalGVGG11"], [143, 0, 1, "", "SphericalGVGG11BN"], [144, 0, 1, "", "SphericalGVGG13"], [145, 0, 1, "", "SphericalGVGG13BN"], [146, 0, 1, "", "SphericalGVGG16"], [147, 0, 1, "", "SphericalGVGG16BN"], [148, 0, 1, "", "SphericalGVGG19"], [149, 0, 1, "", "SphericalGVGG19BN"], [150, 0, 1, "", "SphericalVGG"], [151, 0, 1, "", "SphericalVGG11"], [152, 0, 1, "", "SphericalVGG11BN"], [153, 0, 1, "", "SphericalVGG13"], [154, 0, 1, "", "SphericalVGG13BN"], [155, 0, 1, "", "SphericalVGG16"], [156, 0, 1, "", "SphericalVGG16BN"], [157, 0, 1, "", "SphericalVGG19"], [158, 0, 1, "", "SphericalVGG19BN"], [159, 2, 1, "", "class_factory"]], "surfify.models.vgg.SphericalGVGG": [[141, 1, 1, "", "forward"]], "surfify.models.vgg.SphericalVGG": [[150, 1, 1, "", "forward"]], "surfify.nn": [[161, 0, 1, "", "IcoDiNeConv"], [162, 0, 1, "", "IcoFixIndexUpSample"], [163, 0, 1, "", "IcoGenericUpConv"], [164, 0, 1, "", "IcoMaxIndexUpSample"], [165, 0, 1, "", "IcoPool"], [166, 0, 1, "", "IcoRePaConv"], [167, 0, 1, "", "IcoSpMaConv"], [168, 0, 1, "", "IcoSpMaConvTranspose"], [169, 0, 1, "", "IcoUpConv"], [170, 0, 1, "", "IcoUpSample"]], "surfify.nn.IcoDiNeConv": [[161, 1, 1, "", "forward"]], "surfify.nn.IcoFixIndexUpSample": [[162, 1, 1, "", "forward"]], "surfify.nn.IcoGenericUpConv": [[163, 1, 1, "", "forward"]], "surfify.nn.IcoMaxIndexUpSample": [[164, 1, 1, "", "forward"]], "surfify.nn.IcoPool": [[165, 1, 1, "", "forward"]], "surfify.nn.IcoRePaConv": [[166, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConv": [[167, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConvTranspose": [[168, 1, 1, "", "forward"]], "surfify.nn.IcoUpConv": [[169, 1, 1, "", "forward"]], "surfify.nn.IcoUpSample": [[170, 1, 1, "", "forward"]], "surfify.nn.functional": [[171, 2, 1, "", "circular_pad"]], "surfify.nn.modules": [[172, 0, 1, "", "IcoDiNeConv"], [173, 0, 1, "", "IcoFixIndexUpSample"], [174, 0, 1, "", "IcoGenericUpConv"], [175, 0, 1, "", "IcoMaxIndexUpSample"], [176, 0, 1, "", "IcoPool"], [177, 0, 1, "", "IcoRePaConv"], [178, 0, 1, "", "IcoSpMaConv"], [179, 0, 1, "", "IcoSpMaConvTranspose"], [180, 0, 1, "", "IcoUpConv"], [181, 0, 1, "", "IcoUpSample"]], "surfify.nn.modules.IcoDiNeConv": [[172, 1, 1, "", "forward"]], "surfify.nn.modules.IcoFixIndexUpSample": [[173, 1, 1, "", "forward"]], "surfify.nn.modules.IcoGenericUpConv": [[174, 1, 1, "", "forward"]], "surfify.nn.modules.IcoMaxIndexUpSample": [[175, 1, 1, "", "forward"]], "surfify.nn.modules.IcoPool": [[176, 1, 1, "", "forward"]], "surfify.nn.modules.IcoRePaConv": [[177, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConv": [[178, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConvTranspose": [[179, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpConv": [[180, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpSample": [[181, 1, 1, "", "forward"]], "surfify.plotting": [[183, 2, 1, "", "plot_trisurf"]], "surfify.plotting.surface": [[184, 2, 1, "", "plot_trisurf"]], "surfify.utils": [[186, 2, 1, "", "cart2sph"], [194, 2, 1, "", "debug_msg"], [195, 2, 1, "", "downsample"], [196, 2, 1, "", "downsample_data"], [197, 2, 1, "", "downsample_ico"], [198, 2, 1, "", "find_neighbors"], [199, 2, 1, "", "find_rotation_interpol_coefs"], [200, 2, 1, "", "get_logger"], [201, 2, 1, "", "get_rectangular_projection"], [202, 2, 1, "", "grid2text"], [203, 2, 1, "", "ico2ico"], [204, 2, 1, "", "icosahedron"], [205, 2, 1, "", "interpolate"], [206, 2, 1, "", "interpolate_data"], [217, 2, 1, "", "min_depth_to_get_n_neighbors"], [218, 2, 1, "", "neighbors"], [219, 2, 1, "", "neighbors_rec"], [220, 2, 1, "", "number_of_ico_vertices"], [221, 2, 1, "", "number_of_neighbors"], [222, 2, 1, "", "order_of_ico_from_vertices"], [223, 2, 1, "", "order_triangles"], [224, 2, 1, "", "patch_tri"], [225, 2, 1, "", "rotate_data"], [252, 2, 1, "", "setup_logging"], [253, 2, 1, "", "sph2cart"], [254, 2, 1, "", "text2grid"], [255, 2, 1, "", "text2ico"]], "surfify.utils.coord": [[187, 2, 1, "", "cart2sph"], [188, 2, 1, "", "find_corresponding_order"], [189, 2, 1, "", "grid2text"], [190, 2, 1, "", "ico2ico"], [191, 2, 1, "", "sph2cart"], [192, 2, 1, "", "text2grid"], [193, 2, 1, "", "text2ico"]], "surfify.utils.io": [[207, 0, 1, "", "HidePrints"], [208, 2, 1, "", "compute_and_store"], [209, 2, 1, "", "decompose_cifti"], [210, 2, 1, "", "read_freesurfer"], [211, 2, 1, "", "read_gifti"], [212, 2, 1, "", "surf_data_from_cifti"], [213, 2, 1, "", "ungzip"], [214, 2, 1, "", "volume_from_cifti"], [215, 2, 1, "", "write_freesurfer"], [216, 2, 1, "", "write_gifti"]], "surfify.utils.sampling": [[226, 2, 1, "", "_patch_tri_iter"], [227, 2, 1, "", "build_freesurfer_ico"], [228, 2, 1, "", "build_fslr_ref"], [229, 2, 1, "", "downsample"], [230, 2, 1, "", "downsample_data"], [231, 2, 1, "", "downsample_ico"], [232, 2, 1, "", "find_neighbors"], [233, 2, 1, "", "find_rotation_interpol_coefs"], [234, 2, 1, "", "get_angle_with_xaxis"], [235, 2, 1, "", "get_rectangular_projection"], [236, 2, 1, "", "icosahedron"], [237, 2, 1, "", "interpolate"], [238, 2, 1, "", "interpolate_data"], [239, 2, 1, "", "middle_point"], [240, 2, 1, "", "min_depth_to_get_n_neighbors"], [241, 2, 1, "", "neighbors"], [242, 2, 1, "", "neighbors_rec"], [243, 2, 1, "", "normalize"], [244, 2, 1, "", "number_of_ico_vertices"], [245, 2, 1, "", "number_of_neighbors"], [246, 2, 1, "", "order_of_ico_from_vertices"], [247, 2, 1, "", "order_triangles"], [248, 2, 1, "", "patch_tri"], [249, 2, 1, "", "rotate_data"], [250, 2, 1, "", "triangles_to_edges"], [251, 2, 1, "", "vertex_adjacency_graph"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"us": [0, 3], "case": [0, 3], "spheric": [0, 3, 4, 7], "modul": [0, 3, 160], "comput": [1, 9, 257], "time": [1, 9, 257], "self": 2, "supervis": 2, "contrast": 2, "learn": 2, "simclr": [2, 30], "setup": 2, "data": [2, 6], "augment": [2, 4, 63], "dataset": [2, 8, 15, 89], "train": [2, 8], "logist": 2, "regress": 2, "baselin": 2, "conclus": 2, "surfcutout": 4, "surfnois": 4, "surfblur": 4, "surfrot": 4, "hemimixup": 4, "groupmixup": 4, "group": 4, "transform": [4, 38], "icosahedron": 5, "match": 5, "project": 6, "textur": 6, "load": 6, "3": 6, "d": 6, "surfac": [6, 182], "2": 6, "grid": 6, "uniformli": 6, "distribut": 6, "locat": 6, "integr": 6, "deep": 6, "neural": 6, "network": 6, "neighbor": 7, "direct": 7, "rectagular": 7, "tangent": 7, "plane": 7, "unet": [8, 100], "segment": 8, "inspect": 8, "model": [8, 100], "predict": 8, "label": 8, "api": [10, 12, 13, 15, 16, 27, 30, 38, 40, 61, 62, 63, 89, 96, 100, 160, 182, 185], "document": [10, 12, 13, 15, 16, 27, 30, 38, 40, 61, 62, 63, 89, 96, 100, 160, 182, 185], "nidl": [10, 11, 12, 13, 15, 16, 27, 30, 38, 40, 61], "instal": 11, "stabl": 11, "version": 11, "current": 11, "experi": 12, "callback": 13, "check_typ": 13, "base": [15, 16, 63, 100], "estim": [16, 27, 30], "linear": 27, "logistic_regress": 27, "exampl": [28, 29, 31, 32, 42, 60], "ssl": [30, 38], "util": [40, 63, 185], "bunch": 40, "color": 40, "valid": 40, "weight": 40, "search": 61, "surfifi": [62, 63, 89, 96, 100, 160, 182, 185], "mixup": 63, "_samples_gener": 89, "_gener": 89, "loss": 96, "vae": [96, 100], "vgg": 100, "nn": 160, "function": 160, "plot": 182, "coord": 185, "io": 185, "sampl": 185}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Use Cases": [[0, "use-cases"]], "Spherical Modules Use Cases": [[0, "spherical-modules-use-cases"], [3, "spherical-modules-use-cases"]], "Computation times": [[1, "computation-times"], [9, "computation-times"], [257, "computation-times"]], "Self-Supervised Contrastive Learning with SimCLR": [[2, "self-supervised-contrastive-learning-with-simclr"]], "Setup": [[2, "setup"]], "Data Augmentation for Contrastive Learning": [[2, "data-augmentation-for-contrastive-learning"]], "Dataset": [[2, "dataset"]], "Training": [[2, "training"]], "Logistic Regression": [[2, "logistic-regression"]], "Baseline": [[2, "baseline"]], "Conclusion": [[2, "conclusion"]], "Spherical augmentations": [[4, "spherical-augmentations"]], "SurfCutOut": [[4, "surfcutout"]], "SurfNoise": [[4, "surfnoise"]], "SurfBlur": [[4, "surfblur"]], "SurfRotation": [[4, "surfrotation"]], "HemiMixUp": [[4, "hemimixup"]], "GroupMixUp": [[4, "groupmixup"]], "GroupMixUp group": [[4, "groupmixup-group"]], "Transformer": [[4, "transformer"]], "Icosahedron matching": [[5, "icosahedron-matching"]], "Project texture": [[6, "project-texture"]], "Load data": [[6, "load-data"]], "3-D surface to 2-D grid projection": [[6, "d-surface-to-2-d-grid-projection"]], "2-D grid to 3-D surface projection": [[6, "d-grid-to-3-d-surface-projection"]], "Uniformly distributed locations": [[6, "uniformly-distributed-locations"]], "Integration in deep neural network": [[6, "integration-in-deep-neural-network"]], "Spherical neighbors": [[7, "spherical-neighbors"]], "Direct Neighbor": [[7, "direct-neighbor"]], "Rectagular Tangent Plane Neighbor": [[7, "rectagular-tangent-plane-neighbor"]], "UNet segmentation": [[8, "unet-segmentation"]], "Inspect dataset": [[8, "inspect-dataset"]], "Train the model": [[8, "train-the-model"]], "Inspect the predicted labels": [[8, "inspect-the-predicted-labels"]], "API documentation of NIDL": [[10, "api-documentation-of-nidl"]], "Installing nidl": [[11, "installing-nidl"]], "Installing a stable version": [[11, "installing-a-stable-version"]], "Installing the current version": [[11, "installing-the-current-version"]], "API documentation of nidl": [[12, "api-documentation-of-nidl"]], "nidl": [[12, "nidl"]], "nidl.experiment": [[12, "nidl-experiment"]], "API documentation of nidl.callbacks": [[13, "api-documentation-of-nidl-callbacks"]], "nidl.callbacks": [[13, "nidl-callbacks"]], "nidl.callbacks.check_typing": [[13, "nidl-callbacks-check-typing"]], "API documentation of nidl.datasets": [[15, "api-documentation-of-nidl-datasets"]], "nidl.datasets": [[15, "nidl-datasets"]], "nidl.datasets.base": [[15, "nidl-datasets-base"]], "API documentation of nidl.estimators": [[16, "api-documentation-of-nidl-estimators"]], "nidl.estimators": [[16, "nidl-estimators"]], "nidl.estimators.base": [[16, "nidl-estimators-base"]], "API documentation of nidl.estimators.linear": [[27, "api-documentation-of-nidl-estimators-linear"]], "nidl.estimators.linear": [[27, "nidl-estimators-linear"]], "nidl.estimators.linear.logistic_regression": [[27, "nidl-estimators-linear-logistic-regression"]], "Examples": [[28, "examples"], [29, "examples"], [31, "examples"], [32, "examples"], [42, "examples"], [60, "examples"]], "API documentation of nidl.estimators.ssl": [[30, "api-documentation-of-nidl-estimators-ssl"]], "nidl.estimators.ssl": [[30, "nidl-estimators-ssl"]], "nidl.estimators.ssl.simclr": [[30, "id1"]], "API documentation of nidl.transforms": [[38, "api-documentation-of-nidl-transforms"]], "nidl.transforms": [[38, "nidl-transforms"]], "nidl.transforms.ssl": [[38, "nidl-transforms-ssl"]], "API documentation of nidl.utils": [[40, "api-documentation-of-nidl-utils"]], "nidl.utils": [[40, "nidl-utils"]], "nidl.utils.bunch": [[40, "id1"]], "nidl.utils.color": [[40, "nidl-utils-color"]], "nidl.utils.validation": [[40, "nidl-utils-validation"]], "nidl.utils.weights": [[40, "id2"]], "Search in API documentation of NIDL": [[61, "search-in-api-documentation-of-nidl"]], "API documentation of surfify": [[62, "api-documentation-of-surfify"]], "surfify": [[62, "surfify"]], "API documentation of surfify.augmentation": [[63, "api-documentation-of-surfify-augmentation"]], "surfify.augmentation": [[63, "surfify-augmentation"]], "surfify.augmentation.base": [[63, "surfify-augmentation-base"]], "surfify.augmentation.mixup": [[63, "surfify-augmentation-mixup"]], "surfify.augmentation.utils": [[63, "surfify-augmentation-utils"]], "API documentation of surfify.datasets": [[89, "api-documentation-of-surfify-datasets"]], "surfify.datasets": [[89, "surfify-datasets"]], "surfify.datasets._samples_generator": [[89, "surfify-datasets-samples-generator"]], "surfify.datasets._generic": [[89, "surfify-datasets-generic"]], "API documentation of surfify.losses": [[96, "api-documentation-of-surfify-losses"]], "surfify.losses": [[96, "surfify-losses"]], "surfify.losses.vae": [[96, "surfify-losses-vae"]], "API documentation of surfify.models": [[100, "api-documentation-of-surfify-models"]], "surfify.models": [[100, "surfify-models"]], "surfify.models.base": [[100, "surfify-models-base"]], "surfify.models.vae": [[100, "surfify-models-vae"]], "surfify.models.vgg": [[100, "surfify-models-vgg"]], "surfify.models.unet": [[100, "surfify-models-unet"]], "API documentation of surfify.nn": [[160, "api-documentation-of-surfify-nn"]], "surfify.nn": [[160, "surfify-nn"]], "surfify.nn.functional": [[160, "surfify-nn-functional"]], "surfify.nn.modules": [[160, "surfify-nn-modules"]], "API documentation of surfify.plotting": [[182, "api-documentation-of-surfify-plotting"]], "surfify.plotting": [[182, "surfify-plotting"]], "surfify.plotting.surface": [[182, "surfify-plotting-surface"]], "API documentation of surfify.utils": [[185, "api-documentation-of-surfify-utils"]], "surfify.utils": [[185, "surfify-utils"]], "surfify.utils.coord": [[185, "surfify-utils-coord"]], "surfify.utils.io": [[185, "surfify-utils-io"]], "surfify.utils.sampling": [[185, "surfify-utils-sampling"]]}, "indexentries": {"batchtypingcallback (class in nidl.callbacks.check_typing)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback"]], "on_predict_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_predict_batch_start"]], "on_test_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_test_batch_start"]], "on_train_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_train_batch_start"]], "on_validation_batch_start() (nidl.callbacks.check_typing.batchtypingcallback method)": [[14, "nidl.callbacks.check_typing.BatchTypingCallback.on_validation_batch_start"]], "baseestimator (class in nidl.estimators)": [[17, "nidl.estimators.BaseEstimator"]], "classifiermixin (class in nidl.estimators)": [[18, "nidl.estimators.ClassifierMixin"]], "clustermixin (class in nidl.estimators)": [[19, "nidl.estimators.ClusterMixin"]], "regressormixin (class in nidl.estimators)": [[20, "nidl.estimators.RegressorMixin"]], "transformermixin (class in nidl.estimators)": [[21, "nidl.estimators.TransformerMixin"]], "baseestimator (class in nidl.estimators.base)": [[22, "nidl.estimators.base.BaseEstimator"]], "classifiermixin (class in nidl.estimators.base)": [[23, "nidl.estimators.base.ClassifierMixin"]], "clustermixin (class in nidl.estimators.base)": [[24, "nidl.estimators.base.ClusterMixin"]], "regressormixin (class in nidl.estimators.base)": [[25, "nidl.estimators.base.RegressorMixin"]], "transformermixin (class in nidl.estimators.base)": [[26, "nidl.estimators.base.TransformerMixin"]], "logisticregression (class in nidl.estimators.linear)": [[28, "nidl.estimators.linear.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logisticregression method)": [[28, "nidl.estimators.linear.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logisticregression method)": [[28, "nidl.estimators.linear.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logisticregression method)": [[28, "nidl.estimators.linear.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logisticregression method)": [[28, "nidl.estimators.linear.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logisticregression method)": [[28, "nidl.estimators.linear.LogisticRegression.validation_step"]], "logisticregression (class in nidl.estimators.linear.logistic_regression)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[29, "nidl.estimators.linear.logistic_regression.LogisticRegression.validation_step"]], "simclr (class in nidl.estimators.ssl)": [[31, "nidl.estimators.ssl.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr method)": [[31, "nidl.estimators.ssl.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr method)": [[31, "nidl.estimators.ssl.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr method)": [[31, "nidl.estimators.ssl.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr method)": [[31, "nidl.estimators.ssl.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr method)": [[31, "nidl.estimators.ssl.SimCLR.validation_step"]], "simclr (class in nidl.estimators.ssl.simclr)": [[32, "nidl.estimators.ssl.simclr.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr.simclr method)": [[32, "nidl.estimators.ssl.simclr.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr.simclr method)": [[32, "nidl.estimators.ssl.simclr.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr.simclr method)": [[32, "nidl.estimators.ssl.simclr.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr.simclr method)": [[32, "nidl.estimators.ssl.simclr.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr.simclr method)": [[32, "nidl.estimators.ssl.simclr.SimCLR.validation_step"]], "fetch_experiment() (in module nidl.experiment)": [[33, "nidl.experiment.fetch_experiment"]], "filter_config() (in module nidl.experiment)": [[34, "nidl.experiment.filter_config"]], "get_env() (in module nidl.experiment)": [[35, "nidl.experiment.get_env"]], "load_interface() (in module nidl.experiment)": [[36, "nidl.experiment.load_interface"]], "update_params() (in module nidl.experiment)": [[37, "nidl.experiment.update_params"]], "contrastivetransformations (class in nidl.transforms.ssl)": [[39, "nidl.transforms.ssl.ContrastiveTransformations"]], "bunch (class in nidl.utils)": [[41, "nidl.utils.Bunch"]], "weights (class in nidl.utils)": [[42, "nidl.utils.Weights"]], "hf_download() (nidl.utils.weights class method)": [[42, "nidl.utils.Weights.hf_download"]], "hub_split() (nidl.utils.weights class method)": [[42, "nidl.utils.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights method)": [[42, "nidl.utils.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights class method)": [[42, "nidl.utils.Weights.ns_download"]], "bunch (class in nidl.utils.bunch)": [[43, "nidl.utils.bunch.Bunch"]], "colored (class in nidl.utils.color)": [[44, "nidl.utils.color.Colored"]], "attribute() (nidl.utils.color.colored method)": [[44, "nidl.utils.color.Colored.attribute"]], "background() (nidl.utils.color.colored method)": [[44, "nidl.utils.color.Colored.background"]], "foreground() (nidl.utils.color.colored method)": [[44, "nidl.utils.color.Colored.foreground"]], "reverse_dict() (nidl.utils.color.colored method)": [[44, "nidl.utils.color.Colored.reverse_dict"]], "attr() (in module nidl.utils.color)": [[45, "nidl.utils.color.attr"]], "fg() (in module nidl.utils.color)": [[46, "nidl.utils.color.fg"]], "hex() (in module nidl.utils.color)": [[47, "nidl.utils.color.hex"]], "print_multicolor() (in module nidl.utils.color)": [[48, "nidl.utils.color.print_multicolor"]], "print_result() (in module nidl.utils.color)": [[49, "nidl.utils.color.print_result"]], "print_subtitle() (in module nidl.utils.color)": [[50, "nidl.utils.color.print_subtitle"]], "print_title() (in module nidl.utils.color)": [[51, "nidl.utils.color.print_title"]], "print_warning() (in module nidl.utils.color)": [[52, "nidl.utils.color.print_warning"]], "random_stylize() (in module nidl.utils.color)": [[53, "nidl.utils.color.random_stylize"]], "stylize() (in module nidl.utils.color)": [[54, "nidl.utils.color.stylize"]], "print_multicolor() (in module nidl.utils)": [[55, "nidl.utils.print_multicolor"]], "_availableifdescriptor (class in nidl.utils.validation)": [[56, "nidl.utils.validation._AvailableIfDescriptor"]], "_estimator_is() (in module nidl.utils.validation)": [[57, "nidl.utils.validation._estimator_is"]], "available_if() (in module nidl.utils.validation)": [[58, "nidl.utils.validation.available_if"]], "check_is_fitted() (in module nidl.utils.validation)": [[59, "nidl.utils.validation.check_is_fitted"]], "weights (class in nidl.utils.weights)": [[60, "nidl.utils.weights.Weights"]], "hf_download() (nidl.utils.weights.weights class method)": [[60, "nidl.utils.weights.Weights.hf_download"]], "hub_split() (nidl.utils.weights.weights class method)": [[60, "nidl.utils.weights.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights.weights method)": [[60, "nidl.utils.weights.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights.weights class method)": [[60, "nidl.utils.weights.Weights.ns_download"]], "basetransformer (class in surfify.augmentation)": [[64, "surfify.augmentation.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation)": [[64, "surfify.augmentation.BaseTransformer.Transform"]], "probability (surfify.augmentation.basetransformer.transform attribute)": [[64, "surfify.augmentation.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.basetransformer.transform attribute)": [[64, "surfify.augmentation.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.basetransformer method)": [[64, "surfify.augmentation.BaseTransformer.register"]], "transform (surfify.augmentation.basetransformer.transform attribute)": [[64, "surfify.augmentation.BaseTransformer.Transform.transform"]], "groupmixup (class in surfify.augmentation)": [[65, "surfify.augmentation.GroupMixUp"]], "groupby() (surfify.augmentation.groupmixup class method)": [[65, "surfify.augmentation.GroupMixUp.groupby"]], "run() (surfify.augmentation.groupmixup method)": [[65, "surfify.augmentation.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation)": [[66, "surfify.augmentation.HemiMixUp"]], "run() (surfify.augmentation.hemimixup method)": [[66, "surfify.augmentation.HemiMixUp.run"]], "surfblur (class in surfify.augmentation)": [[67, "surfify.augmentation.SurfBlur"]], "run() (surfify.augmentation.surfblur method)": [[67, "surfify.augmentation.SurfBlur.run"]], "surfcutout (class in surfify.augmentation)": [[68, "surfify.augmentation.SurfCutOut"]], "run() (surfify.augmentation.surfcutout method)": [[68, "surfify.augmentation.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation)": [[69, "surfify.augmentation.SurfNoise"]], "run() (surfify.augmentation.surfnoise method)": [[69, "surfify.augmentation.SurfNoise.run"]], "surfrotation (class in surfify.augmentation)": [[70, "surfify.augmentation.SurfRotation"]], "run() (surfify.augmentation.surfrotation method)": [[70, "surfify.augmentation.SurfRotation.run"]], "transformer (class in surfify.augmentation)": [[71, "surfify.augmentation.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation)": [[72, "surfify.augmentation.apply_chained_transforms"]], "surfblur (class in surfify.augmentation.base)": [[73, "surfify.augmentation.base.SurfBlur"]], "run() (surfify.augmentation.base.surfblur method)": [[73, "surfify.augmentation.base.SurfBlur.run"]], "surfcutout (class in surfify.augmentation.base)": [[74, "surfify.augmentation.base.SurfCutOut"]], "run() (surfify.augmentation.base.surfcutout method)": [[74, "surfify.augmentation.base.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation.base)": [[75, "surfify.augmentation.base.SurfNoise"]], "run() (surfify.augmentation.base.surfnoise method)": [[75, "surfify.augmentation.base.SurfNoise.run"]], "surfrotation (class in surfify.augmentation.base)": [[76, "surfify.augmentation.base.SurfRotation"]], "run() (surfify.augmentation.base.surfrotation method)": [[76, "surfify.augmentation.base.SurfRotation.run"]], "interval() (in module surfify.augmentation)": [[77, "surfify.augmentation.interval"]], "groupmixup (class in surfify.augmentation.mixup)": [[78, "surfify.augmentation.mixup.GroupMixUp"]], "groupby() (surfify.augmentation.mixup.groupmixup class method)": [[78, "surfify.augmentation.mixup.GroupMixUp.groupby"]], "run() (surfify.augmentation.mixup.groupmixup method)": [[78, "surfify.augmentation.mixup.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation.mixup)": [[79, "surfify.augmentation.mixup.HemiMixUp"]], "run() (surfify.augmentation.mixup.hemimixup method)": [[79, "surfify.augmentation.mixup.HemiMixUp.run"]], "mixupaugmentation (class in surfify.augmentation.mixup)": [[80, "surfify.augmentation.mixup.MixUpAugmentation"]], "rand_mask() (surfify.augmentation.mixup.mixupaugmentation method)": [[80, "surfify.augmentation.mixup.MixUpAugmentation.rand_mask"]], "multichannel_augmentation() (in module surfify.augmentation)": [[81, "surfify.augmentation.multichannel_augmentation"]], "basetransformer (class in surfify.augmentation.utils)": [[82, "surfify.augmentation.utils.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation.utils)": [[82, "surfify.augmentation.utils.BaseTransformer.Transform"]], "probability (surfify.augmentation.utils.basetransformer.transform attribute)": [[82, "surfify.augmentation.utils.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.utils.basetransformer.transform attribute)": [[82, "surfify.augmentation.utils.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.utils.basetransformer method)": [[82, "surfify.augmentation.utils.BaseTransformer.register"]], "transform (surfify.augmentation.utils.basetransformer.transform attribute)": [[82, "surfify.augmentation.utils.BaseTransformer.Transform.transform"]], "randomaugmentation (class in surfify.augmentation.utils)": [[83, "surfify.augmentation.utils.RandomAugmentation"]], "randomaugmentation.interval (class in surfify.augmentation.utils)": [[83, "surfify.augmentation.utils.RandomAugmentation.Interval"]], "dtype (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[83, "surfify.augmentation.utils.RandomAugmentation.Interval.dtype"]], "high (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[83, "surfify.augmentation.utils.RandomAugmentation.Interval.high"]], "low (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[83, "surfify.augmentation.utils.RandomAugmentation.Interval.low"]], "transformer (class in surfify.augmentation.utils)": [[84, "surfify.augmentation.utils.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation.utils)": [[85, "surfify.augmentation.utils.apply_chained_transforms"]], "interval() (in module surfify.augmentation.utils)": [[86, "surfify.augmentation.utils.interval"]], "listify() (in module surfify.augmentation.utils)": [[87, "surfify.augmentation.utils.listify"]], "multichannel_augmentation() (in module surfify.augmentation.utils)": [[88, "surfify.augmentation.utils.multichannel_augmentation"]], "classificationdataset (class in surfify.datasets)": [[90, "surfify.datasets.ClassificationDataset"]], "genericsurfdataset (class in surfify.datasets)": [[91, "surfify.datasets.GenericSurfDataset"]], "genericsurfdataset (class in surfify.datasets._generic)": [[92, "surfify.datasets._generic.GenericSurfDataset"]], "classificationdataset (class in surfify.datasets._samples_generator)": [[93, "surfify.datasets._samples_generator.ClassificationDataset"]], "make_classification() (in module surfify.datasets._samples_generator)": [[94, "surfify.datasets._samples_generator.make_classification"]], "make_classification() (in module surfify.datasets)": [[95, "surfify.datasets.make_classification"]], "sphericalvaeloss (class in surfify.losses)": [[97, "surfify.losses.SphericalVAELoss"]], "sphericalvaeloss (class in surfify.losses.vae)": [[98, "surfify.losses.vae.SphericalVAELoss"]], "log_likelihood() (in module surfify.losses.vae)": [[99, "surfify.losses.vae.log_likelihood"]], "hemifusiondecoder (class in surfify.models)": [[101, "surfify.models.HemiFusionDecoder"]], "forward() (surfify.models.hemifusiondecoder method)": [[101, "surfify.models.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models)": [[102, "surfify.models.HemiFusionEncoder"]], "forward() (surfify.models.hemifusionencoder method)": [[102, "surfify.models.HemiFusionEncoder.forward"]], "sphericalbase (class in surfify.models)": [[103, "surfify.models.SphericalBase"]], "sphericalbase.ico (class in surfify.models)": [[103, "surfify.models.SphericalBase.Ico"]], "build_ico_info() (surfify.models.sphericalbase class method)": [[103, "surfify.models.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.order"]], "triangles (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.sphericalbase.ico attribute)": [[103, "surfify.models.SphericalBase.Ico.vertices"]], "sphericalgunet (class in surfify.models)": [[104, "surfify.models.SphericalGUNet"]], "forward() (surfify.models.sphericalgunet method)": [[104, "surfify.models.SphericalGUNet.forward"]], "sphericalgvgg (class in surfify.models)": [[105, "surfify.models.SphericalGVGG"]], "forward() (surfify.models.sphericalgvgg method)": [[105, "surfify.models.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models)": [[106, "surfify.models.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models)": [[107, "surfify.models.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models)": [[108, "surfify.models.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models)": [[109, "surfify.models.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models)": [[110, "surfify.models.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models)": [[111, "surfify.models.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models)": [[112, "surfify.models.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models)": [[113, "surfify.models.SphericalGVGG19BN"]], "sphericalhemifusiondecoder (class in surfify.models)": [[114, "surfify.models.SphericalHemiFusionDecoder"]], "forward() (surfify.models.sphericalhemifusiondecoder method)": [[114, "surfify.models.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models)": [[115, "surfify.models.SphericalHemiFusionEncoder"]], "forward() (surfify.models.sphericalhemifusionencoder method)": [[115, "surfify.models.SphericalHemiFusionEncoder.forward"]], "sphericalunet (class in surfify.models)": [[116, "surfify.models.SphericalUNet"]], "forward() (surfify.models.sphericalunet method)": [[116, "surfify.models.SphericalUNet.forward"]], "sphericalvae (class in surfify.models)": [[117, "surfify.models.SphericalVAE"]], "decode() (surfify.models.sphericalvae method)": [[117, "surfify.models.SphericalVAE.decode"]], "encode() (surfify.models.sphericalvae method)": [[117, "surfify.models.SphericalVAE.encode"]], "forward() (surfify.models.sphericalvae method)": [[117, "surfify.models.SphericalVAE.forward"]], "reparameterize() (surfify.models.sphericalvae method)": [[117, "surfify.models.SphericalVAE.reparameterize"]], "sphericalvgg (class in surfify.models)": [[118, "surfify.models.SphericalVGG"]], "forward() (surfify.models.sphericalvgg method)": [[118, "surfify.models.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models)": [[119, "surfify.models.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models)": [[120, "surfify.models.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models)": [[121, "surfify.models.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models)": [[122, "surfify.models.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models)": [[123, "surfify.models.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models)": [[124, "surfify.models.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models)": [[125, "surfify.models.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models)": [[126, "surfify.models.SphericalVGG19BN"]], "sphericalbase (class in surfify.models.base)": [[127, "surfify.models.base.SphericalBase"]], "sphericalbase.ico (class in surfify.models.base)": [[127, "surfify.models.base.SphericalBase.Ico"]], "build_ico_info() (surfify.models.base.sphericalbase class method)": [[127, "surfify.models.base.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.order"]], "triangles (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.base.sphericalbase.ico attribute)": [[127, "surfify.models.base.SphericalBase.Ico.vertices"]], "downblock (class in surfify.models.unet)": [[128, "surfify.models.unet.DownBlock"]], "forward() (surfify.models.unet.downblock method)": [[128, "surfify.models.unet.DownBlock.forward"]], "downgblock (class in surfify.models.unet)": [[129, "surfify.models.unet.DownGBlock"]], "forward() (surfify.models.unet.downgblock method)": [[129, "surfify.models.unet.DownGBlock.forward"]], "graphicalunet (class in surfify.models.unet)": [[130, "surfify.models.unet.GraphicalUNet"]], "forward() (surfify.models.unet.graphicalunet method)": [[130, "surfify.models.unet.GraphicalUNet.forward"]], "sphericalgunet (class in surfify.models.unet)": [[131, "surfify.models.unet.SphericalGUNet"]], "forward() (surfify.models.unet.sphericalgunet method)": [[131, "surfify.models.unet.SphericalGUNet.forward"]], "sphericalunet (class in surfify.models.unet)": [[132, "surfify.models.unet.SphericalUNet"]], "forward() (surfify.models.unet.sphericalunet method)": [[132, "surfify.models.unet.SphericalUNet.forward"]], "upblock (class in surfify.models.unet)": [[133, "surfify.models.unet.UpBlock"]], "forward() (surfify.models.unet.upblock method)": [[133, "surfify.models.unet.UpBlock.forward"]], "upgblock (class in surfify.models.unet)": [[134, "surfify.models.unet.UpGBlock"]], "forward() (surfify.models.unet.upgblock method)": [[134, "surfify.models.unet.UpGBlock.forward"]], "hemifusiondecoder (class in surfify.models.vae)": [[135, "surfify.models.vae.HemiFusionDecoder"]], "forward() (surfify.models.vae.hemifusiondecoder method)": [[135, "surfify.models.vae.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models.vae)": [[136, "surfify.models.vae.HemiFusionEncoder"]], "forward() (surfify.models.vae.hemifusionencoder method)": [[136, "surfify.models.vae.HemiFusionEncoder.forward"]], "sphericalhemifusiondecoder (class in surfify.models.vae)": [[137, "surfify.models.vae.SphericalHemiFusionDecoder"]], "forward() (surfify.models.vae.sphericalhemifusiondecoder method)": [[137, "surfify.models.vae.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models.vae)": [[138, "surfify.models.vae.SphericalHemiFusionEncoder"]], "forward() (surfify.models.vae.sphericalhemifusionencoder method)": [[138, "surfify.models.vae.SphericalHemiFusionEncoder.forward"]], "sphericalvae (class in surfify.models.vae)": [[139, "surfify.models.vae.SphericalVAE"]], "decode() (surfify.models.vae.sphericalvae method)": [[139, "surfify.models.vae.SphericalVAE.decode"]], "encode() (surfify.models.vae.sphericalvae method)": [[139, "surfify.models.vae.SphericalVAE.encode"]], "forward() (surfify.models.vae.sphericalvae method)": [[139, "surfify.models.vae.SphericalVAE.forward"]], "reparameterize() (surfify.models.vae.sphericalvae method)": [[139, "surfify.models.vae.SphericalVAE.reparameterize"]], "compute_output_dim() (in module surfify.models.vae)": [[140, "surfify.models.vae.compute_output_dim"]], "sphericalgvgg (class in surfify.models.vgg)": [[141, "surfify.models.vgg.SphericalGVGG"]], "forward() (surfify.models.vgg.sphericalgvgg method)": [[141, "surfify.models.vgg.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models.vgg)": [[142, "surfify.models.vgg.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models.vgg)": [[143, "surfify.models.vgg.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models.vgg)": [[144, "surfify.models.vgg.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models.vgg)": [[145, "surfify.models.vgg.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models.vgg)": [[146, "surfify.models.vgg.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models.vgg)": [[147, "surfify.models.vgg.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models.vgg)": [[148, "surfify.models.vgg.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models.vgg)": [[149, "surfify.models.vgg.SphericalGVGG19BN"]], "sphericalvgg (class in surfify.models.vgg)": [[150, "surfify.models.vgg.SphericalVGG"]], "forward() (surfify.models.vgg.sphericalvgg method)": [[150, "surfify.models.vgg.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models.vgg)": [[151, "surfify.models.vgg.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models.vgg)": [[152, "surfify.models.vgg.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models.vgg)": [[153, "surfify.models.vgg.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models.vgg)": [[154, "surfify.models.vgg.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models.vgg)": [[155, "surfify.models.vgg.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models.vgg)": [[156, "surfify.models.vgg.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models.vgg)": [[157, "surfify.models.vgg.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models.vgg)": [[158, "surfify.models.vgg.SphericalVGG19BN"]], "class_factory() (in module surfify.models.vgg)": [[159, "surfify.models.vgg.class_factory"]], "icodineconv (class in surfify.nn)": [[161, "surfify.nn.IcoDiNeConv"]], "forward() (surfify.nn.icodineconv method)": [[161, "surfify.nn.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn)": [[162, "surfify.nn.IcoFixIndexUpSample"]], "forward() (surfify.nn.icofixindexupsample method)": [[162, "surfify.nn.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn)": [[163, "surfify.nn.IcoGenericUpConv"]], "forward() (surfify.nn.icogenericupconv method)": [[163, "surfify.nn.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn)": [[164, "surfify.nn.IcoMaxIndexUpSample"]], "forward() (surfify.nn.icomaxindexupsample method)": [[164, "surfify.nn.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn)": [[165, "surfify.nn.IcoPool"]], "forward() (surfify.nn.icopool method)": [[165, "surfify.nn.IcoPool.forward"]], "icorepaconv (class in surfify.nn)": [[166, "surfify.nn.IcoRePaConv"]], "forward() (surfify.nn.icorepaconv method)": [[166, "surfify.nn.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn)": [[167, "surfify.nn.IcoSpMaConv"]], "forward() (surfify.nn.icospmaconv method)": [[167, "surfify.nn.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn)": [[168, "surfify.nn.IcoSpMaConvTranspose"]], "forward() (surfify.nn.icospmaconvtranspose method)": [[168, "surfify.nn.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn)": [[169, "surfify.nn.IcoUpConv"]], "forward() (surfify.nn.icoupconv method)": [[169, "surfify.nn.IcoUpConv.forward"]], "icoupsample (class in surfify.nn)": [[170, "surfify.nn.IcoUpSample"]], "forward() (surfify.nn.icoupsample method)": [[170, "surfify.nn.IcoUpSample.forward"]], "circular_pad() (in module surfify.nn.functional)": [[171, "surfify.nn.functional.circular_pad"]], "icodineconv (class in surfify.nn.modules)": [[172, "surfify.nn.modules.IcoDiNeConv"]], "forward() (surfify.nn.modules.icodineconv method)": [[172, "surfify.nn.modules.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn.modules)": [[173, "surfify.nn.modules.IcoFixIndexUpSample"]], "forward() (surfify.nn.modules.icofixindexupsample method)": [[173, "surfify.nn.modules.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn.modules)": [[174, "surfify.nn.modules.IcoGenericUpConv"]], "forward() (surfify.nn.modules.icogenericupconv method)": [[174, "surfify.nn.modules.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn.modules)": [[175, "surfify.nn.modules.IcoMaxIndexUpSample"]], "forward() (surfify.nn.modules.icomaxindexupsample method)": [[175, "surfify.nn.modules.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn.modules)": [[176, "surfify.nn.modules.IcoPool"]], "forward() (surfify.nn.modules.icopool method)": [[176, "surfify.nn.modules.IcoPool.forward"]], "icorepaconv (class in surfify.nn.modules)": [[177, "surfify.nn.modules.IcoRePaConv"]], "forward() (surfify.nn.modules.icorepaconv method)": [[177, "surfify.nn.modules.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn.modules)": [[178, "surfify.nn.modules.IcoSpMaConv"]], "forward() (surfify.nn.modules.icospmaconv method)": [[178, "surfify.nn.modules.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn.modules)": [[179, "surfify.nn.modules.IcoSpMaConvTranspose"]], "forward() (surfify.nn.modules.icospmaconvtranspose method)": [[179, "surfify.nn.modules.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn.modules)": [[180, "surfify.nn.modules.IcoUpConv"]], "forward() (surfify.nn.modules.icoupconv method)": [[180, "surfify.nn.modules.IcoUpConv.forward"]], "icoupsample (class in surfify.nn.modules)": [[181, "surfify.nn.modules.IcoUpSample"]], "forward() (surfify.nn.modules.icoupsample method)": [[181, "surfify.nn.modules.IcoUpSample.forward"]], "plot_trisurf() (in module surfify.plotting)": [[183, "surfify.plotting.plot_trisurf"]], "plot_trisurf() (in module surfify.plotting.surface)": [[184, "surfify.plotting.surface.plot_trisurf"]], "cart2sph() (in module surfify.utils)": [[186, "surfify.utils.cart2sph"]], "cart2sph() (in module surfify.utils.coord)": [[187, "surfify.utils.coord.cart2sph"]], "find_corresponding_order() (in module surfify.utils.coord)": [[188, "surfify.utils.coord.find_corresponding_order"]], "grid2text() (in module surfify.utils.coord)": [[189, "surfify.utils.coord.grid2text"]], "ico2ico() (in module surfify.utils.coord)": [[190, "surfify.utils.coord.ico2ico"]], "sph2cart() (in module surfify.utils.coord)": [[191, "surfify.utils.coord.sph2cart"]], "text2grid() (in module surfify.utils.coord)": [[192, "surfify.utils.coord.text2grid"]], "text2ico() (in module surfify.utils.coord)": [[193, "surfify.utils.coord.text2ico"]], "debug_msg() (in module surfify.utils)": [[194, "surfify.utils.debug_msg"]], "downsample() (in module surfify.utils)": [[195, "surfify.utils.downsample"]], "downsample_data() (in module surfify.utils)": [[196, "surfify.utils.downsample_data"]], "downsample_ico() (in module surfify.utils)": [[197, "surfify.utils.downsample_ico"]], "find_neighbors() (in module surfify.utils)": [[198, "surfify.utils.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils)": [[199, "surfify.utils.find_rotation_interpol_coefs"]], "get_logger() (in module surfify.utils)": [[200, "surfify.utils.get_logger"]], "get_rectangular_projection() (in module surfify.utils)": [[201, "surfify.utils.get_rectangular_projection"]], "grid2text() (in module surfify.utils)": [[202, "surfify.utils.grid2text"]], "ico2ico() (in module surfify.utils)": [[203, "surfify.utils.ico2ico"]], "icosahedron() (in module surfify.utils)": [[204, "surfify.utils.icosahedron"]], "interpolate() (in module surfify.utils)": [[205, "surfify.utils.interpolate"]], "interpolate_data() (in module surfify.utils)": [[206, "surfify.utils.interpolate_data"]], "hideprints (class in surfify.utils.io)": [[207, "surfify.utils.io.HidePrints"]], "compute_and_store() (in module surfify.utils.io)": [[208, "surfify.utils.io.compute_and_store"]], "decompose_cifti() (in module surfify.utils.io)": [[209, "surfify.utils.io.decompose_cifti"]], "read_freesurfer() (in module surfify.utils.io)": [[210, "surfify.utils.io.read_freesurfer"]], "read_gifti() (in module surfify.utils.io)": [[211, "surfify.utils.io.read_gifti"]], "surf_data_from_cifti() (in module surfify.utils.io)": [[212, "surfify.utils.io.surf_data_from_cifti"]], "ungzip() (in module surfify.utils.io)": [[213, "surfify.utils.io.ungzip"]], "volume_from_cifti() (in module surfify.utils.io)": [[214, "surfify.utils.io.volume_from_cifti"]], "write_freesurfer() (in module surfify.utils.io)": [[215, "surfify.utils.io.write_freesurfer"]], "write_gifti() (in module surfify.utils.io)": [[216, "surfify.utils.io.write_gifti"]], "min_depth_to_get_n_neighbors() (in module surfify.utils)": [[217, "surfify.utils.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils)": [[218, "surfify.utils.neighbors"]], "neighbors_rec() (in module surfify.utils)": [[219, "surfify.utils.neighbors_rec"]], "number_of_ico_vertices() (in module surfify.utils)": [[220, "surfify.utils.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils)": [[221, "surfify.utils.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils)": [[222, "surfify.utils.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils)": [[223, "surfify.utils.order_triangles"]], "patch_tri() (in module surfify.utils)": [[224, "surfify.utils.patch_tri"]], "rotate_data() (in module surfify.utils)": [[225, "surfify.utils.rotate_data"]], "_patch_tri_iter() (in module surfify.utils.sampling)": [[226, "surfify.utils.sampling._patch_tri_iter"]], "build_freesurfer_ico() (in module surfify.utils.sampling)": [[227, "surfify.utils.sampling.build_freesurfer_ico"]], "build_fslr_ref() (in module surfify.utils.sampling)": [[228, "surfify.utils.sampling.build_fslr_ref"]], "downsample() (in module surfify.utils.sampling)": [[229, "surfify.utils.sampling.downsample"]], "downsample_data() (in module surfify.utils.sampling)": [[230, "surfify.utils.sampling.downsample_data"]], "downsample_ico() (in module surfify.utils.sampling)": [[231, "surfify.utils.sampling.downsample_ico"]], "find_neighbors() (in module surfify.utils.sampling)": [[232, "surfify.utils.sampling.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils.sampling)": [[233, "surfify.utils.sampling.find_rotation_interpol_coefs"]], "get_angle_with_xaxis() (in module surfify.utils.sampling)": [[234, "surfify.utils.sampling.get_angle_with_xaxis"]], "get_rectangular_projection() (in module surfify.utils.sampling)": [[235, "surfify.utils.sampling.get_rectangular_projection"]], "icosahedron() (in module surfify.utils.sampling)": [[236, "surfify.utils.sampling.icosahedron"]], "interpolate() (in module surfify.utils.sampling)": [[237, "surfify.utils.sampling.interpolate"]], "interpolate_data() (in module surfify.utils.sampling)": [[238, "surfify.utils.sampling.interpolate_data"]], "middle_point() (in module surfify.utils.sampling)": [[239, "surfify.utils.sampling.middle_point"]], "min_depth_to_get_n_neighbors() (in module surfify.utils.sampling)": [[240, "surfify.utils.sampling.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils.sampling)": [[241, "surfify.utils.sampling.neighbors"]], "neighbors_rec() (in module surfify.utils.sampling)": [[242, "surfify.utils.sampling.neighbors_rec"]], "normalize() (in module surfify.utils.sampling)": [[243, "surfify.utils.sampling.normalize"]], "number_of_ico_vertices() (in module surfify.utils.sampling)": [[244, "surfify.utils.sampling.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils.sampling)": [[245, "surfify.utils.sampling.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils.sampling)": [[246, "surfify.utils.sampling.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils.sampling)": [[247, "surfify.utils.sampling.order_triangles"]], "patch_tri() (in module surfify.utils.sampling)": [[248, "surfify.utils.sampling.patch_tri"]], "rotate_data() (in module surfify.utils.sampling)": [[249, "surfify.utils.sampling.rotate_data"]], "triangles_to_edges() (in module surfify.utils.sampling)": [[250, "surfify.utils.sampling.triangles_to_edges"]], "vertex_adjacency_graph() (in module surfify.utils.sampling)": [[251, "surfify.utils.sampling.vertex_adjacency_graph"]], "setup_logging() (in module surfify.utils)": [[252, "surfify.utils.setup_logging"]], "sph2cart() (in module surfify.utils)": [[253, "surfify.utils.sph2cart"]], "text2grid() (in module surfify.utils)": [[254, "surfify.utils.text2grid"]], "text2ico() (in module surfify.utils)": [[255, "surfify.utils.text2ico"]]}})